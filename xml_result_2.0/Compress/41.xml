<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.19802950859533489</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;ZZ)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;Z)V</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Z)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>104</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;I)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Z)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>104</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;I)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Z)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>80ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>104</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;I)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Z)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>104</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;I)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Z)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>104</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;I)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Z)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>104</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;I)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>102</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to buf is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>114</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to buf is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>49</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.LFH_BUF is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveInputStream::readFirstLocalFileHeader([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>55</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.SKIP_BUF is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveInputStream::readFirstLocalFileHeader([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>61</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.SHORT_BUF is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveInputStream::readFirstLocalFileHeader([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>67</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.WORD_BUF is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveInputStream::readFirstLocalFileHeader([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>73</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.TWO_DWORD_BUF is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveInputStream::readFirstLocalFileHeader([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>49</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.LFH_BUF is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveInputStream::readFully([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>55</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.SKIP_BUF is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveInputStream::readFully([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>61</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.SHORT_BUF is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveInputStream::readFully([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>67</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.WORD_BUF is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveInputStream::readFully([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>73</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.TWO_DWORD_BUF is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveInputStream::readFully([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to closed with an access to hitCentralDirectory</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>33</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to hitCentralDirectory with an access to closed</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>43</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to allowStoredEntriesWithDataDescriptor with an access to closed</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>94</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to useUnicodeExtraFields with an access to closed</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>110</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to allowStoredEntriesWithDataDescriptor with an access to closed</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to closed with an access to allowStoredEntriesWithDataDescriptor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>33</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to hitCentralDirectory with an access to allowStoredEntriesWithDataDescriptor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>43</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to allowStoredEntriesWithDataDescriptor with an access to hitCentralDirectory</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>94</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to useUnicodeExtraFields with an access to hitCentralDirectory</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>110</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to allowStoredEntriesWithDataDescriptor with an access to hitCentralDirectory</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>94</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced access to useUnicodeExtraFields with an access to allowStoredEntriesWithDataDescriptor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to field closed is replaced by access to local useUnicodeExtraFields</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>33</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to field hitCentralDirectory is replaced by access to local useUnicodeExtraFields</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>43</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to field allowStoredEntriesWithDataDescriptor is replaced by access to local useUnicodeExtraFields</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>83</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to field encoding is replaced by access to local encoding</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>94</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to field useUnicodeExtraFields is replaced by access to local useUnicodeExtraFields</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>105</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to field in is replaced by access to local inputStream</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>110</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to field allowStoredEntriesWithDataDescriptor is replaced by access to local useUnicodeExtraFields</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to field closed is replaced by access to local allowStoredEntriesWithDataDescriptor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>33</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to field hitCentralDirectory is replaced by access to local allowStoredEntriesWithDataDescriptor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>43</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to field allowStoredEntriesWithDataDescriptor is replaced by access to local allowStoredEntriesWithDataDescriptor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>94</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to field useUnicodeExtraFields is replaced by access to local allowStoredEntriesWithDataDescriptor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>110</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>access to field allowStoredEntriesWithDataDescriptor is replaced by access to local allowStoredEntriesWithDataDescriptor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>93</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>local useUnicodeExtraFields is replaced by local allowStoredEntriesWithDataDescriptor to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>109</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>local allowStoredEntriesWithDataDescriptor is replaced by local useUnicodeExtraFields to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to allocate with a call to allocateDirect</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>103</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to capacity with a call to arrayOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>103</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to capacity with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>404ms</time></test></testsExecutionTime><patchExecutionTime>423ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>103</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to capacity with a call to getInt</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>103</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to java.nio.ByteBuffer::capacity()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>116</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to java.nio.ByteBuffer::limit(I)Ljava/nio/Buffer; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>115ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>102</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to buf is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>114</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to buf is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>102</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to buf is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>114</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to buf is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>102</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to buf is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>114</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to buf is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>103</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to capacity()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>116</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to limit(I)Ljava/nio/Buffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>103</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to capacity()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>116</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to limit(I)Ljava/nio/Buffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>103</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to capacity()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>116</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to limit(I)Ljava/nio/Buffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>103</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to capacity()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>116</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to limit(I)Ljava/nio/Buffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>103</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to capacity()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>116</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to limit(I)Ljava/nio/Buffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed call to java/util/zip/Inflater::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>104</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed call to java/io/PushbackInputStream::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Substituted 512 with 513</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>42</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Substituted 30 with 31</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Substituted 1024 with 1025</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>59</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>65</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>71</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Substituted 16 with 17</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>77</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>115</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed call to java/nio/ByteBuffer::allocate</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>88</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed call to org/apache/commons/compress/archivers/zip/ZipEncodingHelper::getZipEncoding</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>103</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed call to java/nio/ByteBuffer::capacity</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>116</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed call to java/nio/ByteBuffer::limit</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable inf</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable buf</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>23</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable current</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable closed</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>33</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable hitCentralDirectory</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable lastStoredEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>43</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable allowStoredEntriesWithDataDescriptor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>49</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable LFH_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>55</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable SKIP_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>61</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable SHORT_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>67</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable WORD_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>73</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable TWO_DWORD_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>78</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable entriesRead</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>83</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable encoding</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>89</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable zipEncoding</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>94</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable useUnicodeExtraFields</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>105</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable in</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/lang/String;ZZ)V</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>110</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>Removed assignment to member variable allowStoredEntriesWithDataDescriptor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to closed is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>524</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>14</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to in is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to inf is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to closed is guarded using field useUnicodeExtraFields</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>524</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>14</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to in is guarded using field in</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to inf is guarded using field inf</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.closed is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveInputStream::currentEntryHasOutstandingBytes()Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced access to closed with an access to useUnicodeExtraFields</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>10</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced access to closed with an access to hitCentralDirectory</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced access to closed with an access to hitCentralDirectory</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>10</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced access to closed with an access to allowStoredEntriesWithDataDescriptor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced access to closed with an access to allowStoredEntriesWithDataDescriptor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>524</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to field in is replaced by access to local this</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>524</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>15</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced call to close with a call to reset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>20</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced call to end with a call to reset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to closed is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>524</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>14</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to in is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to inf is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to closed is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>524</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>14</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to in is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to inf is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>33</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to closed is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>524</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>14</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to in is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to inf is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>524</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>15</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to close()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>20</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to end()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>524</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>15</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to close()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>20</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to end()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>524</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>15</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to close()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>20</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to end()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>524</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>15</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to close()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>20</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to end()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>524</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>15</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to close()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>20</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to end()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>524</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>15</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to java.io.InputStream::close()V is guarded</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>526</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>20</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to java.util.zip.Inflater::end()V is guarded</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>33</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>33</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>33</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>removed call to java/io/InputStream::close</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>20</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>removed call to java/util/zip/Inflater::end</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>34</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>Removed assignment to member variable closed</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>70</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>70</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>70</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>70</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>70</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>70</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>70</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>70</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>70</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>70</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>70</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>70</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>55</index><block>11</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>catch type java/io/EOFException is replaced with java/io/IOException</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to closed is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to hitCentralDirectory is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>22</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to current is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to LFH_BUF is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>69</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to LFH_BUF is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to closed is guarded using local firstEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to hitCentralDirectory is guarded using local firstEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to closed is guarded using field useUnicodeExtraFields</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to hitCentralDirectory is guarded using field useUnicodeExtraFields</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>22</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to current is guarded using field current</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to LFH_BUF is guarded using field LFH_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>69</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to LFH_BUF is guarded using field LFH_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.closed is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveInputStream::currentEntryHasOutstandingBytes()Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.hitCentralDirectory is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveInputStream::currentEntryHasOutstandingBytes()Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to closed with an access to useUnicodeExtraFields</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to hitCentralDirectory with an access to useUnicodeExtraFields</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to LFH_BUF with an access to SKIP_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>69</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to LFH_BUF with an access to SKIP_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>75</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to CFH_SIG with an access to LFH_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>79</index><block>13</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to AED_SIG with an access to CFH_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>96</index><block>14</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to LFH_SIG with an access to CFH_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to closed with an access to hitCentralDirectory</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to hitCentralDirectory with an access to closed</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to LFH_BUF with an access to SHORT_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>69</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to LFH_BUF with an access to SHORT_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>75</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to CFH_SIG with an access to DD_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>79</index><block>13</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to AED_SIG with an access to LFH_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>96</index><block>14</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to LFH_SIG with an access to DD_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to closed with an access to allowStoredEntriesWithDataDescriptor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to hitCentralDirectory with an access to allowStoredEntriesWithDataDescriptor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to LFH_BUF with an access to WORD_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>69</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to LFH_BUF with an access to WORD_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>75</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to CFH_SIG with an access to SINGLE_SEGMENT_SPLIT_MARKER</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>79</index><block>13</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to AED_SIG with an access to DD_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>96</index><block>14</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to LFH_SIG with an access to SINGLE_SEGMENT_SPLIT_MARKER</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to LFH_BUF with an access to TWO_DWORD_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>69</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to LFH_BUF with an access to TWO_DWORD_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>75</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to CFH_SIG with an access to AED_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>79</index><block>13</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to AED_SIG with an access to SINGLE_SEGMENT_SPLIT_MARKER</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>96</index><block>14</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to LFH_SIG with an access to AED_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to field closed is replaced by access to local firstEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to field hitCentralDirectory is replaced by access to local firstEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>75</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to field CFH_SIG is replaced by access to local sig</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>79</index><block>13</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to field AED_SIG is replaced by access to local sig</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>96</index><block>14</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to field LFH_SIG is replaced by access to local sig</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>35</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local firstEntry is replaced by access to field useUnicodeExtraFields</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>35</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local firstEntry is replaced by access to field closed</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>35</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local firstEntry is replaced by access to field hitCentralDirectory</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>35</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local firstEntry is replaced by access to field allowStoredEntriesWithDataDescriptor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>42</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to readFirstLocalFileHeader with a call to readFully</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>76</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to org.apache.commons.compress.archivers.zip.ZipLong::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>80</index><block>13</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to org.apache.commons.compress.archivers.zip.ZipLong::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>97</index><block>14</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to org.apache.commons.compress.archivers.zip.ZipLong::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to closed is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to hitCentralDirectory is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>224</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>22</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to current is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to LFH_BUF is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>69</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to LFH_BUF is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>42</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to readFirstLocalFileHeader([B)V is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>76</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>80</index><block>13</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>97</index><block>14</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>42</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to org.apache.commons.compress.archivers.zip.ZipArchiveInputStream::readFirstLocalFileHeader([B)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>70</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed call to org/apache/commons/compress/archivers/zip/ZipLong::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>13</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><block>14</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>76</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed call to org/apache/commons/compress/archivers/zip/ZipLong::equals</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>80</index><block>13</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed call to org/apache/commons/compress/archivers/zip/ZipLong::equals</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>97</index><block>14</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed call to org/apache/commons/compress/archivers/zip/ZipLong::equals</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>12</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>23</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>36</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>77</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>81</index><block>13</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>98</index><block>14</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>12</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>23</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>36</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>77</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>81</index><block>13</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>98</index><block>14</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>102</index><block>15</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>mutated return of Object value for org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::getNextZipEntry to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>getNextZipEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/zip/ZipArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFirstLocalFileHeader</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to &#60;init&#62;([B)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>16</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to DD_SIG with an access to CFH_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>30</index><block>31</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to SINGLE_SEGMENT_SPLIT_MARKER with an access to CFH_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>16</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to DD_SIG with an access to LFH_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>30</index><block>31</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to SINGLE_SEGMENT_SPLIT_MARKER with an access to LFH_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>16</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to DD_SIG with an access to SINGLE_SEGMENT_SPLIT_MARKER</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>30</index><block>31</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to SINGLE_SEGMENT_SPLIT_MARKER with an access to DD_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>16</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to DD_SIG with an access to AED_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>30</index><block>31</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced access to SINGLE_SEGMENT_SPLIT_MARKER with an access to AED_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>16</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to field DD_SIG is replaced by access to local sig</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>30</index><block>31</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to field SINGLE_SEGMENT_SPLIT_MARKER is replaced by access to local sig</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>332</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local lfh is replaced by access to field LFH_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>10</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local lfh is replaced by access to field LFH_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>332</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local lfh is replaced by access to field SKIP_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>10</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local lfh is replaced by access to field SKIP_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>332</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local lfh is replaced by access to field SHORT_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>10</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local lfh is replaced by access to field SHORT_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>332</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local lfh is replaced by access to field WORD_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>10</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local lfh is replaced by access to field WORD_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>332</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local lfh is replaced by access to field TWO_DWORD_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>10</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local lfh is replaced by access to field TWO_DWORD_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>332</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to readFully with a call to readFirstLocalFileHeader</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>17</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to org.apache.commons.compress.archivers.zip.ZipLong::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>31</index><block>31</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to org.apache.commons.compress.archivers.zip.ZipLong::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>332</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to readFully([B)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>17</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>31</index><block>31</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>332</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>5</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to readFully([B)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>17</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>31</index><block>31</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>332</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>5</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to readFully([B)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>17</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>31</index><block>31</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>332</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to readFully([B)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>17</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>31</index><block>31</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>332</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to readFully([B)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>17</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>31</index><block>31</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>332</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>5</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to org.apache.commons.compress.archivers.zip.ZipArchiveInputStream::readFully([B)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>11</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed call to org/apache/commons/compress/archivers/zip/ZipLong::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>31</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed call to org/apache/commons/compress/archivers/zip/ZipLong::equals</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>31</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed call to org/apache/commons/compress/archivers/zip/ZipLong::equals</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>18</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>32</index><block>31</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>18</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>32</index><block>31</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFirstLocalFileHeader</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>29</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::readFully</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[B)I with a call to readFully(Ljava/io/InputStream;[BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[B)I with a call to readFully(Ljava/io/InputStream;[BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[B)I with a call to readFully(Ljava/io/InputStream;[BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[B)I with a call to readFully(Ljava/io/InputStream;[BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[B)I with a call to readFully(Ljava/io/InputStream;[BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[B)I with a call to readFully(Ljava/io/InputStream;[BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to in is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to in is guarded using field in</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>4</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to field in is replaced by access to local this</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local b is replaced by access to field LFH_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>722</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local count is replaced by access to field LFH_LEN</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>723</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local count is replaced by access to field LFH_LEN</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>723</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>16</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local b is replaced by access to field LFH_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>5</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local b is replaced by access to field SKIP_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>722</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local count is replaced by access to field CFH_LEN</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>723</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>15</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local count is replaced by access to field CFH_LEN</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>723</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>16</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local b is replaced by access to field SKIP_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>5</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local b is replaced by access to field SHORT_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>722</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local count is replaced by access to field entriesRead</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>723</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>15</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local count is replaced by access to field entriesRead</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>723</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>16</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local b is replaced by access to field SHORT_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>5</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local b is replaced by access to field WORD_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>723</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>16</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local b is replaced by access to field WORD_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>5</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local b is replaced by access to field TWO_DWORD_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>723</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>16</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>access to local b is replaced by access to field TWO_DWORD_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to in is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to in is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the access to in is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>722</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to count(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>722</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>12</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to count(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>722</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>12</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to count(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>722</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>12</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to count(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>722</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>12</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to count(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>722</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>12</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>the call to org.apache.commons.compress.archivers.zip.ZipArchiveInputStream::count(I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>721</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed call to org/apache/commons/compress/utils/IOUtils::readFully</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>18</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>18</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveInputStream</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>37</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.20203050891044214</suspValue><description>removed call to org/apache/commons/compress/archivers/zip/ZipArchiveInputStream::count</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10878565864408424</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[BII)I with a call to readFully(Ljava/io/InputStream;[B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10878565864408424</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[BII)I with a call to readFully(Ljava/io/InputStream;[B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10878565864408424</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[BII)I with a call to readFully(Ljava/io/InputStream;[B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10878565864408424</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[BII)I with a call to readFully(Ljava/io/InputStream;[B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10878565864408424</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[BII)I with a call to readFully(Ljava/io/InputStream;[B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10878565864408424</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[BII)I with a call to readFully(Ljava/io/InputStream;[B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10878565864408424</suspValue><description>access to local b is replaced by access to field SKIP_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10878565864408424</suspValue><description>access to local b is replaced by access to field SKIP_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10878565864408424</suspValue><description>replaced call to org/apache/commons/compress/utils/IOUtils::readFully with argument</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10878565864408424</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10878565864408424</suspValue><description>removed call to org/apache/commons/compress/utils/IOUtils::readFully</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10878565864408424</suspValue><description>replaced int return with 0 for org/apache/commons/compress/utils/IOUtils::readFully</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10878565864408424</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local len is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local offset is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local len is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local offset is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>31</index><block>5</block><killingTests/><suspValue>0.10153461651336192</suspValue><description>local count is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>32</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local len is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local offset is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>39</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local count is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>98ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>41</index><block>6</block><killingTests/><suspValue>0.10153461651336192</suspValue><description>local len is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>42</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local count is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local x is replaced by local offset to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>48</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local x is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>57</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10286889997472794</suspValue><description>local count is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>58</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10286889997472794</suspValue><description>local x is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>60</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10286889997472794</suspValue><description>local count is replaced by local offset to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local count is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local count is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>32</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local len is replaced by local count to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local offset is replaced by local count to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>39</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local count is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>41</index><block>6</block><killingTests/><suspValue>0.10153461651336192</suspValue><description>local len is replaced by local count to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>42</index><block>6</block><killingTests/><suspValue>0.10153461651336192</suspValue><description>local count is replaced by local len to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>45</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local x is replaced by local len to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>48</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local x is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>57</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10286889997472794</suspValue><description>local count is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>58</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10286889997472794</suspValue><description>local x is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>60</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10286889997472794</suspValue><description>local count is replaced by local len to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local count is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local count is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>32</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local len is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local offset is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>39</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local count is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>41</index><block>6</block><killingTests/><suspValue>0.10153461651336192</suspValue><description>local len is replaced by local x to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>42</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local count is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>45</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local x is replaced by local count to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>48</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local x is replaced by local count to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>57</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10286889997472794</suspValue><description>local count is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>94ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>58</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10286889997472794</suspValue><description>local x is replaced by local count to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>60</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10286889997472794</suspValue><description>local count is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>local count is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local len is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local offset is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local len is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local offset is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>10</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local b is replaced by access to field SKIP_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>31</index><block>5</block><killingTests/><suspValue>0.10153461651336192</suspValue><description>access to local count is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>32</index><block>5</block><killingTests/><suspValue>0.10153461651336192</suspValue><description>access to local len is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>37</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local b is replaced by access to field SKIP_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local offset is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>39</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local count is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>41</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local len is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>42</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local count is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>48</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local x is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>57</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10286889997472794</suspValue><description>access to local count is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>58</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10286889997472794</suspValue><description>access to local x is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local count is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local len is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local offset is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local len is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>8</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local offset is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>31</index><block>5</block><killingTests/><suspValue>0.10153461651336192</suspValue><description>access to local count is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>32</index><block>5</block><killingTests/><suspValue>0.10153461651336192</suspValue><description>access to local len is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local offset is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>39</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local count is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>41</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local len is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>42</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local count is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>48</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local x is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>57</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10286889997472794</suspValue><description>access to local count is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>58</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10286889997472794</suspValue><description>access to local x is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>65</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>access to local count is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>the call to java.io.InputStream::read([BII)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>the call to read([BII)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>the call to read([BII)I is guarded returning local offset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>123ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>the call to read([BII)I is guarded returning local len</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>the call to read([BII)I is guarded returning field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>the call to read([BII)I is guarded returning field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>44</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>replaced call to java/io/InputStream::read with argument</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>49</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10286889997472794</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>87ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>6</block><killingTests/><suspValue>0.10153461651336192</suspValue><description>removed call to java/io/InputStream::read</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>66</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>replaced int return with 0 for org/apache/commons/compress/utils/IOUtils::readFully</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>125ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>33</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>50</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>33</index><block>5</block><killingTests/><suspValue>0.10153461651336192</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>50</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>101ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>66</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>getZipEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>access to local name is replaced by access to field UTF8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>getZipEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>getZipEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>removed call to org/apache/commons/compress/archivers/zip/ZipEncodingHelper::isUTF8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>getZipEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09072184232530289</suspValue><description>replaced return value with null for org/apache/commons/compress/archivers/zip/ZipEncodingHelper::getZipEncoding</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>getZipEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>getZipEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>getZipEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09072184232530289</suspValue><description>mutated return of Object value for org/apache/commons/compress/archivers/zip/ZipEncodingHelper::getZipEncoding to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>MethodNameMutator_0</mutator><index>14</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>the call to factory method java.nio.charset.Charset.name()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>251</lineNumber><mutator>MethodNameMutator_1</mutator><index>26</index><block>11</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>the call to factory method java.nio.charset.Charset.aliases()Ljava/util/Set; is replaced by an instantiation of type org.mockito.internal.util.collections.HashCodeAndEqualsSafeSet using ()V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>MethodNameMutator_4</mutator><index>14</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>the call to factory method java.nio.charset.Charset.name()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>replaced access to UTF_8 with an access to ISO_8859_1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>25</index><block>11</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>replaced access to UTF_8 with an access to ISO_8859_1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>replaced access to UTF_8 with an access to US_ASCII</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>25</index><block>11</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>replaced access to UTF_8 with an access to US_ASCII</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>replaced access to UTF_8 with an access to UTF_16</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>25</index><block>11</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>replaced access to UTF_8 with an access to UTF_16</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>replaced access to UTF_8 with an access to UTF_16BE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>25</index><block>11</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>replaced access to UTF_8 with an access to UTF_16BE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>replaced access to UTF_8 with an access to UTF_16LE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>25</index><block>11</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>replaced access to UTF_8 with an access to UTF_16LE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>local alias is replaced by local charsetName to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>41</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>local charsetName is replaced by local alias to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>access to local charsetName is replaced by access to field UTF8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>access to local charsetName is replaced by access to field UTF8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>40</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>access to local alias is replaced by access to field UTF8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>41</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>access to local charsetName is replaced by access to field UTF8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>14</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>replaced call to name with a call to displayName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>replaced call to equalsIgnoreCase with a call to startsWith</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>42</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>replaced call to equalsIgnoreCase with a call to startsWith</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>14</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>replaced call to name with a call to toString</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>replaced call to equalsIgnoreCase with a call to endsWith</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>112ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>42</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>replaced call to equalsIgnoreCase with a call to endsWith</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>replaced call to equalsIgnoreCase with a call to matches</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>42</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>replaced call to equalsIgnoreCase with a call to matches</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>the call to java.nio.charset.Charset::name()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>the call to java.lang.String::equalsIgnoreCase(Ljava/lang/String;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>26</index><block>11</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>the call to java.nio.charset.Charset::aliases()Ljava/util/Set; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>42</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>the call to java.lang.String::equalsIgnoreCase(Ljava/lang/String;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>the call to name()Ljava/lang/String; is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>the call to equalsIgnoreCase(Ljava/lang/String;)Z is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>251</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>26</index><block>11</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>the call to aliases()Ljava/util/Set; is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>42</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>the call to equalsIgnoreCase(Ljava/lang/String;)Z is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>47</index><block>13</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1111111111111111</suspValue><description>replaced boolean return with false for org/apache/commons/compress/archivers/zip/ZipEncodingHelper::isUTF8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>13</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1111111111111111</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>removed call to java/nio/charset/Charset::name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>removed call to java/lang/String::equalsIgnoreCase</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>11</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>removed call to java/nio/charset/Charset::aliases</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>removed call to java/lang/String::equalsIgnoreCase</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>43</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.08304547985373997</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>43</index><block>12</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.09556369651349932</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>13</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1111111111111111</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.18107149208503706</suspValue><description>replaced call to &#60;init&#62;([BI)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.18107149208503706</suspValue><description>replaced call to &#60;init&#62;([BI)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.18107149208503706</suspValue><description>replaced call to &#60;init&#62;([BI)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.18107149208503706</suspValue><description>replaced call to &#60;init&#62;([BI)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.18107149208503706</suspValue><description>replaced call to &#60;init&#62;([BI)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.18107149208503706</suspValue><description>replaced call to &#60;init&#62;([BI)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.18107149208503706</suspValue><description>replaced call to &#60;init&#62;([BI)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.18107149208503706</suspValue><description>replaced call to &#60;init&#62;([BI)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.18107149208503706</suspValue><description>replaced call to &#60;init&#62;([BI)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.18107149208503706</suspValue><description>replaced call to &#60;init&#62;([BI)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.18107149208503706</suspValue><description>replaced call to &#60;init&#62;([BI)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.18107149208503706</suspValue><description>replaced call to &#60;init&#62;([BI)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.18107149208503706</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to getValue([BI)J with a call to getValue([B)J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to getValue([BI)J with a call to getValue([B)J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to getValue([BI)J with a call to getValue([B)J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to getValue([BI)J with a call to getValue([B)J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to getValue([BI)J with a call to getValue([B)J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to getValue([BI)J with a call to getValue([B)J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>removed call to org/apache/commons/compress/archivers/zip/ZipLong::getValue</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>Removed assignment to member variable value</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>the access to value is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>the access to value is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipLong.value is replaced by the call to org.apache.commons.compress.archivers.zip.ZipLong::getValue()J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>access to local this is replaced by access to field CFH_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>access to local this is replaced by access to field LFH_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>access to local this is replaced by access to field DD_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>access to local this is replaced by access to field ZIP64_MAGIC</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>16</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>access to local this is replaced by access to field SINGLE_SEGMENT_SPLIT_MARKER</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>the call to org.apache.commons.compress.archivers.zip.ZipLong::getValue()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>the access to value is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>the call to getValue()J is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>30</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>replaced boolean return with false for org/apache/commons/compress/archivers/zip/ZipLong::equals</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>30</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>replaced boolean return with true for org/apache/commons/compress/archivers/zip/ZipLong::equals</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>8</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>removed call to org/apache/commons/compress/archivers/zip/ZipLong::getValue</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>22</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>22</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>9</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1873171623163388</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1781741612749496</suspValue><description>the access to value is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1781741612749496</suspValue><description>the access to value is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1781741612749496</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipLong.value is replaced by the call to org.apache.commons.compress.archivers.zip.ZipLong::getValue()J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1781741612749496</suspValue><description>access to local this is replaced by access to field CFH_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1781741612749496</suspValue><description>access to local this is replaced by access to field LFH_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1781741612749496</suspValue><description>access to local this is replaced by access to field DD_SIG</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1781741612749496</suspValue><description>access to local this is replaced by access to field ZIP64_MAGIC</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1781741612749496</suspValue><description>access to local this is replaced by access to field SINGLE_SEGMENT_SPLIT_MARKER</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1781741612749496</suspValue><description>the access to value is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1781741612749496</suspValue><description>the access to value is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1781741612749496</suspValue><description>replaced long return with 0 for org/apache/commons/compress/archivers/zip/ZipLong::getValue</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1781741612749496</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/compress/archivers/zip/ZipLong::getValue</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>16</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local value is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local value is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>33</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local value is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>57</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local value is replaced by access to field serialVersionUID</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_1_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>16</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local value is replaced by access to field BYTE_3_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_1_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local value is replaced by access to field BYTE_3_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>33</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_1_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>46</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local value is replaced by access to field BYTE_3_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_1_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>57</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local value is replaced by access to field BYTE_3_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_1_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_1_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>33</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_1_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_1_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_2</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_2</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>33</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_2</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_2</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_2_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_2_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>33</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_2_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>48</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>access to local offset is replaced by access to field BYTE_2_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Substituted 24 with 25</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Substituted 4278190080 with 4278190081</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>22</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Substituted 16 with 17</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Substituted 16711680 with 16711681</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Substituted 8 with 9</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>39</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Substituted 65280 with 65281</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>50</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Substituted 255 with 256</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Replaced Shift Left with Shift Right</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Replaced Shift Left with Shift Right</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Replaced Shift Left with Shift Right</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>58</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced long return with 0 for org/apache/commons/compress/archivers/zip/ZipLong::getValue</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipLong.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipLong</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([BI)J</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>58</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/compress/archivers/zip/ZipLong::getValue</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10783277320343841</suspValue><description>the access to field org.apache.commons.compress.archivers.ArchiveInputStream.bytesRead is replaced by the call to org.apache.commons.compress.archivers.ArchiveInputStream::count(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10783277320343841</suspValue><description>the access to field org.apache.commons.compress.archivers.ArchiveInputStream.bytesRead is replaced by the call to org.apache.commons.compress.archivers.ArchiveInputStream::pushedBackBytes(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10783277320343841</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10783277320343841</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10783277320343841</suspValue><description>Removed assignment to member variable SINGLE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.10783277320343841</suspValue><description>Removed assignment to member variable bytesRead</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>replaced call to count(J)V with a call to count(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>replaced call to count(J)V with a call to count(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>replaced call to count(J)V with a call to count(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>replaced call to count(J)V with a call to count(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>replaced call to count(J)V with a call to count(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>replaced call to count(J)V with a call to count(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>access to local read is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>replaced call to count with a call to pushedBackBytes</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>the call to count(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>the call to count(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>the call to count(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>the call to count(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>the call to count(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>the call to org.apache.commons.compress.archivers.ArchiveInputStream::count(J)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>removed call to org/apache/commons/compress/archivers/ArchiveInputStream::count</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>the access to bytesRead is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>the access to bytesRead is guarded using local read</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>the access to bytesRead is guarded using field bytesRead</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>the access to field org.apache.commons.compress.archivers.ArchiveInputStream.bytesRead is replaced by the call to org.apache.commons.compress.archivers.ArchiveInputStream::getBytesRead()J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>the access to field org.apache.commons.compress.archivers.ArchiveInputStream.bytesRead is replaced by the call to org.apache.commons.compress.archivers.ArchiveInputStream::count(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>the access to field org.apache.commons.compress.archivers.ArchiveInputStream.bytesRead is replaced by the call to org.apache.commons.compress.archivers.ArchiveInputStream::pushedBackBytes(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>access to field bytesRead is replaced by access to local read</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>access to field bytesRead is replaced by access to local read</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>access to local read is replaced by access to field bytesRead</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>access to local read is replaced by access to field bytesRead</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>the access to bytesRead is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>the access to bytesRead is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>the access to bytesRead is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</killingTests><suspValue>0.1143323900950059</suspValue><description>Removed assignment to member variable bytesRead</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest.testThrowOnInvalidEntry(org.apache.commons.compress.archivers.zip.ZipArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
</mutations>
