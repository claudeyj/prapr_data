<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/util/zip/ZipEntry;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/util/zip/ZipEntry;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/util/zip/ZipEntry;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/util/zip/ZipEntry;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/util/zip/ZipEntry;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/util/zip/ZipEntry;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveEntry.method is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveEntry::setMethod(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveEntry.internalAttributes is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveEntry::setMethod(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveEntry.platform is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveEntry::setMethod(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>25</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveEntry.externalAttributes is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveEntry::setExternalAttributes(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>35</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveEntry::setName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveEntry.method is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveEntry::setInternalAttributes(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveEntry.internalAttributes is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveEntry::setInternalAttributes(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveEntry.platform is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveEntry::setInternalAttributes(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveEntry.method is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveEntry::setUnixMode(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveEntry.internalAttributes is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveEntry::setUnixMode(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveEntry.platform is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveEntry::setUnixMode(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveEntry.method is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveEntry::setPlatform(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveEntry.internalAttributes is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveEntry::setPlatform(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveEntry.platform is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveEntry::setPlatform(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>replaced access to method with an access to internalAttributes</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>replaced access to internalAttributes with an access to method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>replaced access to platform with an access to method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>replaced access to method with an access to platform</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>replaced access to internalAttributes with an access to platform</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>replaced access to platform with an access to internalAttributes</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>35</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>access to field name is replaced by access to local name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>Removed assignment to member variable method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>Removed assignment to member variable internalAttributes</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>Removed assignment to member variable platform</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>25</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>Removed assignment to member variable externalAttributes</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>Removed assignment to member variable extraFields</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>35</index><block>0</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.1414213562373095</suspValue><description>Removed assignment to member variable name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>462</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>31</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to name is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>36</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to name is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>462</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>31</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to name is guarded using field name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>36</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to name is guarded using field name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>462</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>31</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveEntry::getName()Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>36</index><block>7</block><killingTests>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to field org.apache.commons.compress.archivers.zip.ZipArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.zip.ZipArchiveEntry::getName()Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>462</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local this is replaced by local other to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local other is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.Object::getClass()Ljava/lang/Class; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.lang.Object::getClass()Ljava/lang/Class; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>462</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>31</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to name is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>36</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to name is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to getClass()Ljava/lang/Class; is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>458</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to getClass()Ljava/lang/Class; is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>57</index><block>11</block><killingTests>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced boolean return with false for org/apache/commons/compress/archivers/zip/ZipArchiveEntry::equals</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>56</index><block>11</block><killingTests>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test><test><name>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>52ms</time></test><test><name>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>4</block><killingTests>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Object::getClass</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test><test><name>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/lang/Object::getClass</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test><test><name>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>18ms</time></test><test><name>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>1ms</time></test><test><name>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ZipArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipArchiveEntry</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>57</index><block>11</block><killingTests>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest.testNotEquals(org.apache.commons.compress.archivers.zip.ZipArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.changes.ChangeSetTestCase.testAddChangeTwice(org.apache.commons.compress.changes.ChangeSetTestCase)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
</mutations>
