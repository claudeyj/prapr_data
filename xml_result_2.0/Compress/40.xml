<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>access to field in is replaced by access to local in</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>access to field byteOrder is replaced by access to local byteOrder</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>Removed assignment to member variable bitsCached</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>Removed assignment to member variable bitsCachedSize</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>Removed assignment to member variable in</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/nio/ByteOrder;)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>Removed assignment to member variable byteOrder</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>replaced call to read()I with a call to read([BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>replaced call to read()I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>replaced call to read()I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>replaced call to read()I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>replaced call to read()I with a call to read([BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>replaced call to read()I with a call to read([BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>replaced call to read()I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>replaced call to read()I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>replaced call to read()I with a call to read([BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>replaced call to read()I with a call to read([BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>replaced call to read()I with a call to read([BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>replaced call to read()I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to bitsCachedSize is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>26</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to in is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to byteOrder is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>81</index><block>9</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to bitsCachedSize is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>92</index><block>10</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to byteOrder is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>133</index><block>12</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to bitsCachedSize is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to bitsCachedSize is guarded using local count</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>81</index><block>9</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to bitsCachedSize is guarded using local count</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>133</index><block>12</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to bitsCachedSize is guarded using local count</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to bitsCachedSize is guarded using field MAXIMUM_CACHE_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>26</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to in is guarded using field in</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to byteOrder is guarded using field byteOrder</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>81</index><block>9</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to bitsCachedSize is guarded using field MAXIMUM_CACHE_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>92</index><block>10</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to byteOrder is guarded using field byteOrder</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>133</index><block>12</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to bitsCachedSize is guarded using field MAXIMUM_CACHE_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>45</index><block>7</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to field java.nio.ByteOrder.LITTLE_ENDIAN is replaced by the call to java.nio.ByteOrder::nativeOrder()Ljava/nio/ByteOrder;</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>93</index><block>10</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to field java.nio.ByteOrder.LITTLE_ENDIAN is replaced by the call to java.nio.ByteOrder::nativeOrder()Ljava/nio/ByteOrder;</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>45</index><block>7</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>replaced access to LITTLE_ENDIAN with an access to BIG_ENDIAN</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>93</index><block>10</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>replaced access to LITTLE_ENDIAN with an access to BIG_ENDIAN</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to field bitsCachedSize is replaced by access to local count</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>81</index><block>9</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>access to field bitsCachedSize is replaced by access to local count</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>84</index><block>9</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>access to field bitsCachedSize is replaced by access to local count</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>133</index><block>12</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>access to field bitsCachedSize is replaced by access to local count</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>136</index><block>12</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>access to field bitsCachedSize is replaced by access to local count</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>access to local count is replaced by access to field MAXIMUM_CACHE_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>access to local count is replaced by access to field MAXIMUM_CACHE_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local count is replaced by access to field MAXIMUM_CACHE_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>32</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local nextByte is replaced by access to field bitsCached</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>134</index><block>12</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>access to local count is replaced by access to field MAXIMUM_CACHE_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>139</index><block>12</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>access to local bitsOut is replaced by access to field bitsCached</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>access to local count is replaced by access to field bitsCachedSize</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>access to local count is replaced by access to field bitsCachedSize</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>access to local count is replaced by access to field bitsCachedSize</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>134</index><block>12</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>access to local count is replaced by access to field bitsCachedSize</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>replaced call to read with a call to available</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>the call to java.io.InputStream::read()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to bitsCachedSize is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>26</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to in is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to byteOrder is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>81</index><block>9</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to bitsCachedSize is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>92</index><block>10</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to byteOrder is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>133</index><block>12</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to bitsCachedSize is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to byteOrder is guarded returning local nextByte</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>81</index><block>9</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to bitsCachedSize is guarded returning local nextByte</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>133</index><block>12</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to bitsCachedSize is guarded returning local bitsOut</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to bitsCachedSize is guarded returning field bitsCached</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>26</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>the access to in is guarded returning field bitsCached</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to byteOrder is guarded returning field bitsCached</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>81</index><block>9</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to bitsCachedSize is guarded returning field bitsCached</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>92</index><block>10</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to byteOrder is guarded returning field bitsCached</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>133</index><block>12</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>the access to bitsCachedSize is guarded returning field bitsCached</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>the call to read()I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>the call to read()I is guarded returning field bitsCached</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>4</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>Substituted 63 with 64</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>33</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>82</index><block>9</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>Substituted 8 with 9</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>9</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><block>12</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>4</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>7</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><block>10</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>removed call to java/io/InputStream::read</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>140</index><block>12</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>replaced long return with 0 for org/apache/commons/compress/utils/BitInputStream::readBits</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>46</index><block>7</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>94</index><block>10</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>46</index><block>7</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>94</index><block>10</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>22</index><block>4</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>35</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.254000254000381</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>22</index><block>4</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>35</index><block>5</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2626128657194451</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>140</index><block>12</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/compress/utils/BitInputStream::readBits</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>84</index><block>9</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>Removed assignment to member variable bitsCachedSize</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BitInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.BitInputStream</mutatedClass><mutatedMethod>readBits</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>136</index><block>12</block><killingTests>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</killingTests><suspValue>0.2721655269759087</suspValue><description>Removed assignment to member variable bitsCachedSize</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.BitInputStreamTest.bigEndianWithOverflow(org.apache.commons.compress.utils.BitInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
</mutations>
