<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>replaced call to getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; with a call to getProperty(Ljava/lang/String;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>replaced call to getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; with a call to getProperty(Ljava/lang/String;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>replaced call to getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; with a call to getProperty(Ljava/lang/String;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>replaced call to getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; with a call to getProperty(Ljava/lang/String;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>replaced call to getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; with a call to getProperty(Ljava/lang/String;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>replaced call to getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; with a call to getProperty(Ljava/lang/String;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setMode(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setMode(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.size is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setModTime(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.linkName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>34</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.magic is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>39</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.version is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMajor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setMode(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>54</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMinor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setMode(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>78</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setLinkName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.size is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setSize(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.linkName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setLinkName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>34</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.magic is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setLinkName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>39</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.version is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setLinkName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setLinkName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMajor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>54</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMinor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>78</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setLinkName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.linkName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>34</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.magic is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>39</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.version is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMajor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>54</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMinor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>78</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMajor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMajor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.linkName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>34</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.magic is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>39</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.version is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMajor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMajor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>54</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMinor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMajor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>78</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMinor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMinor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMajor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMinor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>54</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMinor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMinor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to name with an access to linkName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to userId with an access to mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to groupId with an access to mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to size with an access to modTime</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to linkName with an access to name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>34</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to magic with an access to name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>39</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to version with an access to name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to groupName with an access to name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to devMajor with an access to mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>54</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to devMinor with an access to mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>78</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>replaced access to userName with an access to name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to name with an access to magic</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to userId with an access to groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to groupId with an access to userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to size with an access to realSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to linkName with an access to magic</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>34</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to magic with an access to linkName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>39</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to version with an access to linkName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to groupName with an access to linkName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to devMajor with an access to userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>54</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to devMinor with an access to userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>78</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>replaced access to userName with an access to linkName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to name with an access to version</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to userId with an access to devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to groupId with an access to devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to linkName with an access to version</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>34</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to magic with an access to version</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>39</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to version with an access to magic</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to groupName with an access to magic</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to devMajor with an access to groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>54</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to devMinor with an access to groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>78</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>replaced access to userName with an access to magic</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to name with an access to userName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to userId with an access to devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to groupId with an access to devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to linkName with an access to userName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>34</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to magic with an access to userName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>39</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to version with an access to userName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to groupName with an access to version</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to devMajor with an access to devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>54</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to devMinor with an access to devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>78</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>replaced access to userName with an access to version</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to name with an access to groupName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to linkName with an access to groupName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>34</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to magic with an access to groupName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>147</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>39</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to version with an access to groupName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>replaced access to groupName with an access to userName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>78</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>replaced access to userName with an access to groupName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>78</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>access to field userName is replaced by access to local user</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>replaced call to getProperty with a call to setProperty</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>59ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>64</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>64</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>64</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>64</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>64</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>64</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>64</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>the call to length()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>replaced call to java/lang/System::getProperty with argument</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>48</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>53</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>65</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>Substituted 31 with 32</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>removed call to java/lang/System::getProperty</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>64</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>66</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>66</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Removed assignment to member variable name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Removed assignment to member variable userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Removed assignment to member variable groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Removed assignment to member variable size</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Removed assignment to member variable linkName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>34</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Removed assignment to member variable magic</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>39</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Removed assignment to member variable version</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Removed assignment to member variable groupName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Removed assignment to member variable devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>54</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13018891098082389</suspValue><description>Removed assignment to member variable devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>78</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>Removed assignment to member variable userName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>83</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>Removed assignment to member variable file</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to parseTarHeader([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to parseTarHeader([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to parseTarHeader([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/io/File;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/io/File;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/io/File;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/io/File;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/io/File;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/io/File;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to parseTarHeader([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to parseTarHeader([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to parseTarHeader([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::parseTarHeader</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1064</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to matchAsciiBuffer(Ljava/lang/String;[BII)Z with a call to matchAsciiBuffer(Ljava/lang/String;[B)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1064</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to matchAsciiBuffer(Ljava/lang/String;[BII)Z with a call to matchAsciiBuffer(Ljava/lang/String;[B)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1064</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to matchAsciiBuffer(Ljava/lang/String;[BII)Z with a call to matchAsciiBuffer(Ljava/lang/String;[B)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1064</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to matchAsciiBuffer(Ljava/lang/String;[BII)Z with a call to matchAsciiBuffer(Ljava/lang/String;[B)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1064</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to matchAsciiBuffer(Ljava/lang/String;[BII)Z with a call to matchAsciiBuffer(Ljava/lang/String;[B)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1064</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to matchAsciiBuffer(Ljava/lang/String;[BII)Z with a call to matchAsciiBuffer(Ljava/lang/String;[B)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1064</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 257 with 258</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1064</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 6 with 7</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1065</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>36</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1064</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1064</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/compress/utils/ArchiveUtils::matchAsciiBuffer</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1065</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>12</index><block>36</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::evaluateType</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1064</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1064</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>evaluateType</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>1065</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>36</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14002800840280097</suspValue><description>the access to size is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14002800840280097</suspValue><description>the access to size is guarded using field size</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14002800840280097</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.size is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::getSize()J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.14002800840280097</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.size is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::getRealSize()J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14002800840280097</suspValue><description>replaced access to size with an access to modTime</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.14002800840280097</suspValue><description>replaced access to size with an access to realSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>1ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14002800840280097</suspValue><description>the access to size is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14002800840280097</suspValue><description>the access to size is guarded returning field size</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.14002800840280097</suspValue><description>replaced long return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>1ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>getSize</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14002800840280097</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/compress/archivers/tar/TarArchiveEntry::getSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to name is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded using field linkFlag</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to name is guarded using field name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::getName()Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::getLinkName()Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::getUserName()Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::getGroupName()Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to name with an access to linkName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to name with an access to magic</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to name with an access to version</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to name with an access to userName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to name with an access to groupName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to java.lang.String::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to name is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded returning field checkSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to name is guarded returning field checkSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning field checkSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning field isExtended</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>17</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isGNULongLinkEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>17</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isGNULongLinkEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 75 with 76</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to java/lang/String::equals</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>11</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>11</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongLinkEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to name is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded using field linkFlag</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to name is guarded using field name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::getName()Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::getLinkName()Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::getUserName()Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::getGroupName()Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to name with an access to linkName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to name with an access to magic</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to name with an access to version</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to name with an access to userName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to name with an access to groupName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>10</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to java.lang.String::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to name is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded returning field checkSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>8</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to name is guarded returning field checkSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>10</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning field checkSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>10</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning field isExtended</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>17</index><block>14</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isGNULongNameEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>17</index><block>14</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isGNULongNameEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 76 with 77</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>14</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to java/lang/String::equals</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>11</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>11</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNULongNameEntry</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>14</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded using field linkFlag</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>674</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded returning field checkSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isGNUSparse</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isGNUSparse</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 83 with 84</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isGNUSparse</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>674</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded using field linkFlag</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded using field linkFlag</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded returning field checkSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>8</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to linkFlag is guarded returning field checkSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>17</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isPaxHeader</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>17</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveEntry::isPaxHeader</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 120 with 121</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 88 with 89</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>17</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>isPaxHeader</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V with a call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V with a call to parseTarHeader([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V with a call to parseTarHeader([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V with a call to parseTarHeader([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V with a call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V with a call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V with a call to parseTarHeader([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V with a call to parseTarHeader([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V with a call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V with a call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V with a call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V with a call to parseTarHeader([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseTarHeader with a call to writeEntryHeader</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::parseTarHeader([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V</methodDescription><lineNumber>940</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::parseTarHeader</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>MethodNameMutator_0</mutator><index>13</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BII)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>MethodNameMutator_0</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>MethodNameMutator_0</mutator><index>109</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BII)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>MethodNameMutator_0</mutator><index>116</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>MethodNameMutator_0</mutator><index>128</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BII)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>MethodNameMutator_0</mutator><index>139</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BII)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>MethodNameMutator_0</mutator><index>152</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BII)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>MethodNameMutator_0</mutator><index>159</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>MethodNameMutator_0</mutator><index>173</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BII)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>MethodNameMutator_0</mutator><index>180</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>MethodNameMutator_4</mutator><index>13</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BII)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>MethodNameMutator_4</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>MethodNameMutator_4</mutator><index>109</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BII)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>MethodNameMutator_4</mutator><index>116</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>MethodNameMutator_4</mutator><index>128</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BII)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>MethodNameMutator_4</mutator><index>139</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BII)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>MethodNameMutator_4</mutator><index>152</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BII)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>MethodNameMutator_4</mutator><index>159</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>MethodNameMutator_4</mutator><index>173</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BII)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>MethodNameMutator_4</mutator><index>180</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>13</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>109</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>116</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>128</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>139</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>152</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>159</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>173</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>180</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>13</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>109</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>116</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>128</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>139</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>152</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>159</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>173</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>180</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>13</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>109</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>116</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>128</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>139</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>152</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>159</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>173</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>180</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>13</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>109</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>116</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>128</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>139</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>152</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>159</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>173</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>180</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>13</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>109</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>116</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>128</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>139</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>152</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>159</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>173</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>180</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>13</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>109</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>116</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>128</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>139</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>152</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>159</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>173</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BII)Ljava/lang/String; with a call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>180</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>22</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>34</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.mode is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setMode(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>46</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setMode(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>58</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setMode(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>957</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>69</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.size is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setModTime(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>80</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.modTime is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setModTime(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>118</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.linkName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>129</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.magic is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>140</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.version is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>161</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>182</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>194</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMajor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setMode(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>206</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMinor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setMode(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>255</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.realSize is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setModTime(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>22</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setLinkName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>34</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.mode is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>46</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>58</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>957</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>69</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.size is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setSize(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>80</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.modTime is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setSize(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>118</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.linkName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setLinkName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>129</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.magic is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setLinkName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>140</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.version is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setLinkName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>161</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setLinkName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>182</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setLinkName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>194</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMajor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>206</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMinor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>255</index><block>28</block><killingTests>org.apache.commons.compress.archivers.TarTestCase.testCOMPRESS114(org.apache.commons.compress.archivers.TarTestCase)</killingTests><suspValue>0.2886751345948129</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.realSize is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setSize(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.TarTestCase.testTarUnarchive(org.apache.commons.compress.archivers.TarTestCase)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.TarTestCase.testCOMPRESS114(org.apache.commons.compress.archivers.TarTestCase)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>22</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>34</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.mode is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>46</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>58</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>118</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.linkName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>129</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.magic is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>140</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.version is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>161</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>182</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setUserName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>194</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMajor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>206</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMinor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupId(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>22</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.name is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>34</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.mode is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMajor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>46</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMajor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>58</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMajor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>118</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.linkName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>129</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.magic is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>140</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.version is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>161</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>182</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupName is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setGroupName(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>194</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMajor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMajor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>206</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMinor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMajor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>34</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.mode is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMinor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>46</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.userId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMinor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>58</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.groupId is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMinor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>194</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMajor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMinor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>206</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveEntry.devMinor is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::setDevMinor(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>22</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to name with an access to linkName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>34</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to mode with an access to userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>46</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to userId with an access to mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>58</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to groupId with an access to mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>957</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>69</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to size with an access to modTime</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>158ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>180ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>80</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to modTime with an access to size</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>961</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>89</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to checkSumOK with an access to isExtended</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>118</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to linkName with an access to name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>129</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to magic with an access to name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>140</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to version with an access to name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>161</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to userName with an access to name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>182</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to groupName with an access to name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>194</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to devMajor with an access to mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>206</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to devMinor with an access to mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>991</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>244</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced access to isExtended with an access to checkSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>255</index><block>28</block><killingTests>org.apache.commons.compress.archivers.TarTestCase.testCOMPRESS114(org.apache.commons.compress.archivers.TarTestCase)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced access to realSize with an access to size</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.TarTestCase.testTarUnarchive(org.apache.commons.compress.archivers.TarTestCase)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.TarTestCase.testCOMPRESS114(org.apache.commons.compress.archivers.TarTestCase)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>22</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to name with an access to magic</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>34</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to mode with an access to groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>46</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to userId with an access to groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>58</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to groupId with an access to userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>957</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>69</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to size with an access to realSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>166ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>187ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>80</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to modTime with an access to realSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>118</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to linkName with an access to magic</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>129</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to magic with an access to linkName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>140</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to version with an access to linkName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>161</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to userName with an access to linkName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>182</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to groupName with an access to linkName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>194</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to devMajor with an access to userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>206</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to devMinor with an access to userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>255</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced access to realSize with an access to modTime</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>22</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to name with an access to version</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>34</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to mode with an access to devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>46</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to userId with an access to devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>58</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to groupId with an access to devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>118</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to linkName with an access to version</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>129</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to magic with an access to version</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>140</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to version with an access to magic</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>161</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to userName with an access to magic</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>182</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to groupName with an access to magic</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>194</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to devMajor with an access to groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>206</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to devMinor with an access to groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>22</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to name with an access to userName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>34</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to mode with an access to devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>118ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>46</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to userId with an access to devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>58</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to groupId with an access to devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>118</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to linkName with an access to userName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>129</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to magic with an access to userName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>140</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to version with an access to userName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>161</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to userName with an access to version</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>182</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to groupName with an access to version</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>194</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to devMajor with an access to devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>206</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to devMinor with an access to devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>22</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to name with an access to groupName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>118</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to linkName with an access to groupName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>129</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to magic with an access to groupName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>140</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to version with an access to groupName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>161</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to userName with an access to groupName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>182</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to groupName with an access to userName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>34</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to field mode is replaced by access to local offset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>46</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to field userId is replaced by access to local offset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>58</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to field groupId is replaced by access to local offset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>961</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>89</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to field checkSumOK is replaced by access to local oldStyle</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>194</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to field devMajor is replaced by access to local offset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>206</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to field devMinor is replaced by access to local offset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>11ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>991</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>244</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to field isExtended is replaced by access to local oldStyle</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>218</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local type is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>991</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>242</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>local offset is replaced by local type to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>252</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>local offset is replaced by local type to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>20</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local oldStyle is replaced by access to field checkSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>17</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>30</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>42</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>54</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>957</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>66</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>77</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>963</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>97</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>104</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local oldStyle is replaced by access to field checkSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>107</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>113</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>126</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>137</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>147</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local oldStyle is replaced by access to field checkSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>150</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>156</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>168</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local oldStyle is replaced by access to field checkSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>171</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>177</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>190</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>202</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>218</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local type is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>991</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>242</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>252</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local offset is replaced by access to field mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>8</index><block>20</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local oldStyle is replaced by access to field isExtended</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>17</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>30</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>42</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>54</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>957</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>66</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>77</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>963</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>97</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>104</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local oldStyle is replaced by access to field isExtended</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>107</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>113</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>126</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>137</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>147</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local oldStyle is replaced by access to field isExtended</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>150</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>156</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>168</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local oldStyle is replaced by access to field isExtended</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>171</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>177</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>190</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>202</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>218</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local type is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>991</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>242</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>252</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local offset is replaced by access to field userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>17</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>30</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>42</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>9ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>54</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>957</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>66</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>77</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>963</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>97</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>107</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>113</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>126</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>137</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>150</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>156</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>171</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>177</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>190</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>202</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>218</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local type is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>991</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>242</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>252</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local offset is replaced by access to field groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>11</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>17</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>30</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>42</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>54</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>957</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>66</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>77</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>963</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>97</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>107</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>113</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>126</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>137</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>150</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>156</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>171</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>177</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>190</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>202</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>218</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local type is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>991</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>242</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>252</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local offset is replaced by access to field devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>11</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>17</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>30</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>42</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>9ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>54</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>957</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>66</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>77</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>963</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>97</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>107</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>113</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>126</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>137</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>150</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>156</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>171</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>177</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>190</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>202</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>983</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>218</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>access to local type is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>991</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>242</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>252</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local offset is replaced by access to field devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>32</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseOctalOrBinary with a call to parseOctal</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>44</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseOctalOrBinary with a call to parseOctal</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>56</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseOctalOrBinary with a call to parseOctal</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>957</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>68</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseOctalOrBinary with a call to parseOctal</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>959</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>79</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to parseOctalOrBinary with a call to parseOctal</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>192</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseOctalOrBinary with a call to parseOctal</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>204</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to parseOctalOrBinary with a call to parseOctal</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>993</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>254</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to parseOctal with a call to parseOctalOrBinary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>214</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::evaluateType([B)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>214</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to evaluateType([B)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>214</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to evaluateType([B)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>214</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to evaluateType([B)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>214</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to evaluateType([B)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>982</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>214</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to evaluateType([B)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>950</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>25</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Changed increment from 100 to -100</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>952</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>37</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Changed increment from 8 to -8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>21ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>954</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>49</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Changed increment from 8 to -8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>956</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>61</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Changed increment from 8 to -8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>11ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>958</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>72</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Changed increment from 12 to -12</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>7ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>83</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Changed increment from 12 to -12</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>92</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Changed increment from 8 to -8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>98</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>966</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>121</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Changed increment from 100 to -100</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>968</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>132</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Changed increment from 6 to -6</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>143</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Changed increment from 2 to -2</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>164</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Changed increment from 32 to -32</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>80ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>185</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Changed increment from 32 to -32</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>141ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>161ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>978</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>197</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Changed increment from 8 to -8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>980</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>209</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Changed increment from 8 to -8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>222</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Changed increment from 12 to -12</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>986</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>225</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Changed increment from 12 to -12</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>987</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>228</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Changed increment from 12 to -12</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>988</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>231</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Changed increment from 4 to -4</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>989</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>234</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>990</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>237</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Changed increment from 96 to -96</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>247</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>258</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Changed increment from 12 to -12</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>946</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>20</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>91ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 100 with 101</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 100 with 101</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>31</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 8 with 9</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>43</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 8 with 9</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>55</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 8 with 9</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>67</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 12 with 13</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>78</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 12 with 13</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>108</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 100 with 101</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>114</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 100 with 101</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>127</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 6 with 7</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>138</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>151</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 32 with 33</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>157</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 32 with 33</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>172</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 32 with 33</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>178</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 32 with 33</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>191</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 8 with 9</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>203</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 8 with 9</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>253</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Substituted 12 with 13</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>20</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>148</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>169</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseOctalOrBinary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseOctalOrBinary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>56</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseOctalOrBinary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>68</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseOctalOrBinary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>10ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>79</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseOctalOrBinary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>961</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>88</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::verifyCheckSum</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>109</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>116</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>128</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>139</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>152</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>159</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>173</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>180</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>192</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseOctalOrBinary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>204</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseOctalOrBinary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>982</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>214</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::evaluateType</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>991</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>243</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseBoolean</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>254</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseOctal</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>20</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>105</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>148</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>169</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>20</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>105</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>148</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>169</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>948</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>22</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed assignment to member variable name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>951</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>34</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed assignment to member variable mode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>953</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>46</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed assignment to member variable userId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>955</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>58</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed assignment to member variable groupId</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>69</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed assignment to member variable size</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>900ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>920ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>959</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>80</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed assignment to member variable modTime</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>961</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>89</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed assignment to member variable checkSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>100</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed assignment to member variable linkFlag</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>118</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed assignment to member variable linkName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>967</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>129</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed assignment to member variable magic</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>969</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>140</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed assignment to member variable version</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>971</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>161</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed assignment to member variable userName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>182</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed assignment to member variable groupName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>977</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>194</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed assignment to member variable devMajor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>206</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed assignment to member variable devMinor</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>991</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>244</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Removed assignment to member variable isExtended</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>993</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>255</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Removed assignment to member variable realSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>950</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>25</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed increment 100</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>952</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>37</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed increment 8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>954</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>49</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed increment 8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>23ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>956</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>61</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed increment 8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>958</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>72</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed increment 12</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>83</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed increment 12</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>92</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed increment 8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>98</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>966</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>121</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed increment 100</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>968</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>132</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed increment 6</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>970</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>143</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed increment 2</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>973</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>164</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed increment 32</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>976</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>185</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed increment 32</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveEntryTest.testTarFileWithFSRoot(org.apache.commons.compress.archivers.tar.TarArchiveEntryTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>978</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>197</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed increment 8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>980</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>209</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed increment 8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>985</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>222</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Removed increment 12</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>986</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>225</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Removed increment 12</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>987</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>228</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Removed increment 12</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>988</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>231</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Removed increment 4</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>989</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>234</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>990</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>237</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Removed increment 96</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>247</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>994</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>258</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Removed increment 12</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_0</mutator><index>219</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>RemoveSwitch 0 mutation</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_1</mutator><index>219</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>RemoveSwitch 1 mutation</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveEntry.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveEntry</mutatedClass><mutatedMethod>parseTarHeader</mutatedMethod><methodDescription>([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;Z)V</methodDescription><lineNumber>983</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.SwitchMutator</mutator><index>219</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Switch mutation</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>138ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;ILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;ILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;ILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>152ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;ILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;ILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;ILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>93ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;II)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>Substituted 10240 with 10241</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>Substituted 512 with 513</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readPaxHeaderWithEmbeddedNewline(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readSimplePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;ILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;ILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;ILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;ILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;ILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;ILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/InputStream;IILjava/lang/String;)V with a call to &#60;init&#62;(Ljava/io/InputStream;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>local blockSize is replaced by local recordSize to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;II)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>local recordSize is replaced by local blockSize to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;IILjava/lang/String;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.hasHitEOF is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::setAtEOF(Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;IILjava/lang/String;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>15</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to field is is replaced by access to local is</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>54ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;IILjava/lang/String;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to field recordSize is replaced by access to local blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;IILjava/lang/String;)V</methodDescription><lineNumber>142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to field blockSize is replaced by access to local blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;IILjava/lang/String;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to field recordSize is replaced by access to local recordSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;IILjava/lang/String;)V</methodDescription><lineNumber>142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to field blockSize is replaced by access to local recordSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;IILjava/lang/String;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local recordSize is replaced by local blockSize to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;IILjava/lang/String;)V</methodDescription><lineNumber>142</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local blockSize is replaced by local recordSize to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;IILjava/lang/String;)V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Substituted 256 with 257</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;IILjava/lang/String;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;IILjava/lang/String;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed call to org/apache/commons/compress/archivers/zip/ZipEncodingHelper::getZipEncoding</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;IILjava/lang/String;)V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Removed assignment to member variable SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;IILjava/lang/String;)V</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Removed assignment to member variable is</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;IILjava/lang/String;)V</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Removed assignment to member variable hasHitEOF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;IILjava/lang/String;)V</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Removed assignment to member variable encoding</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;IILjava/lang/String;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Removed assignment to member variable recordSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/InputStream;IILjava/lang/String;)V</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Removed assignment to member variable blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entrySize is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>18</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entrySize is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>20</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entrySize is guarded using field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded using field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>18</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entrySize is guarded using field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>116ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>20</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded using field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced access to entrySize with an access to entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced access to entryOffset with an access to entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>18</index><block>6</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>replaced access to entrySize with an access to entryOffset</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>20</index><block>6</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>replaced access to entryOffset with an access to entrySize</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entrySize is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>120ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>18</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entrySize is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>20</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entrySize is guarded returning field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded returning field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>18</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entrySize is guarded returning field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>20</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded returning field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>Substituted 2147483647 with 2147483648</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.BigFilesIT.readFileBiggerThan8GByteStar(org.apache.commons.compress.archivers.tar.BigFilesIT)</killingTests><suspValue>0.2182178902359924</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldUseSpecifiedEncodingWhenReadingGNULongNames(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>21ms</time></test><test><name>org.apache.commons.compress.changes.ChangeSetTestCase.testDeleteFromTar(org.apache.commons.compress.changes.ChangeSetTestCase)</name><time>27ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiLinkPathNamePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.TarTestCase.testTarUnarchive(org.apache.commons.compress.archivers.TarTestCase)</name><time>7ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongLinkNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</name><time>11ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>22ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongFileNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiPathNamePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testOldEntryPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.BigFilesIT.readFileBiggerThan8GByteStar(org.apache.commons.compress.archivers.tar.BigFilesIT)</name><time>18486ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongLinkNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiNameWithUnfortunateNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</name><time>29ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteLongDirectoryNameGnuMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testBigNumberPosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest.testWriteNonAsciiDirectoryNamePosixMode(org.apache.commons.compress.archivers.tar.TarArchiveOutputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.changes.ChangeSetTestCase.testDeleteFromAndAddToTar(org.apache.commons.compress.changes.ChangeSetTestCase)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>18676ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>23</index><block>6</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::available</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>6</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to is is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to is is guarded using field is</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>access to field is is replaced by access to local this</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to close with a call to reset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readNonAsciiPaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readPaxHeaderWithEmbeddedNewline(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readSimplePaxHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to is is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to is is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the access to is is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to close()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to close()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to close()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to close()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to close()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>the call to java.io.InputStream::close()V is guarded</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>removed call to java/io/InputStream::close</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/lang/String;B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/io/File;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/io/File;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/io/File;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/io/File;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/lang/String;BZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/lang/String;BZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/lang/String;BZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/lang/String;BZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/lang/String;B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/io/File;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/io/File;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>85ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/lang/String;BZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/lang/String;BZ)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/lang/String;B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/lang/String;B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/lang/String;B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;(Ljava/lang/String;B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;([BLorg/apache/commons/compress/archivers/zip/ZipEncoding;)V with a call to &#60;init&#62;([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>56</index><block>14</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>catch type java/lang/IllegalArgumentException is replaced with java/lang/RuntimeException</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to hasHitEOF is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>13</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to currEntry is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>50</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to encoding is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>85</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>91</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>119</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>147</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>157</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>168</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>174</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to hasHitEOF is guarded using field hasHitEOF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>13</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to currEntry is guarded using field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>50</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to encoding is guarded using field encoding</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>85</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded using field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>91</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded using field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>119</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded using field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>147</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded using field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>157</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded using field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>168</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded using field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>174</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded using field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.hasHitEOF is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::isAtEOF()Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>13</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>52</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::setCurrentEntry(Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>85</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>91</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>119</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>147</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>157</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>168</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>174</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>13</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>85</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>91</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>119</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>147</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>157</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>168</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>174</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>254</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>80</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to entryOffset with an access to entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>87</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to entrySize with an access to entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>170</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced access to entrySize with an access to entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>240</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>32</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local headerBuf is replaced by access to field SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>48</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local headerBuf is replaced by access to field SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced call to skipRecordPadding with a call to close</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>28</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to getRecord with a call to getLongNameData</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>86</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to getSize with a call to getRealSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>92</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongLinkEntry with a call to isCheckSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>120</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongNameEntry with a call to isCheckSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>148</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isPaxHeader with a call to isCheckSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>158</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNUSparse with a call to isCheckSumOK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>169</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to getSize with a call to getRealSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>39ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>201ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced call to skipRecordPadding with a call to reset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>28</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to getRecord with a call to readRecord</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>92</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongLinkEntry with a call to isExtended</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>120</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongNameEntry with a call to isExtended</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>148</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isPaxHeader with a call to isExtended</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>158</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNUSparse with a call to isExtended</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced call to skipRecordPadding with a call to paxHeaders</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>92</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongLinkEntry with a call to isGNUSparse</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>120</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongNameEntry with a call to isGNUSparse</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>148</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isPaxHeader with a call to isGNUSparse</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>158</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNUSparse with a call to isGNULongLinkEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced call to skipRecordPadding with a call to readGNUSparse</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>92</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongLinkEntry with a call to isGNULongNameEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>120</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongNameEntry with a call to isGNULongLinkEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>148</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isPaxHeader with a call to isGNULongLinkEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>158</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNUSparse with a call to isGNULongNameEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced call to skipRecordPadding with a call to tryToConsumeSecondEOFRecord</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>92</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongLinkEntry with a call to isPaxHeader</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>120</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongNameEntry with a call to isPaxHeader</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>148</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isPaxHeader with a call to isGNULongNameEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>158</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNUSparse with a call to isPaxHeader</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced call to skipRecordPadding with a call to consumeRemainderOfLastBlock</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>92</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongLinkEntry with a call to isGlobalPaxHeader</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>120</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongNameEntry with a call to isGlobalPaxHeader</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>148</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isPaxHeader with a call to isGlobalPaxHeader</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>158</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNUSparse with a call to isGlobalPaxHeader</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>92</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongLinkEntry with a call to isDirectory</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>120</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongNameEntry with a call to isDirectory</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>148</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isPaxHeader with a call to isDirectory</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>158</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNUSparse with a call to isDirectory</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>92</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongLinkEntry with a call to isFile</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>120</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongNameEntry with a call to isFile</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>148</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isPaxHeader with a call to isFile</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>158</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNUSparse with a call to isFile</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>92</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongLinkEntry with a call to isSymbolicLink</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>120</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongNameEntry with a call to isSymbolicLink</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>148</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isPaxHeader with a call to isSymbolicLink</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>158</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNUSparse with a call to isSymbolicLink</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>92</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongLinkEntry with a call to isLink</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>120</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNULongNameEntry with a call to isLink</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>148</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isPaxHeader with a call to isLink</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>158</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isGNUSparse with a call to isLink</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>19</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::skip(J)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>28</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getRecord()[B is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>86</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::getSize()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>92</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::isGNULongLinkEntry()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>120</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::isGNULongNameEntry()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>148</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::isPaxHeader()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>158</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::isGNUSparse()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>169</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveEntry::getSize()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to hasHitEOF is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>13</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to currEntry is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>50</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to encoding is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>85</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>91</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>119</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>147</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>157</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>168</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>174</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to hasHitEOF is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>13</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to currEntry is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>50</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to encoding is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>85</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>91</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>119</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>147</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>157</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>168</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>174</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the access to currEntry is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>19</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to skip(J)J is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to skipRecordPadding()V is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>28</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to getRecord()[B is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>86</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to getSize()J is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>92</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to isGNULongLinkEntry()Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>120</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to isGNULongNameEntry()Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>148</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to isPaxHeader()Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>158</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to isGNUSparse()Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>169</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to getSize()J is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>19</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to skip(J)J is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to skipRecordPadding()V is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>28</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to getRecord()[B is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>86</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to getSize()J is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>92</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to isGNULongLinkEntry()Z is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>120</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to isGNULongNameEntry()Z is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>148</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to isPaxHeader()Z is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>158</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to isGNUSparse()Z is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>169</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to getSize()J is guarded returning field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::skipRecordPadding()V is guarded</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::skip with argument</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>Substituted 9223372036854775807 with -9223372036854775808</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>79</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::skip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getRecord</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>86</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::getSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>92</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::isGNULongLinkEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>120</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::isGNULongNameEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>148</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::isPaxHeader</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>158</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::isGNUSparse</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>169</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveEntry::getSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>175</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getNextTarEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>33</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>93</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>121</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>149</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>159</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>33</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>93</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>121</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>110ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>149</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>159</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>1.0</suspValue><description>mutated return of Object value for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getNextTarEntry to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>175</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>mutated return of Object value for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getNextTarEntry to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::skipRecordPadding</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>52</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed assignment to member variable currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>80</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed assignment to member variable entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInGNUFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>87</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed assignment to member variable entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getNextTarEntry</mutatedMethod><methodDescription>()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>170</index><block>23</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Removed assignment to member variable entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>359</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>16</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to hasHitEOF is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>359</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>16</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to hasHitEOF is guarded using field hasHitEOF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>12</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.hasHitEOF is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::setAtEOF(Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>359</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>16</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.hasHitEOF is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::isAtEOF()Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>10</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local headerBuf is replaced by access to field SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>359</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local headerBuf is replaced by access to field SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>34</index><block>29</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local headerBuf is replaced by access to field SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to readRecord with a call to getLongNameData</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to readRecord with a call to getRecord</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::readRecord()[B is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>11</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::isEOFRecord([B)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>359</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>16</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to hasHitEOF is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>359</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>16</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to hasHitEOF is guarded returning local headerBuf</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>359</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>16</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to hasHitEOF is guarded returning field SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to readRecord()[B is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to isEOFRecord([B)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>11</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to isEOFRecord([B)Z is guarded returning local headerBuf</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>4</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to readRecord()[B is guarded returning field SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>11</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to isEOFRecord([B)Z is guarded returning field SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::readRecord</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::isEOFRecord</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>35</index><block>29</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getRecord</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>19</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>19</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>29</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>mutated return of Object value for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::getRecord to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>getRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>12</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed assignment to member variable hasHitEOF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>7</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to recordSize is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>7</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to recordSize is guarded using field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>7</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.recordSize is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getRecordSize()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>7</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.recordSize is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::available()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>7</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to recordSize with an access to blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>30</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local record is replaced by access to field SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local record is replaced by access to field SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>7</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to recordSize is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>7</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to recordSize is guarded returning field hasHitEOF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>16</index><block>33</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::isEOFRecord</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>16</index><block>33</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::isEOFRecord</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>32</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>33</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>30</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/utils/ArchiveUtils::isArrayZero</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>30</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>30</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>isEOFRecord</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>33</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>151ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to hasHitEOF is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>13</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entrySize is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>23</index><block>40</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to currEntry is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>42</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to is is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>68</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to hasHitEOF is guarded using field hasHitEOF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded using field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>13</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entrySize is guarded using field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>23</index><block>40</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to currEntry is guarded using field currEntry</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>42</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to is is guarded using field is</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>68</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded using field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>8</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.hasHitEOF is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::isAtEOF()Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>23</index><block>40</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getNextTarEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>586</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>62</index><block>43</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>1.0</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.hasHitEOF is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::setAtEOF(Z)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>23</index><block>40</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.currEntry is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getCurrentEntry()Lorg/apache/commons/compress/archivers/tar/TarArchiveEntry;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>115ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced access to entryOffset with an access to entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>13</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced access to entrySize with an access to entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>68</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced access to entryOffset with an access to entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>72</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced access to entryOffset with an access to entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>42</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to field is is replaced by access to local this</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>34</index><block>42</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>local numToRead is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>local numToRead is replaced by local offset to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>44</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>local offset is replaced by local numToRead to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>42</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>local numToRead is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>47</index><block>42</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>local totalRead is replaced by local offset to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>51</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>local totalRead is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>585</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>55</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>local totalRead is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>69</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>local totalRead is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>75</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>local totalRead is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>34</index><block>42</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>local numToRead is replaced by local totalRead to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>38</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>local numToRead is replaced by local totalRead to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>44</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>local offset is replaced by local totalRead to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>45</index><block>42</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>local numToRead is replaced by local totalRead to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>47</index><block>42</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>local totalRead is replaced by local numToRead to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>51</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>local totalRead is replaced by local numToRead to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>116ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>585</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>55</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>local totalRead is replaced by local numToRead to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>69</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>local totalRead is replaced by local numToRead to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>75</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>local totalRead is replaced by local numToRead to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>34</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local numToRead is replaced by access to field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>43</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local buf is replaced by access to field SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>44</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local offset is replaced by access to field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>45</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local numToRead is replaced by access to field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>51</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local totalRead is replaced by access to field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>585</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>55</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local totalRead is replaced by access to field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>69</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local totalRead is replaced by access to field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>75</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local totalRead is replaced by access to field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>34</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local numToRead is replaced by access to field recordSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>44</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local offset is replaced by access to field recordSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>45</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local numToRead is replaced by access to field recordSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>51</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local totalRead is replaced by access to field recordSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>585</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>55</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local totalRead is replaced by access to field recordSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>69</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local totalRead is replaced by access to field recordSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>75</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local totalRead is replaced by access to field recordSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>34</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local numToRead is replaced by access to field blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>44</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local offset is replaced by access to field blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>45</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local numToRead is replaced by access to field blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>51</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local totalRead is replaced by access to field blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>585</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>55</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local totalRead is replaced by access to field blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>69</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local totalRead is replaced by access to field blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>591</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>75</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>access to local totalRead is replaced by access to field blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>36</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to available with a call to getRecordSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>37</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to min with a call to max</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>36</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::available()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to java.io.InputStream::read([BII)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to hasHitEOF is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>13</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entrySize is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>23</index><block>40</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to currEntry is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>42</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to is is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>68</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>8</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to hasHitEOF is guarded returning local offset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>11</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded returning local offset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>13</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entrySize is guarded returning local offset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>23</index><block>40</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to currEntry is guarded returning local offset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>42</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to is is guarded returning local offset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>68</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded returning local offset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>8</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to hasHitEOF is guarded returning field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded returning field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>13</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entrySize is guarded returning field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>576</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>23</index><block>40</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to currEntry is guarded returning field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>42</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to is is guarded returning field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>68</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the access to entryOffset is guarded returning field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>36</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to available()I is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to read([BII)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>52</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to count(I)V is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>36</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to available()I is guarded returning local offset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to read([BII)I is guarded returning local offset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>52</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to count(I)V is guarded returning local offset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>36</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to available()I is guarded returning local numToRead</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to read([BII)I is guarded returning local numToRead</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>52</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to count(I)V is guarded returning local numToRead</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>116ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>36</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to available()I is guarded returning field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to read([BII)I is guarded returning field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>52</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to count(I)V is guarded returning field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>36</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to available()I is guarded returning field recordSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to read([BII)I is guarded returning field recordSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>52</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to count(I)V is guarded returning field recordSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>583</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>52</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::count(I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>37</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to java/lang/Math::min with argument</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>46</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to java/io/InputStream::read with argument</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>38</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>39</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>Substituted -1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>56</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>61</index><block>43</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>1.0</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>40</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>42</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::available</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>42</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>removed call to java/lang/Math::min</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>42</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>removed call to java/io/InputStream::read</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>19</index><block>39</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::read</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>76</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced int return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::read</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>24</index><block>40</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>57</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>576</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>24</index><block>40</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>57</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>15</index><block>38</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>15</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>39</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>76</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>52</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>62</index><block>43</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>1.0</suspValue><description>Removed assignment to member variable hasHitEOF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>72</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>Removed assignment to member variable entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>388</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>12</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[B)I with a call to readFully(Ljava/io/InputStream;[BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>388</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>12</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[B)I with a call to readFully(Ljava/io/InputStream;[BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>388</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>12</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[B)I with a call to readFully(Ljava/io/InputStream;[BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>388</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>12</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[B)I with a call to readFully(Ljava/io/InputStream;[BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>388</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>12</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[B)I with a call to readFully(Ljava/io/InputStream;[BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>388</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>12</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[B)I with a call to readFully(Ljava/io/InputStream;[BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>386</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to recordSize is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>388</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to is is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>23</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to recordSize is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>23</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to recordSize is guarded using local readNow</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>386</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to recordSize is guarded using field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>388</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to is is guarded using field is</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>23</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to recordSize is guarded using field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>386</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.recordSize is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getRecordSize()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>23</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.recordSize is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getRecordSize()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>386</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.recordSize is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::available()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>23</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.recordSize is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::available()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>386</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to recordSize with an access to blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>23</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced access to recordSize with an access to blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>388</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>10</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to field is is replaced by access to local this</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>23</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to field recordSize is replaced by access to local readNow</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>388</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local record is replaced by access to field SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>389</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>17</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local readNow is replaced by access to field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>21</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local readNow is replaced by access to field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>394</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>31</index><block>36</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local record is replaced by access to field SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>389</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>17</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local readNow is replaced by access to field recordSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>21</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local readNow is replaced by access to field recordSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>389</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>17</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local readNow is replaced by access to field blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>21</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local readNow is replaced by access to field blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>386</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to recordSize is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>388</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to is is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>23</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to recordSize is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>388</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to is is guarded returning local record</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>23</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to recordSize is guarded returning local record</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>386</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to recordSize is guarded returning field SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>388</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>10</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to is is guarded returning field SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>23</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the access to recordSize is guarded returning field SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>389</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>18</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to count(I)V is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>389</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>18</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to count(I)V is guarded returning local record</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>389</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>18</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to count(I)V is guarded returning field SMALL_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>389</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>18</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::count(I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/utils/IOUtils::readFully</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>32</index><block>36</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced return value with null for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::readRecord</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>24</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>24</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>36</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>mutated return of Object value for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::readRecord to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>readRecord</mutatedMethod><methodDescription>()[B</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entrySize is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entryOffset is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to is is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>31</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entryOffset is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entrySize is guarded using local numToSkip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entryOffset is guarded using local numToSkip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>31</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entryOffset is guarded using local numToSkip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entrySize is guarded using field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entryOffset is guarded using field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to is is guarded using field is</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>31</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entryOffset is guarded using field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>121ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced access to entrySize with an access to entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced access to entryOffset with an access to entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>31</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced access to entryOffset with an access to entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>34</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced access to entryOffset with an access to entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to field entrySize is replaced by access to local numToSkip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to field entryOffset is replaced by access to local numToSkip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to field is is replaced by access to local this</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>31</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to field entryOffset is replaced by access to local numToSkip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>34</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to field entryOffset is replaced by access to local numToSkip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>31</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to field entryOffset is replaced by access to local available</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>34</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to field entryOffset is replaced by access to local available</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>31</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to field entryOffset is replaced by access to local skipped</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>34</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to field entryOffset is replaced by access to local skipped</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>local numToSkip is replaced by local available to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>12</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>local available is replaced by local numToSkip to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>local numToSkip is replaced by local available to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>local numToSkip is replaced by local available to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>25</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>local skipped is replaced by local numToSkip to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>32</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>local skipped is replaced by local numToSkip to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>local skipped is replaced by local numToSkip to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>25</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>local skipped is replaced by local available to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>32</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>local skipped is replaced by local available to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>local skipped is replaced by local available to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to local numToSkip is replaced by access to field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>12</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to local available is replaced by access to field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to local numToSkip is replaced by access to field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to local numToSkip is replaced by access to field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>25</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to local skipped is replaced by access to field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>32</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to local skipped is replaced by access to field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to local skipped is replaced by access to field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to local numToSkip is replaced by access to field entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>12</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to local available is replaced by access to field entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>14</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to local numToSkip is replaced by access to field entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>19</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to local numToSkip is replaced by access to field entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>25</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to local skipped is replaced by access to field entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>32</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to local skipped is replaced by access to field entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>access to local skipped is replaced by access to field entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>197</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced call to min with a call to max</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entrySize is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entryOffset is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to is is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>31</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entryOffset is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entrySize is guarded returning local numToSkip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entryOffset is guarded returning local numToSkip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to is is guarded returning local numToSkip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>31</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entryOffset is guarded returning local numToSkip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entrySize is guarded returning field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entryOffset is guarded returning field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>18</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to is is guarded returning field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>31</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entryOffset is guarded returning field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>26</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to count(J)V is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>26</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to count(J)V is guarded returning local numToSkip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>26</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to count(J)V is guarded returning local available</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>116ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>26</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to count(J)V is guarded returning field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>26</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to count(J)V is guarded returning field entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>26</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::count(J)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced call to java/lang/Math::min with argument</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced call to org/apache/commons/compress/utils/IOUtils::skip with argument</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>removed call to java/lang/Math::min</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>removed call to org/apache/commons/compress/utils/IOUtils::skip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>38</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced long return with 0 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::skip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/compress/archivers/tar/TarArchiveInputStream::skip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>34</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>Removed assignment to member variable entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entrySize is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entrySize is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to recordSize is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>20</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to entrySize is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>22</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to recordSize is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>32</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to recordSize is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>36</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to entrySize is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>42</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to is is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>36</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to entrySize is guarded using local numRecords</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entrySize is guarded using field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entrySize is guarded using field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to recordSize is guarded using field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>20</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to entrySize is guarded using field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>22</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to recordSize is guarded using field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>32</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to recordSize is guarded using field SMALL_BUFFER_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>36</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to entrySize is guarded using field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>42</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to is is guarded using field is</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.recordSize is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getRecordSize()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>22</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.recordSize is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getRecordSize()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>32</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.recordSize is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::getRecordSize()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>11</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.recordSize is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::available()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>22</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.recordSize is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::available()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>32</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to field org.apache.commons.compress.archivers.tar.TarArchiveInputStream.recordSize is replaced by the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::available()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced access to entrySize with an access to entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced access to entrySize with an access to entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>replaced access to recordSize with an access to blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>20</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to entrySize with an access to entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>22</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to recordSize with an access to blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.readsArchiveCompletely_COMPRESS245(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>32</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to recordSize with an access to blockSize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>36</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced access to entrySize with an access to entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>36</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>access to field entrySize is replaced by access to local numRecords</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>42</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>access to field is is replaced by access to local this</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>43</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>local padding is replaced by local numRecords to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>49</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>local skipped is replaced by local numRecords to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>49</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>local skipped is replaced by local padding to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>30</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>access to local numRecords is replaced by access to field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>43</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>access to local padding is replaced by access to field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>49</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>access to local skipped is replaced by access to field entrySize</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>30</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>access to local numRecords is replaced by access to field entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>43</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>access to local padding is replaced by access to field entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>49</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>access to local skipped is replaced by access to field entryOffset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entrySize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entrySize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to recordSize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>20</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to entrySize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>22</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to recordSize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>32</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to recordSize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>36</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to entrySize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>42</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to is is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entrySize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>52ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>9</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entrySize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>11</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to recordSize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>20</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to entrySize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>22</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to recordSize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>32</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to recordSize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>36</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to entrySize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>42</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to is is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entrySize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to entrySize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>the access to recordSize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>20</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to entrySize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>22</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to recordSize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>32</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to recordSize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>36</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to entrySize is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>42</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the access to is is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>50</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to count(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>50</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to count(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>50</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to count(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>50</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to count(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>50</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to count(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>50</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>the call to org.apache.commons.compress.archivers.tar.TarArchiveInputStream::count(J)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>44</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>replaced call to org/apache/commons/compress/utils/IOUtils::skip with argument</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>Replaced long modulus with multiplication</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>Replaced long division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>Replaced long multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>removed call to org/apache/commons/compress/utils/IOUtils::skip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>16</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>50ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>16</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>7</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.datePriorToEpochInPAXFormat(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.workaroundForBrokenTimeHeader(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.testCompress197(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldConsumeArchiveCompletely(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>7</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarArchiveInputStream</mutatedClass><mutatedMethod>skipRecordPadding</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarArchiveInputStream::count</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseBoolean</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>230</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local offset is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseBoolean</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>13</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarUtils::parseBoolean</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseBoolean</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>13</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarUtils::parseBoolean</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseBoolean</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseBoolean</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseBoolean</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseBoolean</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseBoolean</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseBoolean</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseBoolean</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>MethodNameMutator_0</mutator><index>7</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>MethodNameMutator_4</mutator><index>7</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>the call to factory method org.apache.commons.compress.archivers.tar.TarUtils.parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to parseName([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String; with a call to parseName([BII)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>10</index><block>28</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>catch type java/io/IOException is replaced with java/lang/Exception</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>6</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced access to DEFAULT_ENCODING with an access to FALLBACK_ENCODING</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>local offset is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>local length is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>access to local offset is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>access to local length is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>9</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced return value with &#34;&#34; for org/apache/commons/compress/archivers/tar/TarUtils::parseName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BII)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>mutated return of Object value for org/apache/commons/compress/archivers/tar/TarUtils::parseName to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>299</lineNumber><mutator>MethodNameMutator_0</mutator><index>47</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>the call to factory method org.apache.commons.compress.archivers.zip.ZipEncoding.decode([B)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>299</lineNumber><mutator>MethodNameMutator_4</mutator><index>47</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>the call to factory method org.apache.commons.compress.archivers.zip.ZipEncoding.decode([B)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>30</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local length is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>30</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local len is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>12</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local offset is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local len is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>28</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local len is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>297</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>32</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local len is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local buffer is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local offset is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>39</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local b is replaced by local buffer to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>41</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local len is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>46</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local b is replaced by local buffer to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>7</index><block>30</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local len is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>12</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local offset is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>13</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local len is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>28</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local len is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>297</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>32</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local len is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>38</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local offset is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>41</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local len is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>30</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local length is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>30</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local len is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>12</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local offset is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>292</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local len is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>28</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local len is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>297</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>32</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local len is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local offset is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>41</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local len is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>45</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local encoding is replaced by access to field DEFAULT_ENCODING</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>45</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local encoding is replaced by access to field FALLBACK_ENCODING</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>47</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>the call to org.apache.commons.compress.archivers.zip.ZipEncoding::decode([B)Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>47</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>the call to decode([B)Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>30</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>48</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>replaced return value with &#34;&#34; for org/apache/commons/compress/archivers/tar/TarUtils::parseName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>24</index><block>33</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>30</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>47</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed call to org/apache/commons/compress/archivers/zip/ZipEncoding::decode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>18</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>18</index><block>31</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>8</index><block>30</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>29</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>111ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>8</index><block>30</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>29</index><block>34</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>mutated return of Object value for org/apache/commons/compress/archivers/tar/TarUtils::parseName to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>52</index><block>36</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>mutated return of Object value for org/apache/commons/compress/archivers/tar/TarUtils::parseName to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>35</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed call to java/lang/System::arraycopy</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseName</mutatedMethod><methodDescription>([BIILorg/apache/commons/compress/archivers/zip/ZipEncoding;)Ljava/lang/String;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>24</index><block>33</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>Removed increment -1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>local offset is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>local length is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>local offset is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>local length is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>local start is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>48</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local start is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>49</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local end is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>54</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local start is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>128</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local end is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>72</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local start is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>73</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local end is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>86</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local end is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>94</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local start is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>38ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>95</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local end is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>100</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local start is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctalInvalid(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>105</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local currentByte is replaced by local trailer to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>108</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local currentByte is replaced by local trailer to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>128</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local currentByte is replaced by local trailer to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>local offset is replaced by local end to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>local length is replaced by local end to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>local start is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>48</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local start is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>49</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local end is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>54</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local start is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>128</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local end is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.TarTestCase.testCOMPRESS178(org.apache.commons.compress.archivers.TarTestCase)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary8(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.compress.archivers.tar.SparseFilesTest.testOldGNU(org.apache.commons.compress.archivers.tar.SparseFilesTest)</name><time>1ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctalInvalid(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>72</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local start is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>73</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local end is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>86</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local end is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>94</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local start is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>95</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local end is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>100</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local start is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>local length is replaced by local start to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>local start is replaced by local end to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>48</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local start is replaced by local end to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>49</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local end is replaced by local start to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>54</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local start is replaced by local end to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>128</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local end is replaced by local start to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>72</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local start is replaced by local end to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>73</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local end is replaced by local start to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>86</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local end is replaced by local start to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>94</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local start is replaced by local end to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>95</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local end is replaced by local start to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>100</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>local start is replaced by local end to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>access to local offset is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>access to local length is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>access to local offset is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>access to local length is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>access to local start is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>48</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local start is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>49</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local end is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>54</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local start is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>128</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local end is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>72</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local start is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>73</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local end is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>86</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local end is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>94</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local start is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>95</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local end is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>100</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>access to local start is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>74</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>96</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>107</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctalInvalid(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>110</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>82</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>17ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>136</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>44</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>56</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Substituted 32 with 33</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>66</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>78</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Substituted 32 with 33</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>87</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>106</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctalInvalid(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>8ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>109</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Substituted 55 with 56</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>126</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>129</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>127</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Replaced Shift Left with Shift Right</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>132</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>110</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>141</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced long return with 0 for org/apache/commons/compress/archivers/tar/TarUtils::parseOctal</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>41</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>57</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>110ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>76</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>79</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>41</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>57</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>76</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>79</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>74</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>96</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>107</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>110</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.14907119849998599</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>50</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>74</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>96</index><block>11</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>107</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>110</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.15075567228888181</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctal(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.25</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/compress/archivers/tar/TarUtils::parseOctal</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>141</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/compress/archivers/tar/TarUtils::parseOctal</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>82</index><block>10</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>Removed increment -1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctal</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>136</index><block>15</block><killingTests/><suspValue>0.15075567228888181</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctalOrBinary</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>17</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>local offset is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctalOrBinary</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>12</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>local offset is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>37ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>124ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctalOrBinary</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>local length is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctalOrBinary</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>17</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local offset is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctalOrBinary</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>12</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>access to local offset is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctalOrBinary</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>access to local length is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctalOrBinary</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>14</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced call to parseOctal with a call to parseOctalOrBinary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctalOrBinary</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>17</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>Substituted 128 with 129</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testReadNegativeBinary12Byte(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testWriteNegativeBinary8Byte(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testReadNegativeBinary8Byte(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctalOrBinary</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>17</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testReadNegativeBinary12Byte(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testWriteNegativeBinary8Byte(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testReadNegativeBinary8Byte(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctalOrBinary</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>17</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testReadNegativeBinary8Byte(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testReadNegativeBinary8Byte(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctalOrBinary</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>removed call to org/apache/commons/compress/archivers/tar/TarUtils::parseOctal</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctalOrBinary</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>15</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced long return with 0 for org/apache/commons/compress/archivers/tar/TarUtils::parseOctalOrBinary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctalOrBinary</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>17</block><killingTests>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testReadNegativeBinary12Byte(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testWriteNegativeBinary8Byte(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testReadNegativeBinary8Byte(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarUtilsTest.testRoundTripOctalOrBinary12(org.apache.commons.compress.archivers.tar.TarUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctalOrBinary</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>17</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>parseOctalOrBinary</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1543033499620919</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/compress/archivers/tar/TarUtils::parseOctalOrBinary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>608</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local i is replaced by local digits to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>609</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local i is replaced by local digits to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local i is replaced by local digits to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>39</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local i is replaced by local digits to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>48</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local digits is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>54</index><block>43</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>local storedSum is replaced by local unsignedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>62</index><block>43</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>local storedSum is replaced by local unsignedSum to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>66</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local digits is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>71</index><block>45</block><killingTests/><suspValue>0.16012815380508713</suspValue><description>local digits is replaced by local i to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>618</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>78</index><block>45</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local unsignedSum is replaced by local storedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>618</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>84</index><block>45</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local unsignedSum is replaced by local storedSum to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>87</index><block>45</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local signedSum is replaced by local storedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>91</index><block>45</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local signedSum is replaced by local storedSum to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>98</index><block>46</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local storedSum is replaced by local unsignedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>99</index><block>46</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local unsignedSum is replaced by local storedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>102</index><block>47</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local storedSum is replaced by local unsignedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>103</index><block>47</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local signedSum is replaced by local storedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>106</index><block>48</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local storedSum is replaced by local unsignedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>107</index><block>48</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local unsignedSum is replaced by local storedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>54</index><block>43</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>local storedSum is replaced by local signedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>612</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>62</index><block>43</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>local storedSum is replaced by local signedSum to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>618</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>78</index><block>45</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local unsignedSum is replaced by local signedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>618</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>84</index><block>45</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local unsignedSum is replaced by local signedSum to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>108ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>87</index><block>45</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local signedSum is replaced by local unsignedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>91</index><block>45</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local signedSum is replaced by local unsignedSum to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>98</index><block>46</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local storedSum is replaced by local signedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>99</index><block>46</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local unsignedSum is replaced by local signedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>102</index><block>47</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local storedSum is replaced by local signedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>103</index><block>47</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local signedSum is replaced by local unsignedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>106</index><block>48</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local storedSum is replaced by local signedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>107</index><block>48</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local unsignedSum is replaced by local signedSum to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>608</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>22</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local i is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>609</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>29</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local i is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>35</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local i is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>37</index><block>39</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local i is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>48</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local digits is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>66</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>access to local digits is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>116</index><block>50</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced boolean return with false for org/apache/commons/compress/archivers/tar/TarUtils::verifyCheckSum</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>116</index><block>50</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced boolean return with true for org/apache/commons/compress/archivers/tar/TarUtils::verifyCheckSum</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>39</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><block>40</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>41</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>67</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>109</index><block>48</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>49</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>94</index><block>45</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>605</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 148 with 149</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>38</index><block>39</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 156 with 157</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>42</index><block>40</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>41</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 55 with 56</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>50</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 6 with 7</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>55</index><block>43</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>Substituted 8 with 9</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>60</index><block>43</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>45</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>Substituted 6 with 7</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>74</index><block>45</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 32 with 33</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>79</index><block>45</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 255 with 256</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>111</index><block>49</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>114</index><block>50</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>56</index><block>43</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>Replaced long multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>43</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>43</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>45</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>45</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>45</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>39</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>40</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>41</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><block>46</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>105</index><block>47</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><block>48</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>101</index><block>46</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>105</index><block>47</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>101</index><block>46</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>105</index><block>47</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>25</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>36</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>39</index><block>39</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>44</index><block>40</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>37ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>47</index><block>41</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>51</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>67</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>109</index><block>48</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>25</index><block>37</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>36</index><block>38</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>39</index><block>39</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>44</index><block>40</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>47</index><block>41</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>51</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>67</index><block>44</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>109</index><block>48</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>116</index><block>50</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TarUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.tar.TarUtils</mutatedClass><mutatedMethod>verifyCheckSum</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>49</index><block>42</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)J</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to copy(Ljava/io/InputStream;Ljava/io/OutputStream;I)J with a call to copy(Ljava/io/InputStream;Ljava/io/OutputStream;)J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)J</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to copy(Ljava/io/InputStream;Ljava/io/OutputStream;I)J with a call to copy(Ljava/io/InputStream;Ljava/io/OutputStream;)J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)J</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to copy(Ljava/io/InputStream;Ljava/io/OutputStream;I)J with a call to copy(Ljava/io/InputStream;Ljava/io/OutputStream;)J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)J</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to copy(Ljava/io/InputStream;Ljava/io/OutputStream;I)J with a call to copy(Ljava/io/InputStream;Ljava/io/OutputStream;)J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)J</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to copy(Ljava/io/InputStream;Ljava/io/OutputStream;I)J with a call to copy(Ljava/io/InputStream;Ljava/io/OutputStream;)J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)J</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to copy(Ljava/io/InputStream;Ljava/io/OutputStream;I)J with a call to copy(Ljava/io/InputStream;Ljava/io/OutputStream;)J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)J</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>Substituted 8024 with 8025</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)J</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>removed call to org/apache/commons/compress/utils/IOUtils::copy</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)J</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced long return with 0 for org/apache/commons/compress/utils/IOUtils::copy</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;)J</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/compress/utils/IOUtils::copy</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to read([B)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>104ms</time></test></testsExecutionTime><patchExecutionTime>177ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to write([BII)V with a call to write(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>19</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>replaced call to read([B)I with a call to read([BII)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to write([BII)V with a call to write([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to read([B)I with a call to read([BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to write([BII)V with a call to write([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to read([B)I with a call to read([BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to write([BII)V with a call to write([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to read([B)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>60ms</time></test></testsExecutionTime><patchExecutionTime>81ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to write([BII)V with a call to write(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to read([B)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to write([BII)V with a call to write(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to read([B)I with a call to read([BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to write([BII)V with a call to write([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>19</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>replaced call to read([B)I with a call to read([BII)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to write([BII)V with a call to write([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to read([B)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to write([BII)V with a call to write(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to read([B)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>87ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to write([BII)V with a call to write(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to read([B)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>78ms</time></test></testsExecutionTime><patchExecutionTime>94ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to write([BII)V with a call to write(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to read([B)I with a call to read([BII)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to write([BII)V with a call to write([B)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>local n is replaced by local buffersize to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>local n is replaced by local buffersize to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>local n is replaced by local buffersize to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>access to local buffersize is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>access to local buffer is replaced by access to field SKIP_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>access to local buffer is replaced by access to field SKIP_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>access to local n is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>access to local n is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>access to local buffersize is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>access to local n is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>access to local n is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>the call to java.io.InputStream::read([B)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>the call to read([B)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>the call to write([BII)V is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>the call to read([B)I is guarded returning local count</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>the call to write([BII)V is guarded returning local count</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>the call to java.io.OutputStream::write([BII)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>1</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>removed call to java/io/InputStream::read</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>41</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced long return with 0 for org/apache/commons/compress/utils/IOUtils::copy</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/compress/utils/IOUtils::copy</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>(Ljava/io/InputStream;Ljava/io/OutputStream;I)J</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>removed call to java/io/OutputStream::write</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>8</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[BII)I with a call to readFully(Ljava/io/InputStream;[B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>8</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[BII)I with a call to readFully(Ljava/io/InputStream;[B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>8</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[BII)I with a call to readFully(Ljava/io/InputStream;[B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>8</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[BII)I with a call to readFully(Ljava/io/InputStream;[B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>8</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[BII)I with a call to readFully(Ljava/io/InputStream;[B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>8</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to readFully(Ljava/io/InputStream;[BII)I with a call to readFully(Ljava/io/InputStream;[B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>access to local b is replaced by access to field SKIP_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>access to local b is replaced by access to field SKIP_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>8</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced call to org/apache/commons/compress/utils/IOUtils::readFully with argument</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>removed call to org/apache/commons/compress/utils/IOUtils::readFully</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>9</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced int return with 0 for org/apache/commons/compress/utils/IOUtils::readFully</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[B)I</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>13</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.09245003270420485</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>115ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>replaced call to read([BII)I with a call to read()I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>replaced call to read([BII)I with a call to read([B)I</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>14</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local len is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local offset is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local len is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local offset is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>28</index><block>18</block><killingTests/><suspValue>0.08512565307587486</suspValue><description>local count is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local len is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local offset is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local count is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>19</block><killingTests/><suspValue>0.08512565307587486</suspValue><description>local len is replaced by local offset to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>39</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local count is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>42</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local x is replaced by local offset to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local x is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>53</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08638684255813601</suspValue><description>local count is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>54</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08638684255813601</suspValue><description>local x is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>56</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08638684255813601</suspValue><description>local count is replaced by local offset to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>60</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local count is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>28</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local count is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>29</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local len is replaced by local count to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>35</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local offset is replaced by local count to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>99ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>36</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local count is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>38</index><block>19</block><killingTests/><suspValue>0.08512565307587486</suspValue><description>local len is replaced by local count to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>39</index><block>19</block><killingTests/><suspValue>0.08512565307587486</suspValue><description>local count is replaced by local len to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>42</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local x is replaced by local len to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>45</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local x is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>53</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08638684255813601</suspValue><description>local count is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>54</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08638684255813601</suspValue><description>local x is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>56</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08638684255813601</suspValue><description>local count is replaced by local len to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>60</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local count is replaced by local len to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>106ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>28</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local count is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>29</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local len is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>35</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local offset is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>110ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>36</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local count is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>38</index><block>19</block><killingTests/><suspValue>0.08512565307587486</suspValue><description>local len is replaced by local x to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>39</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local count is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>113ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>42</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local x is replaced by local count to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>45</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local x is replaced by local count to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>53</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08638684255813601</suspValue><description>local count is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>54</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08638684255813601</suspValue><description>local x is replaced by local count to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>56</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08638684255813601</suspValue><description>local count is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>60</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>local count is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>111ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>14</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local len is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>110ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local offset is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local len is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local offset is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>10</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local b is replaced by access to field SKIP_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>28</index><block>18</block><killingTests/><suspValue>0.08512565307587486</suspValue><description>access to local count is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>29</index><block>18</block><killingTests/><suspValue>0.08512565307587486</suspValue><description>access to local len is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>34</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local b is replaced by access to field SKIP_BUF</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>35</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local offset is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>36</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local count is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local len is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>98ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>39</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local count is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>45</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local x is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>53</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08638684255813601</suspValue><description>access to local count is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>54</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08638684255813601</suspValue><description>access to local x is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>60</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local count is replaced by access to field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>14</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local len is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>5</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local offset is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local len is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>8</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local offset is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>28</index><block>18</block><killingTests/><suspValue>0.08512565307587486</suspValue><description>access to local count is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>29</index><block>18</block><killingTests/><suspValue>0.08512565307587486</suspValue><description>access to local len is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>35</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local offset is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>36</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local count is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local len is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>39</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local count is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>45</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local x is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>53</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08638684255813601</suspValue><description>access to local count is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>54</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08638684255813601</suspValue><description>access to local x is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>60</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>access to local count is replaced by access to field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>the call to java.io.InputStream::read([BII)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>the call to read([BII)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>the call to read([BII)I is guarded returning local offset</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>the call to read([BII)I is guarded returning local len</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>the call to read([BII)I is guarded returning field COPY_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>the call to read([BII)I is guarded returning field SKIP_BUF_SIZE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>41</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>replaced call to java/io/InputStream::read with argument</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>14</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>18</block><killingTests>org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(org.apache.commons.compress.utils.IOUtilsTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(org.apache.commons.compress.utils.IOUtilsTest)</name><time>3ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>21</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08638684255813601</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>14</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>19</block><killingTests/><suspValue>0.08512565307587486</suspValue><description>removed call to java/io/InputStream::read</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>61</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>replaced int return with 0 for org/apache/commons/compress/utils/IOUtils::readFully</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>30</index><block>18</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>47</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>30</index><block>18</block><killingTests/><suspValue>0.08512565307587486</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>47</index><block>19</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>4</index><block>14</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>12</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>4</index><block>14</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>15</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>12</index><block>16</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>readFully</mutatedMethod><methodDescription>(Ljava/io/InputStream;[BII)I</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>61</index><block>22</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08512565307587486</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>local numToSkip is replaced by local available to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16666666666666666</suspValue><description>local numToSkip is replaced by local available to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16666666666666666</suspValue><description>local skipped is replaced by local numToSkip to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>28</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local numToSkip is replaced by local available to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local skipped is replaced by local numToSkip to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>31</index><block>7</block><killingTests/><suspValue>0.17677669529663687</suspValue><description>local numToSkip is replaced by local available to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>local numToSkip is replaced by local available to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>72</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>local available is replaced by local numToSkip to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>73</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>local numToSkip is replaced by local available to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16666666666666666</suspValue><description>local skipped is replaced by local available to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>28</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local numToSkip is replaced by local skipped to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>29</index><block>7</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>local skipped is replaced by local available to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>31</index><block>7</block><killingTests/><suspValue>0.17677669529663687</suspValue><description>local numToSkip is replaced by local skipped to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16666666666666666</suspValue><description>the call to java.io.InputStream::skip(J)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16666666666666666</suspValue><description>the call to skip(J)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>111ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16666666666666666</suspValue><description>the call to skip(J)J is guarded returning local numToSkip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16666666666666666</suspValue><description>the call to skip(J)J is guarded returning local available</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(org.apache.commons.compress.utils.IOUtilsTest)</killingTests><suspValue>0.16666666666666666</suspValue><description>replaced call to java/io/InputStream::skip with argument</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(org.apache.commons.compress.utils.IOUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16666666666666666</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>38</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>7</block><killingTests>org.apache.commons.compress.utils.IOUtilsTest.skipUsingSkip(org.apache.commons.compress.utils.IOUtilsTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test><test><name>org.apache.commons.compress.utils.IOUtilsTest.skipUsingSkip(org.apache.commons.compress.utils.IOUtilsTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>5</block><killingTests/><suspValue>0.16666666666666666</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16666666666666666</suspValue><description>removed call to java/io/InputStream::skip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>75</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced long return with 0 for org/apache/commons/compress/utils/IOUtils::skip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>99ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16666666666666666</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.compress.utils.IOUtilsTest.skipUsingSkip(org.apache.commons.compress.utils.IOUtilsTest)</killingTests><suspValue>0.16666666666666666</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead(org.apache.commons.compress.utils.IOUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test><test><name>org.apache.commons.compress.utils.IOUtilsTest.skipUsingSkip(org.apache.commons.compress.utils.IOUtilsTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>40</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>40</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>IOUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.IOUtils</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(Ljava/io/InputStream;J)J</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>75</index><block>12</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/compress/utils/IOUtils::skip</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local i is replaced by local size to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local size is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>12</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>local i is replaced by local size to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>18</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced boolean return with true for org/apache/commons/compress/utils/ArchiveUtils::isArrayZero</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>21</index><block>27</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>25</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>8</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>8</index><block>24</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isArrayZero</mutatedMethod><methodDescription>([BI)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>26</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local length1 is replaced by local offset1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local length2 is replaced by local offset1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local length1 is replaced by local offset1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local length2 is replaced by local offset1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local i is replaced by local offset1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local minLen is replaced by local offset1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local buffer1 is replaced by local buffer2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local offset1 is replaced by local length1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local i is replaced by local offset1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>27</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local buffer2 is replaced by local buffer1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>28</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local offset2 is replaced by local offset1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local i is replaced by local offset1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>43</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local length1 is replaced by local offset1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>44</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local length2 is replaced by local offset1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local length1 is replaced by local offset2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local length2 is replaced by local length1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local length1 is replaced by local offset2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local length2 is replaced by local length1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local i is replaced by local length1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local minLen is replaced by local length1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>23</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local offset1 is replaced by local offset2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>24</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local i is replaced by local length1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>28</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local offset2 is replaced by local length1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>29</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local i is replaced by local length1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>43</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local length1 is replaced by local offset2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>44</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local length2 is replaced by local length1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local length1 is replaced by local length2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local length2 is replaced by local offset2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local length1 is replaced by local length2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local length2 is replaced by local offset2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local i is replaced by local offset2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local minLen is replaced by local offset2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>23</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local offset1 is replaced by local length2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>24</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local i is replaced by local offset2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>28</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local offset2 is replaced by local length2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>29</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local i is replaced by local offset2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>43</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local length1 is replaced by local length2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>44</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local length2 is replaced by local offset2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local i is replaced by local length2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local minLen is replaced by local length2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>23</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local offset1 is replaced by local minLen to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>24</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local i is replaced by local length2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>28</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local offset2 is replaced by local minLen to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>29</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local i is replaced by local length2 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>43</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local length1 is replaced by local minLen to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>44</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>local length2 is replaced by local minLen to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local i is replaced by local minLen to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local minLen is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>23</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local offset1 is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>24</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local i is replaced by local minLen to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>28</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local offset2 is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>29</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local i is replaced by local minLen to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>49</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>replaced boolean return with false for org/apache/commons/compress/utils/ArchiveUtils::isEqual</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>48</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>45</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>45</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>isEqual</mutatedMethod><methodDescription>([BII[BIIZ)Z</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to getBytes(Ljava/lang/String;)[B with a call to getBytes(Ljava/nio/charset/Charset;)[B</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([B[BZ)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to getBytes(Ljava/lang/String;)[B with a call to getBytes()[B</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([B[B)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to getBytes(Ljava/lang/String;)[B with a call to getBytes()[B</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([B[B)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to getBytes(Ljava/lang/String;)[B with a call to getBytes()[B</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([B[B)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([BII[BII)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([BII[BII)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([BII[BII)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([BII[BII)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to getBytes(Ljava/lang/String;)[B with a call to getBytes(Ljava/nio/charset/Charset;)[B</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([B[BZ)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([BII[BII)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([BII[BII)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to getBytes(Ljava/lang/String;)[B with a call to getBytes(Ljava/nio/charset/Charset;)[B</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([B[BZ)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to getBytes(Ljava/lang/String;)[B with a call to getBytes()[B</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([B[B)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to getBytes(Ljava/lang/String;)[B with a call to getBytes()[B</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([B[B)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to getBytes(Ljava/lang/String;)[B with a call to getBytes(Ljava/nio/charset/Charset;)[B</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([B[BZ)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to getBytes(Ljava/lang/String;)[B with a call to getBytes(Ljava/nio/charset/Charset;)[B</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([B[BZ)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to getBytes(Ljava/lang/String;)[B with a call to getBytes(Ljava/nio/charset/Charset;)[B</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([B[BZ)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to getBytes(Ljava/lang/String;)[B with a call to getBytes()[B</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to isEqual([BII[BIIZ)Z with a call to isEqual([B[B)Z</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>catch type java/io/UnsupportedEncodingException is replaced with java/io/IOException</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local buffer1 is replaced by local buffer to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local buffer1 is replaced by local buffer to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local buffer is replaced by local buffer1 to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local offset is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>local length is replaced by local offset to be used</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to java.lang.String::getBytes(Ljava/lang/String;)[B is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>the call to getBytes(Ljava/lang/String;)[B is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced call to org/apache/commons/compress/utils/ArchiveUtils::isEqual with argument</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced boolean return with false for org/apache/commons/compress/utils/ArchiveUtils::matchAsciiBuffer</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced boolean return with true for org/apache/commons/compress/utils/ArchiveUtils::matchAsciiBuffer</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to java/lang/String::getBytes</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>removed call to org/apache/commons/compress/utils/ArchiveUtils::isEqual</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveUtils.java</sourceFile><mutatedClass>org.apache.commons.compress.utils.ArchiveUtils</mutatedClass><mutatedMethod>matchAsciiBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;[BII)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.15811388300841897</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>getZipEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;</methodDescription><lineNumber>213</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>access to local name is replaced by access to field UTF8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>getZipEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>getZipEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>removed call to org/apache/commons/compress/archivers/zip/ZipEncodingHelper::isUTF8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>getZipEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.07179581586177382</suspValue><description>replaced return value with null for org/apache/commons/compress/archivers/zip/ZipEncodingHelper::getZipEncoding</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>getZipEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>getZipEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>getZipEncoding</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/compress/archivers/zip/ZipEncoding;</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.07179581586177382</suspValue><description>mutated return of Object value for org/apache/commons/compress/archivers/zip/ZipEncodingHelper::getZipEncoding to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>246</lineNumber><mutator>MethodNameMutator_0</mutator><index>8</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>the call to factory method java.lang.System.getProperty(Ljava/lang/String;)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>MethodNameMutator_0</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>the call to factory method java.nio.charset.Charset.name()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>246</lineNumber><mutator>MethodNameMutator_4</mutator><index>8</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>the call to factory method java.lang.System.getProperty(Ljava/lang/String;)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>MethodNameMutator_4</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>the call to factory method java.nio.charset.Charset.name()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>8</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>replaced call to getProperty(Ljava/lang/String;)Ljava/lang/String; with a call to getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>8</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>replaced call to getProperty(Ljava/lang/String;)Ljava/lang/String; with a call to getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>8</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>replaced call to getProperty(Ljava/lang/String;)Ljava/lang/String; with a call to getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>8</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>replaced call to getProperty(Ljava/lang/String;)Ljava/lang/String; with a call to getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>8</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>replaced call to getProperty(Ljava/lang/String;)Ljava/lang/String; with a call to getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>8</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>replaced call to getProperty(Ljava/lang/String;)Ljava/lang/String; with a call to getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>12</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>replaced access to UTF_8 with an access to ISO_8859_1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>12</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>replaced access to UTF_8 with an access to US_ASCII</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>12</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>replaced access to UTF_8 with an access to UTF_16</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>12</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>replaced access to UTF_8 with an access to UTF_16BE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>12</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>replaced access to UTF_8 with an access to UTF_16LE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>access to local charsetName is replaced by access to field UTF8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>access to local charsetName is replaced by access to field UTF8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>8</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>replaced call to getProperty with a call to clearProperty</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>replaced call to name with a call to displayName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>15</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>replaced call to equalsIgnoreCase with a call to startsWith</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>8</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>replaced call to getProperty with a call to getenv</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>replaced call to name with a call to toString</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>15</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>replaced call to equalsIgnoreCase with a call to endsWith</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>8</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>replaced call to getProperty with a call to mapLibraryName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>15</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>replaced call to equalsIgnoreCase with a call to matches</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>the call to java.nio.charset.Charset::name()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>15</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>the call to java.lang.String::equalsIgnoreCase(Ljava/lang/String;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>the call to name()Ljava/lang/String; is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>15</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>the call to equalsIgnoreCase(Ljava/lang/String;)Z is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>8</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>replaced call to java/lang/System::getProperty with argument</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>20</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>replaced boolean return with false for org/apache/commons/compress/archivers/zip/ZipEncodingHelper::isUTF8</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>removed call to java/lang/System::getProperty</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>removed call to java/nio/charset/Charset::name</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>removed call to java/lang/String::equalsIgnoreCase</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0659380473395787</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZipEncodingHelper.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.ZipEncodingHelper</mutatedClass><mutatedMethod>isUTF8</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>10</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/StringBuilder;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>117ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([III)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced call to &#60;init&#62;([BLjava/lang/String;)V with a call to &#60;init&#62;([BI)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the access to charsetName is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the access to charsetName is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the access to charsetName is guarded using field charsetName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the access to charsetName is guarded using field charsetName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the access to charsetName is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the access to charsetName is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the access to charsetName is guarded returning field charsetName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>the access to charsetName is guarded returning field charsetName</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>removed call to java/lang/String::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>replaced return value with &#34;&#34; for org/apache/commons/compress/archivers/zip/FallbackZipEncoding::decode</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FallbackZipEncoding.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.zip.FallbackZipEncoding</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08980265101338746</suspValue><description>mutated return of Object value for org/apache/commons/compress/archivers/zip/FallbackZipEncoding::decode to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08944271909999159</suspValue><description>the access to field org.apache.commons.compress.archivers.ArchiveInputStream.bytesRead is replaced by the call to org.apache.commons.compress.archivers.ArchiveInputStream::count(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08944271909999159</suspValue><description>the access to field org.apache.commons.compress.archivers.ArchiveInputStream.bytesRead is replaced by the call to org.apache.commons.compress.archivers.ArchiveInputStream::pushedBackBytes(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08944271909999159</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08944271909999159</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08944271909999159</suspValue><description>Removed assignment to member variable SINGLE</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.08944271909999159</suspValue><description>Removed assignment to member variable bytesRead</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>replaced call to count(J)V with a call to count(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>replaced call to count(J)V with a call to count(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>replaced call to count(J)V with a call to count(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>replaced call to count(J)V with a call to count(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>replaced call to count(J)V with a call to count(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>replaced call to count(J)V with a call to count(I)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>access to local read is replaced by access to field BYTE_MASK</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>replaced call to count with a call to pushedBackBytes</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the call to count(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the call to count(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the call to count(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the call to count(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the call to count(J)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the call to org.apache.commons.compress.archivers.ArchiveInputStream::count(J)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>removed call to org/apache/commons/compress/archivers/ArchiveInputStream::count</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to bytesRead is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to bytesRead is guarded using local read</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to bytesRead is guarded using field bytesRead</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to field org.apache.commons.compress.archivers.ArchiveInputStream.bytesRead is replaced by the call to org.apache.commons.compress.archivers.ArchiveInputStream::getBytesRead()J</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to field org.apache.commons.compress.archivers.ArchiveInputStream.bytesRead is replaced by the call to org.apache.commons.compress.archivers.ArchiveInputStream::count(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to field org.apache.commons.compress.archivers.ArchiveInputStream.bytesRead is replaced by the call to org.apache.commons.compress.archivers.ArchiveInputStream::pushedBackBytes(J)V</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>access to field bytesRead is replaced by access to local read</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>access to field bytesRead is replaced by access to local read</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>access to local read is replaced by access to field bytesRead</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>access to local read is replaced by access to field bytesRead</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to bytesRead is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to bytesRead is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to bytesRead is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ArchiveInputStream.java</sourceFile><mutatedClass>org.apache.commons.compress.archivers.ArchiveInputStream</mutatedClass><mutatedMethod>count</mutatedMethod><methodDescription>(J)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>Removed assignment to member variable bytesRead</description><testsExecutionTime><test><name>org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest.shouldThrowAnExceptionOnTruncatedEntries(org.apache.commons.compress.archivers.tar.TarArchiveInputStreamTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
</mutations>
