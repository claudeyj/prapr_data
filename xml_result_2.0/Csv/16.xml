<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V with a call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V with a call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>210ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V with a call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>149ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V with a call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V with a call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V with a call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>80ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>291</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>56</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced access to characterOffset with an access to recordNumber</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>33</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>access to field format is replaced by access to local format</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>56</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>access to field characterOffset is replaced by access to local characterOffset</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>359</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>63</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>access to field recordNumber is replaced by access to local characterOffset</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>56</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>access to field characterOffset is replaced by access to local recordNumber</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>359</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>63</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>access to field recordNumber is replaced by access to local recordNumber</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>55</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local characterOffset is replaced by local recordNumber to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>359</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>60</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>local recordNumber is replaced by local characterOffset to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>50</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to initializeHeader with a call to getHeaderMap</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>50</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to org.apache.commons.csv.CSVParser::initializeHeader()Ljava/util/Map; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>50</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to initializeHeader()Ljava/util/Map; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>50</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to initializeHeader()Ljava/util/Map; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>50</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to initializeHeader()Ljava/util/Map; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>50</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to initializeHeader()Ljava/util/Map; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>50</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to initializeHeader()Ljava/util/Map; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to java/util/ArrayList::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to org/apache/commons/csv/Token::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>43</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to org/apache/commons/csv/ExtendedBufferedReader::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>44</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to org/apache/commons/csv/Lexer::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>61</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>50</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to org/apache/commons/csv/CSVParser::initializeHeader</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to org/apache/commons/csv/Assertions::notNull</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to org/apache/commons/csv/Assertions::notNull</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Removed assignment to member variable recordList</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Removed assignment to member variable reusableToken</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>33</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Removed assignment to member variable format</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>45</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Removed assignment to member variable lexer</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>51</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Removed assignment to member variable headerMap</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>56</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Removed assignment to member variable characterOffset</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>63</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11547005383792514</suspValue><description>Removed assignment to member variable recordNumber</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>MethodNameMutator_0</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to factory method java.lang.StringBuilder.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>MethodNameMutator_0</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to factory method java.lang.String.trim()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>368</lineNumber><mutator>MethodNameMutator_0</mutator><index>42</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to factory method org.apache.commons.csv.CSVFormat.getNullString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>MethodNameMutator_4</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to factory method java.lang.StringBuilder.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>MethodNameMutator_4</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to factory method java.lang.String.trim()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>368</lineNumber><mutator>MethodNameMutator_4</mutator><index>42</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to factory method org.apache.commons.csv.CSVFormat.getNullString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to reusableToken is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to content is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to format is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>31</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to format is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>41</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to format is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>47</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordList is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to reusableToken is guarded using field reusableToken</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to format is guarded using field format</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>31</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to format is guarded using field format</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>41</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to format is guarded using field format</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>47</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordList is guarded using field recordList</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>47</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to field org.apache.commons.csv.CSVParser.recordList is replaced by the call to org.apache.commons.csv.CSVParser::getRecords()Ljava/util/List;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>local inputClean is replaced by local input to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>48</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>local inputClean is replaced by local input to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>49</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>local nullString is replaced by local input to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>56</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>local inputClean is replaced by local input to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>48</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>local inputClean is replaced by local nullString to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>49</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>local nullString is replaced by local inputClean to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>56</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>local inputClean is replaced by local nullString to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to the local input is replaced a call input.toLowerCase()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>85ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>19</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to the local input is replaced a call input.toLowerCase()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to the local inputClean is replaced a call inputClean.toLowerCase()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>48</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to the local inputClean is replaced a call inputClean.toLowerCase()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>49</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to the local nullString is replaced a call nullString.toLowerCase()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>56</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to the local inputClean is replaced a call inputClean.toLowerCase()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrim with a call to getAllowMissingColumnNames</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to trim with a call to toLowerCase</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrailingDelimiter with a call to getAllowMissingColumnNames</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>42</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getNullString with a call to getRecordSeparator</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to add with a call to contains</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrim with a call to getAutoFlush</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to trim with a call to toUpperCase</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrailingDelimiter with a call to getAutoFlush</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>42</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getNullString with a call to toString</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to add with a call to remove</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrim with a call to getIgnoreEmptyLines</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to trim with a call to toString</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrailingDelimiter with a call to getIgnoreEmptyLines</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to add with a call to equals</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrim with a call to getIgnoreHeaderCase</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to trim with a call to intern</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrailingDelimiter with a call to getIgnoreHeaderCase</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrim with a call to getIgnoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrailingDelimiter with a call to getIgnoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrim with a call to getSkipHeaderRecord</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrailingDelimiter with a call to getSkipHeaderRecord</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrim with a call to getTrailingDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrailingDelimiter with a call to getTrim</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrim with a call to isCommentMarkerSet</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrailingDelimiter with a call to isCommentMarkerSet</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrim with a call to isEscapeCharacterSet</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrailingDelimiter with a call to isEscapeCharacterSet</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrim with a call to isNullStringSet</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to getTrailingDelimiter with a call to isNullStringSet</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to java.lang.StringBuilder::toString()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to org.apache.commons.csv.CSVFormat::getTrim()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to java.lang.String::trim()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>28</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to java.lang.String::isEmpty()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to org.apache.commons.csv.CSVFormat::getTrailingDelimiter()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>42</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to org.apache.commons.csv.CSVFormat::getNullString()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>50</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to java.lang.String::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to java.util.List::add(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to reusableToken is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to content is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to format is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>31</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to format is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>41</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to format is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>47</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordList is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to reusableToken is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to content is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to format is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>31</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to format is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>41</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to format is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>47</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordList is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to reusableToken is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to content is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to format is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>31</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to format is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>41</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to format is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>47</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordList is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to getTrim()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to trim()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>28</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to isEmpty()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to getTrailingDelimiter()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>42</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to getNullString()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>50</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to getTrim()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to trim()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>28</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to isEmpty()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to getTrailingDelimiter()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>42</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to getNullString()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>50</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to getTrim()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to trim()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>28</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to isEmpty()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to getTrailingDelimiter()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>42</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to getNullString()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>50</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to getTrim()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to trim()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>28</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to isEmpty()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>116ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to getTrailingDelimiter()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>42</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to getNullString()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>50</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to getTrim()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to trim()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>28</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to isEmpty()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to getTrailingDelimiter()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>368</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>42</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to getNullString()Ljava/lang/String; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>50</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed call to java/lang/StringBuilder::toString</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed call to org/apache/commons/csv/CSVFormat::getTrim</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed call to java/lang/String::trim</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed call to java/lang/String::isEmpty</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed call to org/apache/commons/csv/CSVFormat::getTrailingDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed call to org/apache/commons/csv/CSVFormat::getNullString</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>50</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed call to java/lang/String::equals</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed call to java/util/List::add</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>29</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>33</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>51</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>29</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>33</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>51</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>addRecordValue</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to java/lang/String::trim with receiver</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>the access to format is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>the access to format is guarded using field format</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>169</index><block>28</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11867816581938533</suspValue><description>access to local hdrMap is replaced by access to field headerMap</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>replaced call to getHeader with a call to getHeaderComments</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>141ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to org.apache.commons.csv.CSVFormat::getHeader()[Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>the access to format is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>8</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>the access to format is guarded returning local hdrMap</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>8</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>the access to format is guarded returning field headerMap</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to getHeader()[Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to getHeader()[Ljava/lang/String; is guarded returning local hdrMap</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>the call to getHeader()[Ljava/lang/String; is guarded returning field headerMap</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>removed call to org/apache/commons/csv/CSVFormat::getHeader</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>170</index><block>28</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11867816581938533</suspValue><description>replaced return value with null for org/apache/commons/csv/CSVParser::initializeHeader</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11704114719613057</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>initializeHeader</mutatedMethod><methodDescription>()Ljava/util/Map;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>170</index><block>28</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11867816581938533</suspValue><description>mutated return of Object value for org/apache/commons/csv/CSVParser::initializeHeader to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>29</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to lexer is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>29</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to lexer is guarded using field lexer</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>29</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to org.apache.commons.csv.Lexer::isClosed()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>29</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to lexer is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>506</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>29</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to isClosed()Z is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>6</index><block>29</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced boolean return with false for org/apache/commons/csv/CSVParser::isClosed</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>6</index><block>29</block><killingTests>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced boolean return with true for org/apache/commons/csv/CSVParser::isClosed</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>29</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to org/apache/commons/csv/Lexer::isClosed</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>29</block><killingTests>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>2ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>removed call to org/apache/commons/csv/CSVParser$1::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>7</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced return value with null for org/apache/commons/csv/CSVParser::iterator</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>mutated return of Object value for org/apache/commons/csv/CSVParser::iterator to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>618</lineNumber><mutator>MethodNameMutator_0</mutator><index>180</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to factory method java.lang.StringBuilder.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>618</lineNumber><mutator>MethodNameMutator_4</mutator><index>180</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to factory method java.lang.StringBuilder.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutatorSecondPhase_0</mutator><index>202</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to &#60;init&#62;([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V with a call to &#60;init&#62;([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>194</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to toArray([Ljava/lang/Object;)[Ljava/lang/Object; with a call to toArray()[Ljava/lang/Object;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>194</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to toArray([Ljava/lang/Object;)[Ljava/lang/Object; with a call to toArray()[Ljava/lang/Object;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>194</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to toArray([Ljava/lang/Object;)[Ljava/lang/Object; with a call to toArray()[Ljava/lang/Object;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>194</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to toArray([Ljava/lang/Object;)[Ljava/lang/Object; with a call to toArray()[Ljava/lang/Object;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>160ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>194</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to toArray([Ljava/lang/Object;)[Ljava/lang/Object; with a call to toArray()[Ljava/lang/Object;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>220ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>194</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to toArray([Ljava/lang/Object;)[Ljava/lang/Object; with a call to toArray()[Ljava/lang/Object;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to recordList is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>584</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>17</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to lexer is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>584</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>20</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to characterOffset is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>586</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>27</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reusableToken is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>587</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>32</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to lexer is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>587</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>34</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reusableToken is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>41</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reusableToken is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>42</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to type is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>68</index><block>33</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>the access to reusableToken is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>the access to isReady is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>153</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reusableToken is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>154</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to type is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>160</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to recordList is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>167</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordNumber is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>189</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordList is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>191</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordList is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>197</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to headerMap is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>200</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordNumber is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>167</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordNumber is guarded using local startCharPosition</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>200</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordNumber is guarded using local startCharPosition</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to recordList is guarded using field recordList</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>584</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>17</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to lexer is guarded using field lexer</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>584</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>20</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to characterOffset is guarded using field recordNumber</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>586</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>27</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reusableToken is guarded using field reusableToken</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>587</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>32</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to lexer is guarded using field lexer</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>587</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>34</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reusableToken is guarded using field reusableToken</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>41</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reusableToken is guarded using field reusableToken</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>68</index><block>33</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>the access to reusableToken is guarded using field reusableToken</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>153</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reusableToken is guarded using field reusableToken</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>160</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to recordList is guarded using field recordList</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>167</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordNumber is guarded using field recordNumber</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>189</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordList is guarded using field recordList</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>191</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordList is guarded using field recordList</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>197</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to headerMap is guarded using field headerMap</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>200</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordNumber is guarded using field recordNumber</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>8</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to field org.apache.commons.csv.CSVParser.recordList is replaced by the call to org.apache.commons.csv.CSVParser::getRecords()Ljava/util/List;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>584</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>20</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to field org.apache.commons.csv.CSVParser.characterOffset is replaced by the call to org.apache.commons.csv.CSVParser::getCurrentLineNumber()J</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>160</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to field org.apache.commons.csv.CSVParser.recordList is replaced by the call to org.apache.commons.csv.CSVParser::getRecords()Ljava/util/List;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>167</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to field org.apache.commons.csv.CSVParser.recordNumber is replaced by the call to org.apache.commons.csv.CSVParser::getCurrentLineNumber()J</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>189</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to field org.apache.commons.csv.CSVParser.recordList is replaced by the call to org.apache.commons.csv.CSVParser::getRecords()Ljava/util/List;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>191</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to field org.apache.commons.csv.CSVParser.recordList is replaced by the call to org.apache.commons.csv.CSVParser::getRecords()Ljava/util/List;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>197</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to field org.apache.commons.csv.CSVParser.headerMap is replaced by the call to org.apache.commons.csv.CSVParser::getHeaderMap()Ljava/util/Map;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>200</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to field org.apache.commons.csv.CSVParser.recordNumber is replaced by the call to org.apache.commons.csv.CSVParser::getCurrentLineNumber()J</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>584</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>20</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to field org.apache.commons.csv.CSVParser.characterOffset is replaced by the call to org.apache.commons.csv.CSVParser::getRecordNumber()J</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>167</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to field org.apache.commons.csv.CSVParser.recordNumber is replaced by the call to org.apache.commons.csv.CSVParser::getRecordNumber()J</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>197</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to field org.apache.commons.csv.CSVParser.headerMap is replaced by the call to org.apache.commons.csv.CSVParser::initializeHeader()Ljava/util/Map;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>200</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to field org.apache.commons.csv.CSVParser.recordNumber is replaced by the call to org.apache.commons.csv.CSVParser::getRecordNumber()J</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>584</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>20</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>replaced access to characterOffset with an access to recordNumber</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>155</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>replaced access to TOKEN with an access to INVALID</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>118ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>167</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced access to recordNumber with an access to characterOffset</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>200</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced access to recordNumber with an access to characterOffset</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>155</index><block>40</block><killingTests/><suspValue>0.11785113019775793</suspValue><description>replaced access to TOKEN with an access to EOF</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>155</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>replaced access to TOKEN with an access to EORECORD</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testCSV57(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testEmptyFile(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>126ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>155</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>replaced access to TOKEN with an access to COMMENT</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>167</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>access to field recordNumber is replaced by access to local startCharPosition</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>170</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>access to field recordNumber is replaced by access to local startCharPosition</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>200</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>access to field recordNumber is replaced by access to local startCharPosition</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>201</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>access to local startCharPosition is replaced by access to field recordNumber</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>201</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>access to local startCharPosition is replaced by access to field characterOffset</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>618</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>173</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to the local sb is replaced a call sb.reverse()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>618</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>179</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to the local sb is replaced a call sb.reverse()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>198</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to the local comment is replaced a call comment.toLowerCase()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>192</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to size with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>584</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>18</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to org.apache.commons.csv.Lexer::getCharacterPosition()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>587</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>35</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to org.apache.commons.csv.Lexer::nextToken(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>43</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to org.apache.commons.csv.Token$Type::ordinal()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>161</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to java.util.List::isEmpty()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>618</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>180</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to java.lang.StringBuilder::toString()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>192</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to java.util.List::size()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>194</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to java.util.List::toArray([Ljava/lang/Object;)[Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to recordList is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>584</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>17</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to lexer is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>584</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>20</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to characterOffset is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>586</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>27</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reusableToken is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>587</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>32</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to lexer is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>587</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>34</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reusableToken is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>41</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reusableToken is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>42</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to type is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>68</index><block>33</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>the access to reusableToken is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>the access to isReady is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>153</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reusableToken is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>154</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to type is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>160</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to recordList is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>167</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordNumber is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>189</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordList is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>191</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordList is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>197</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to headerMap is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>200</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordNumber is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>8</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to recordList is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>584</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>17</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to lexer is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>584</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>20</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to characterOffset is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>586</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>27</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reusableToken is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>587</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>32</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to lexer is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>587</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>34</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reusableToken is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>41</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reusableToken is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>42</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to type is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>68</index><block>33</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>the access to reusableToken is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>596</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>69</index><block>33</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>the access to isReady is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>153</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reusableToken is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>614</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>154</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to type is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>160</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to recordList is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>167</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordNumber is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>189</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordList is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>191</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordList is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>197</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to headerMap is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>200</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the access to recordNumber is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to clear()V is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>584</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>18</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to getCharacterPosition()J is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>586</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>28</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to reset()V is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>587</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>35</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to nextToken(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>43</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to ordinal()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>60</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the call to addRecordValue(Z)V is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>161</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to isEmpty()Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>618</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>180</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>192</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to size()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>194</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to toArray([Ljava/lang/Object;)[Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to clear()V is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>584</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>18</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to getCharacterPosition()J is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>586</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>28</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to reset()V is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>587</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>35</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to nextToken(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token; is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>43</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to ordinal()I is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>60</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the call to addRecordValue(Z)V is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>161</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to isEmpty()Z is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>618</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>180</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>192</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to size()I is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>194</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>the call to toArray([Ljava/lang/Object;)[Ljava/lang/Object; is guarded returning local result</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>9</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to java.util.List::clear()V is guarded</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>586</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>28</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to org.apache.commons.csv.Token::reset()V is guarded</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>593</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>60</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>the call to org.apache.commons.csv.CSVParser::addRecordValue(Z)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>587</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>35</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>replaced call to org/apache/commons/csv/Lexer::nextToken with argument</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>194</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>replaced call to java/util/List::toArray with argument</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>202</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed call to org/apache/commons/csv/CSVRecord::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</name><time>2ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>59</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>168</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>33</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>140ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>156</index><block>40</block><killingTests/><suspValue>0.11785113019775793</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>162</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testEmptyFile(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testEmptyFile(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>174</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>removed call to org/apache/commons/csv/Lexer::getCharacterPosition</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>587</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>removed call to org/apache/commons/csv/Lexer::nextToken</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>removed call to org/apache/commons/csv/Token$Type::ordinal</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>161</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>removed call to java/util/List::isEmpty</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>180</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed call to java/lang/StringBuilder::toString</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>192</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed call to java/util/List::size</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>194</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed call to java/util/List::toArray</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>208</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>replaced return value with null for org/apache/commons/csv/CSVParser::nextRecord</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testCSV57(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testEmptyFile(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>70</index><block>33</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>156</index><block>40</block><killingTests/><suspValue>0.11785113019775793</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>162</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testCSV57(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testEmptyFile(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>70ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>174</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>70</index><block>33</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>614</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>156</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>162</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>174</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>208</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testEmptyFile(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>mutated return of Object value for org/apache/commons/csv/CSVParser::nextRecord to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testEmptyFile(org.apache.commons.csv.CSVParserTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>removed call to java/util/List::clear</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>removed call to org/apache/commons/csv/Token::reset</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>593</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>60</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.12309149097933272</suspValue><description>removed call to org/apache/commons/csv/CSVParser::addRecordValue</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>170</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11952286093343936</suspValue><description>Removed assignment to member variable recordNumber</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_0</mutator><index>45</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>RemoveSwitch 0 mutation</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>73ms</time></test></testsExecutionTime><patchExecutionTime>83ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_1</mutator><index>45</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>RemoveSwitch 1 mutation</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_2</mutator><index>45</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>RemoveSwitch 2 mutation</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_3</mutator><index>45</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>RemoveSwitch 3 mutation</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_4</mutator><index>45</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>RemoveSwitch 4 mutation</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser</mutatedClass><mutatedMethod>nextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.SwitchMutator</mutator><index>45</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>Switch mutation</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>access to field reader is replaced by access to local reader</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getEscapeCharacter with a call to getCommentMarker</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getQuoteCharacter with a call to getCommentMarker</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getCommentMarker with a call to getEscapeCharacter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreSurroundingSpaces with a call to getAllowMissingColumnNames</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreEmptyLines with a call to getAllowMissingColumnNames</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getEscapeCharacter with a call to getQuoteCharacter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getQuoteCharacter with a call to getEscapeCharacter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>160ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getCommentMarker with a call to getQuoteCharacter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreSurroundingSpaces with a call to getAutoFlush</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreEmptyLines with a call to getAutoFlush</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreSurroundingSpaces with a call to getIgnoreEmptyLines</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreEmptyLines with a call to getIgnoreHeaderCase</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreSurroundingSpaces with a call to getIgnoreHeaderCase</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreEmptyLines with a call to getIgnoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreSurroundingSpaces with a call to getSkipHeaderRecord</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreEmptyLines with a call to getSkipHeaderRecord</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreSurroundingSpaces with a call to getTrailingDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreEmptyLines with a call to getTrailingDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreSurroundingSpaces with a call to getTrim</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreEmptyLines with a call to getTrim</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreSurroundingSpaces with a call to isCommentMarkerSet</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreEmptyLines with a call to isCommentMarkerSet</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreSurroundingSpaces with a call to isEscapeCharacterSet</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreEmptyLines with a call to isEscapeCharacterSet</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreSurroundingSpaces with a call to isNullStringSet</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced call to getIgnoreEmptyLines with a call to isNullStringSet</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to org.apache.commons.csv.CSVFormat::getDelimiter()C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to org.apache.commons.csv.CSVFormat::getEscapeCharacter()Ljava/lang/Character; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to org.apache.commons.csv.Lexer::mapNullToDisabled(Ljava/lang/Character;)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to org.apache.commons.csv.CSVFormat::getQuoteCharacter()Ljava/lang/Character; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to org.apache.commons.csv.Lexer::mapNullToDisabled(Ljava/lang/Character;)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to org.apache.commons.csv.CSVFormat::getCommentMarker()Ljava/lang/Character; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to org.apache.commons.csv.Lexer::mapNullToDisabled(Ljava/lang/Character;)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to org.apache.commons.csv.CSVFormat::getIgnoreSurroundingSpaces()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to org.apache.commons.csv.CSVFormat::getIgnoreEmptyLines()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getDelimiter()C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getEscapeCharacter()Ljava/lang/Character; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to mapNullToDisabled(Ljava/lang/Character;)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getQuoteCharacter()Ljava/lang/Character; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to mapNullToDisabled(Ljava/lang/Character;)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getCommentMarker()Ljava/lang/Character; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to mapNullToDisabled(Ljava/lang/Character;)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getIgnoreSurroundingSpaces()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getIgnoreEmptyLines()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getDelimiter()C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getEscapeCharacter()Ljava/lang/Character; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to mapNullToDisabled(Ljava/lang/Character;)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getQuoteCharacter()Ljava/lang/Character; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to mapNullToDisabled(Ljava/lang/Character;)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getCommentMarker()Ljava/lang/Character; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to mapNullToDisabled(Ljava/lang/Character;)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getIgnoreSurroundingSpaces()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>119ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getIgnoreEmptyLines()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getDelimiter()C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getEscapeCharacter()Ljava/lang/Character; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to mapNullToDisabled(Ljava/lang/Character;)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>112ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getQuoteCharacter()Ljava/lang/Character; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to mapNullToDisabled(Ljava/lang/Character;)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getCommentMarker()Ljava/lang/Character; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to mapNullToDisabled(Ljava/lang/Character;)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getIgnoreSurroundingSpaces()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getIgnoreEmptyLines()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getDelimiter()C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getEscapeCharacter()Ljava/lang/Character; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to mapNullToDisabled(Ljava/lang/Character;)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getQuoteCharacter()Ljava/lang/Character; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to mapNullToDisabled(Ljava/lang/Character;)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getCommentMarker()Ljava/lang/Character; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to mapNullToDisabled(Ljava/lang/Character;)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getIgnoreSurroundingSpaces()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getIgnoreEmptyLines()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getDelimiter()C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getEscapeCharacter()Ljava/lang/Character; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to mapNullToDisabled(Ljava/lang/Character;)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getQuoteCharacter()Ljava/lang/Character; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to mapNullToDisabled(Ljava/lang/Character;)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getCommentMarker()Ljava/lang/Character; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to mapNullToDisabled(Ljava/lang/Character;)C is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getIgnoreSurroundingSpaces()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to getIgnoreEmptyLines()Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>removed call to org/apache/commons/csv/CSVFormat::getDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>removed call to org/apache/commons/csv/CSVFormat::getEscapeCharacter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>removed call to org/apache/commons/csv/Lexer::mapNullToDisabled</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>removed call to org/apache/commons/csv/CSVFormat::getQuoteCharacter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>removed call to org/apache/commons/csv/Lexer::mapNullToDisabled</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>removed call to org/apache/commons/csv/CSVFormat::getCommentMarker</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>removed call to org/apache/commons/csv/Lexer::mapNullToDisabled</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>removed call to org/apache/commons/csv/CSVFormat::getIgnoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>removed call to org/apache/commons/csv/CSVFormat::getIgnoreEmptyLines</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>Removed assignment to member variable reader</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>Removed assignment to member variable delimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>Removed assignment to member variable escape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>31</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>Removed assignment to member variable quoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>39</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>Removed assignment to member variable commentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>Removed assignment to member variable ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVFormat;Lorg/apache/commons/csv/ExtendedBufferedReader;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>51</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>Removed assignment to member variable ignoreEmptyLines</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>getCharacterPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>316</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>46</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reader is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>getCharacterPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>316</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>46</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reader is guarded using field reader</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>getCharacterPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>316</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>46</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to org.apache.commons.csv.ExtendedBufferedReader::getPosition()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>getCharacterPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>316</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>46</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to reader is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>getCharacterPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>316</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>46</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to getPosition()J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>getCharacterPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>46</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>removed call to org/apache/commons/csv/ExtendedBufferedReader::getPosition</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>getCharacterPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>6</index><block>46</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>replaced long return with 0 for org/apache/commons/csv/Lexer::getCharacterPosition</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>getCharacterPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>46</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/csv/Lexer::getCharacterPosition</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>58</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to reader is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>58</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to reader is guarded using field reader</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>58</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to org.apache.commons.csv.ExtendedBufferedReader::isClosed()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>58</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to reader is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>58</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to reader is guarded returning field ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>58</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to isClosed()Z is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>58</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to isClosed()Z is guarded returning field ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>58</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to isClosed()Z is guarded returning field ignoreEmptyLines</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>6</index><block>58</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced boolean return with false for org/apache/commons/csv/Lexer::isClosed</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>6</index><block>58</block><killingTests>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced boolean return with true for org/apache/commons/csv/Lexer::isClosed</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>58</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to org/apache/commons/csv/ExtendedBufferedReader::isClosed</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>58</block><killingTests>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isCommentStart</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>76</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to commentStart is guarded using value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isCommentStart</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>76</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to commentStart is guarded using field DISABLED</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isCommentStart</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>76</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced access to commentStart with an access to delimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isCommentStart</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>76</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced access to commentStart with an access to escape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isCommentStart</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>5</index><block>76</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced access to commentStart with an access to quoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isCommentStart</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>76</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to commentStart is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isCommentStart</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>441</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>76</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to commentStart is guarded returning field ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isCommentStart</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>14</index><block>78</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced boolean return with false for org/apache/commons/csv/Lexer::isCommentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isCommentStart</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>14</index><block>78</block><killingTests>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced boolean return with true for org/apache/commons/csv/Lexer::isCommentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isCommentStart</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>77</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isCommentStart</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>78</block><killingTests>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isCommentStart</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>76</block><killingTests>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>40ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>127ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isCommentStart</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>76</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isCommentStart</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>76</block><killingTests>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isCommentStart</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>78</block><killingTests>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isDelimiter</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>67</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to delimiter is guarded using value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isDelimiter</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>67</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to delimiter is guarded using field DISABLED</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isDelimiter</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>67</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced access to delimiter with an access to escape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isDelimiter</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>67</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced access to delimiter with an access to quoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isDelimiter</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>5</index><block>67</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced access to delimiter with an access to commentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isDelimiter</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>67</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to delimiter is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isDelimiter</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>67</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to delimiter is guarded returning field ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isDelimiter</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>14</index><block>69</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced boolean return with false for org/apache/commons/csv/Lexer::isDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isDelimiter</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>14</index><block>69</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced boolean return with true for org/apache/commons/csv/Lexer::isDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isDelimiter</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>68</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isDelimiter</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>69</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isDelimiter</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>67</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isDelimiter</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>67</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isDelimiter</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>67</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isDelimiter</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>69</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEndOfFile</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>13</index><block>66</block><killingTests/><suspValue>0.10101525445522107</suspValue><description>replaced boolean return with false for org/apache/commons/csv/Lexer::isEndOfFile</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEndOfFile</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>13</index><block>66</block><killingTests>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced boolean return with true for org/apache/commons/csv/Lexer::isEndOfFile</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEndOfFile</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>64</block><killingTests/><suspValue>0.10101525445522107</suspValue><description>Substituted -1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEndOfFile</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>65</block><killingTests/><suspValue>0.10101525445522107</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEndOfFile</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>66</block><killingTests>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEndOfFile</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>64</block><killingTests>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEndOfFile</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>64</block><killingTests/><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEndOfFile</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>64</block><killingTests>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEndOfFile</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>66</block><killingTests>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEscape</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>70</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to escape is guarded using value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEscape</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>70</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to escape is guarded using field DISABLED</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEscape</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>70</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced access to escape with an access to delimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEscape</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>70</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced access to escape with an access to quoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEscape</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>5</index><block>70</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced access to escape with an access to commentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEscape</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>70</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to escape is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEscape</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>70</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to escape is guarded returning field ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEscape</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>14</index><block>72</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced boolean return with false for org/apache/commons/csv/Lexer::isEscape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEscape</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>14</index><block>72</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced boolean return with true for org/apache/commons/csv/Lexer::isEscape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEscape</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>71</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEscape</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>72</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEscape</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>70</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEscape</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>70</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEscape</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>70</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isEscape</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>72</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isQuoteChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>73</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to quoteChar is guarded using value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isQuoteChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>73</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to quoteChar is guarded using field DISABLED</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isQuoteChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>73</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced access to quoteChar with an access to delimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isQuoteChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>5</index><block>73</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced access to quoteChar with an access to escape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isQuoteChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>5</index><block>73</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced access to quoteChar with an access to commentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isQuoteChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>73</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to quoteChar is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isQuoteChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>73</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to quoteChar is guarded returning field ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isQuoteChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>14</index><block>75</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced boolean return with false for org/apache/commons/csv/Lexer::isQuoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isQuoteChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>14</index><block>75</block><killingTests/><suspValue>0.10206207261596577</suspValue><description>replaced boolean return with true for org/apache/commons/csv/Lexer::isQuoteChar</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isQuoteChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>74</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isQuoteChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>75</block><killingTests/><suspValue>0.10206207261596577</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isQuoteChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>73</block><killingTests/><suspValue>0.10206207261596577</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isQuoteChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>73</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isQuoteChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>73</block><killingTests/><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isQuoteChar</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>75</block><killingTests/><suspValue>0.10206207261596577</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>21</index><block>63</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced boolean return with false for org/apache/commons/csv/Lexer::isStartOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>21</index><block>63</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced boolean return with true for org/apache/commons/csv/Lexer::isStartOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>59</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>60</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>Substituted 13 with 14</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>61</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>Substituted -2 with -1</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>62</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>63</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>59</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>60</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>61</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>59</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>60</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>11</index><block>61</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>59</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>60</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>11</index><block>61</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>isStartOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>63</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>mapNullToDisabled</mutatedMethod><methodDescription>(Ljava/lang/Character;)C</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>10</index><block>45</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to java.lang.Character::charValue()C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>mapNullToDisabled</mutatedMethod><methodDescription>(Ljava/lang/Character;)C</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>45</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to charValue()C is guarded returning default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>mapNullToDisabled</mutatedMethod><methodDescription>(Ljava/lang/Character;)C</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>10</index><block>45</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to charValue()C is guarded returning field DISABLED</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>mapNullToDisabled</mutatedMethod><methodDescription>(Ljava/lang/Character;)C</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>10</index><block>45</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>the call to charValue()C is guarded returning field delimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>mapNullToDisabled</mutatedMethod><methodDescription>(Ljava/lang/Character;)C</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>44</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>Substituted 65534 with 65535</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>mapNullToDisabled</mutatedMethod><methodDescription>(Ljava/lang/Character;)C</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>43</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>mapNullToDisabled</mutatedMethod><methodDescription>(Ljava/lang/Character;)C</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>45</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>removed call to java/lang/Character::charValue</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>mapNullToDisabled</mutatedMethod><methodDescription>(Ljava/lang/Character;)C</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>13</index><block>45</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced char return with 0 for org/apache/commons/csv/Lexer::mapNullToDisabled</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>mapNullToDisabled</mutatedMethod><methodDescription>(Ljava/lang/Character;)C</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>43</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>mapNullToDisabled</mutatedMethod><methodDescription>(Ljava/lang/Character;)C</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>43</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>mapNullToDisabled</mutatedMethod><methodDescription>(Ljava/lang/Character;)C</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>45</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10050378152592121</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>83ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to reader is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to reader is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to ignoreEmptyLines is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>145</index><block>15</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to type is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>151</index><block>16</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to ignoreSurroundingSpaces is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to ignoreEmptyLines is guarded using local eol</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>151</index><block>16</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to ignoreSurroundingSpaces is guarded using local eol</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to reader is guarded using field reader</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to reader is guarded using field reader</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to ignoreEmptyLines is guarded using field ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>151</index><block>16</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to ignoreSurroundingSpaces is guarded using field ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to field org.apache.commons.csv.Lexer.ignoreEmptyLines is replaced by the call to org.apache.commons.csv.Lexer::isClosed()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>151</index><block>16</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to field org.apache.commons.csv.Lexer.ignoreSurroundingSpaces is replaced by the call to org.apache.commons.csv.Lexer::isClosed()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced access to ignoreEmptyLines with an access to ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>83</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>replaced access to EOF with an access to INVALID</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>146</index><block>15</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced access to INVALID with an access to TOKEN</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>151</index><block>16</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced access to ignoreSurroundingSpaces with an access to ignoreEmptyLines</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>83</index><block>9</block><killingTests/><suspValue>0.13483997249264842</suspValue><description>replaced access to EOF with an access to TOKEN</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>146</index><block>15</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced access to INVALID with an access to EOF</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>83</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>replaced access to EOF with an access to EORECORD</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>146</index><block>15</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced access to INVALID with an access to EORECORD</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>83</index><block>9</block><killingTests/><suspValue>0.13483997249264842</suspValue><description>replaced access to EOF with an access to COMMENT</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>146</index><block>15</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced access to INVALID with an access to COMMENT</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>access to field ignoreEmptyLines is replaced by access to local eol</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>151</index><block>16</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>access to field ignoreSurroundingSpaces is replaced by access to local eol</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>local c is replaced by local lastChar to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>local lastChar is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>68</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>local lastChar is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>72</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>local lastChar is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>76</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>local c is replaced by local lastChar to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>93</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>local lastChar is replaced by local c to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>97</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>local c is replaced by local lastChar to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>179</index><block>20</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>local c is replaced by local lastChar to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>203</index><block>24</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>local c is replaced by local lastChar to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>217</index><block>26</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>local c is replaced by local lastChar to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>236</index><block>28</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>local c is replaced by local lastChar to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>access to local eol is replaced by access to field ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>191</index><block>22</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>access to local eol is replaced by access to field ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>access to local eol is replaced by access to field ignoreEmptyLines</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>191</index><block>22</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>access to local eol is replaced by access to field ignoreEmptyLines</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to getLastChar with a call to read</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to readEndOfLine with a call to isWhitespace</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>replaced call to isStartOfLine with a call to readEndOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>69</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isEndOfFile with a call to readEndOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>73</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isDelimiter with a call to readEndOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>77</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isEndOfFile with a call to readEndOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>94</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isStartOfLine with a call to readEndOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isCommentStart with a call to readEndOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>94ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>180</index><block>20</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isDelimiter with a call to readEndOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>204</index><block>24</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isQuoteChar with a call to readEndOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>218</index><block>26</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEndOfFile with a call to readEndOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to readEndOfLine with a call to isStartOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>replaced call to isStartOfLine with a call to isWhitespace</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>69</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isEndOfFile with a call to isWhitespace</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>73</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isDelimiter with a call to isWhitespace</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>77</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isEndOfFile with a call to isWhitespace</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>92ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>94</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isStartOfLine with a call to isWhitespace</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isCommentStart with a call to isWhitespace</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>180</index><block>20</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isDelimiter with a call to isWhitespace</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>204</index><block>24</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isQuoteChar with a call to isWhitespace</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>218</index><block>26</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEndOfFile with a call to isWhitespace</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to readEndOfLine with a call to isEndOfFile</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>replaced call to isStartOfLine with a call to isEndOfFile</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>69</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isEndOfFile with a call to isStartOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>73</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isDelimiter with a call to isStartOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>77</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isEndOfFile with a call to isStartOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>94</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isStartOfLine with a call to isEndOfFile</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isCommentStart with a call to isStartOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>180</index><block>20</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isDelimiter with a call to isStartOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>204</index><block>24</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isQuoteChar with a call to isStartOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>218</index><block>26</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEndOfFile with a call to isStartOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to readEndOfLine with a call to isDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>replaced call to isStartOfLine with a call to isDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>69</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isEndOfFile with a call to isDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>73</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isDelimiter with a call to isEndOfFile</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>77</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isEndOfFile with a call to isDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>87ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>94</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isStartOfLine with a call to isDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isCommentStart with a call to isEndOfFile</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>180</index><block>20</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isDelimiter with a call to isEndOfFile</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>204</index><block>24</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isQuoteChar with a call to isEndOfFile</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>218</index><block>26</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEndOfFile with a call to isDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to readEndOfLine with a call to isEscape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>replaced call to isStartOfLine with a call to isEscape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>69</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isEndOfFile with a call to isEscape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>73</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isDelimiter with a call to isEscape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>77</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isEndOfFile with a call to isEscape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>94</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isStartOfLine with a call to isEscape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isCommentStart with a call to isDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>180</index><block>20</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isDelimiter with a call to isEscape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>204</index><block>24</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isQuoteChar with a call to isDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>218</index><block>26</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEndOfFile with a call to isEscape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to readEndOfLine with a call to isQuoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>replaced call to isStartOfLine with a call to isQuoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>69</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isEndOfFile with a call to isQuoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>73</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isDelimiter with a call to isQuoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>77</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isEndOfFile with a call to isQuoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>94</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isStartOfLine with a call to isQuoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isCommentStart with a call to isEscape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>180</index><block>20</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isDelimiter with a call to isQuoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>204</index><block>24</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isQuoteChar with a call to isEscape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>218</index><block>26</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEndOfFile with a call to isQuoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to readEndOfLine with a call to isCommentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>replaced call to isStartOfLine with a call to isCommentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>69</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isEndOfFile with a call to isCommentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>73</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isDelimiter with a call to isCommentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>77</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isEndOfFile with a call to isCommentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>94</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isStartOfLine with a call to isCommentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isCommentStart with a call to isQuoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>180</index><block>20</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isDelimiter with a call to isCommentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>204</index><block>24</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isQuoteChar with a call to isCommentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>218</index><block>26</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEndOfFile with a call to isCommentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to readEndOfLine with a call to isMetaChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>replaced call to isStartOfLine with a call to isMetaChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>69</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isEndOfFile with a call to isMetaChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>73</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isDelimiter with a call to isMetaChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>77</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to isEndOfFile with a call to isMetaChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>94</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isStartOfLine with a call to isMetaChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isCommentStart with a call to isMetaChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>180</index><block>20</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isDelimiter with a call to isMetaChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>204</index><block>24</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isQuoteChar with a call to isMetaChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>218</index><block>26</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEndOfFile with a call to isMetaChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>83ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to org.apache.commons.csv.ExtendedBufferedReader::getLastChar()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to org.apache.commons.csv.ExtendedBufferedReader::read()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to org.apache.commons.csv.Lexer::readEndOfLine(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>the call to org.apache.commons.csv.Lexer::isStartOfLine(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>69</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to org.apache.commons.csv.Lexer::isEndOfFile(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>73</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to org.apache.commons.csv.Lexer::isDelimiter(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>77</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to org.apache.commons.csv.Lexer::isEndOfFile(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>94</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the call to org.apache.commons.csv.Lexer::isStartOfLine(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the call to org.apache.commons.csv.Lexer::isCommentStart(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>180</index><block>20</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the call to org.apache.commons.csv.Lexer::isDelimiter(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>204</index><block>24</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the call to org.apache.commons.csv.Lexer::isQuoteChar(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>218</index><block>26</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to org.apache.commons.csv.Lexer::isEndOfFile(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>237</index><block>28</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to org.apache.commons.csv.Lexer::parseSimpleToken(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to reader is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to reader is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to ignoreEmptyLines is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>145</index><block>15</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to type is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>151</index><block>16</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to ignoreSurroundingSpaces is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to reader is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to reader is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to ignoreEmptyLines is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>145</index><block>15</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to type is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>151</index><block>16</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the access to ignoreSurroundingSpaces is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to getLastChar()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to read()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to readEndOfLine(I)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>the call to isStartOfLine(I)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>69</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to isEndOfFile(I)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>73</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to isDelimiter(I)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>77</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to isEndOfFile(I)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>94</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the call to isStartOfLine(I)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the call to isCommentStart(I)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>180</index><block>20</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the call to isDelimiter(I)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>204</index><block>24</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the call to isQuoteChar(I)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>218</index><block>26</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to isEndOfFile(I)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>237</index><block>28</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to parseSimpleToken(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to getLastChar()I is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to read()I is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to readEndOfLine(I)Z is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>the call to isStartOfLine(I)Z is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>69</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to isEndOfFile(I)Z is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>73</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to isDelimiter(I)Z is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>77</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to isEndOfFile(I)Z is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>94</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the call to isStartOfLine(I)Z is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the call to isCommentStart(I)Z is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>180</index><block>20</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the call to isDelimiter(I)Z is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>204</index><block>24</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>the call to isQuoteChar(I)Z is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>218</index><block>26</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to isEndOfFile(I)Z is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>122ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>237</index><block>28</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to parseSimpleToken(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token; is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>237</index><block>28</block><killingTests/><suspValue>0.10259783520851541</suspValue><description>replaced call to org/apache/commons/csv/Lexer::parseSimpleToken with argument</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>6</block><killingTests>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>8</block><killingTests>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>11</block><killingTests>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>147</index><block>15</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>152</index><block>16</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>181</index><block>20</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>192</index><block>22</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>205</index><block>24</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>111ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>219</index><block>26</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed call to org/apache/commons/csv/ExtendedBufferedReader::getLastChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed call to org/apache/commons/csv/ExtendedBufferedReader::read</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed call to org/apache/commons/csv/Lexer::readEndOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>removed call to org/apache/commons/csv/Lexer::isStartOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>69</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed call to org/apache/commons/csv/Lexer::isEndOfFile</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>73</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed call to org/apache/commons/csv/Lexer::isDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>77</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed call to org/apache/commons/csv/Lexer::isEndOfFile</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>94</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed call to org/apache/commons/csv/Lexer::isStartOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed call to org/apache/commons/csv/Lexer::isCommentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>180</index><block>20</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed call to org/apache/commons/csv/Lexer::isDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>204</index><block>24</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed call to org/apache/commons/csv/Lexer::isQuoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>218</index><block>26</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed call to org/apache/commons/csv/Lexer::isEndOfFile</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>237</index><block>28</block><killingTests/><suspValue>0.10259783520851541</suspValue><description>removed call to org/apache/commons/csv/Lexer::parseSimpleToken</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>88</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>replaced return value with null for org/apache/commons/csv/Lexer::nextToken</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>244</index><block>29</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced return value with null for org/apache/commons/csv/Lexer::nextToken</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>32</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>70</index><block>6</block><killingTests>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>74</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>78</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>95</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>99</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>147</index><block>15</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>152</index><block>16</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>181</index><block>20</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>192</index><block>22</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>205</index><block>24</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>219</index><block>26</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>32</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>70</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>74</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>78</index><block>8</block><killingTests>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>39ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>128ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>95</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>99</index><block>11</block><killingTests>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackspace(org.apache.commons.csv.LexerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>147</index><block>15</block><killingTests/><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>152</index><block>16</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>181</index><block>20</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>192</index><block>22</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>205</index><block>24</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>219</index><block>26</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>88</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>mutated return of Object value for org/apache/commons/csv/Lexer::nextToken to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>244</index><block>29</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>mutated return of Object value for org/apache/commons/csv/Lexer::nextToken to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>nextToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>84</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.13483997249264842</suspValue><description>Removed assignment to member variable type</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>MethodNameMutator_0</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to factory method java.lang.StringBuilder.append(C)Ljava/lang/StringBuilder; is replaced by an instantiation of type java.lang.StringBuilder using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>MethodNameMutator_4</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to factory method java.lang.StringBuilder.append(C)Ljava/lang/StringBuilder; is replaced by an instantiation of type java.lang.StringBuilder using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>114</index><block>40</block><killingTests/><suspValue>0.10259783520851541</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/String;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/String;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>125ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/String;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>99ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/String;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>114</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>93ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>64ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/String;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/String;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>114</index><block>40</block><killingTests/><suspValue>0.10259783520851541</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>114</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>114</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>114</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to append(C)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>105</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the access to content is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>113</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the access to reader is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>121</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>the access to ignoreSurroundingSpaces is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>113</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the access to reader is guarded using field reader</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>121</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>the access to ignoreSurroundingSpaces is guarded using field ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>121</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>the access to field org.apache.commons.csv.Lexer.ignoreSurroundingSpaces is replaced by the call to org.apache.commons.csv.Lexer::isClosed()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced access to EORECORD with an access to INVALID</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>121</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced access to ignoreSurroundingSpaces with an access to ignoreEmptyLines</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>11</index><block>31</block><killingTests>org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced access to EORECORD with an access to TOKEN</description><testsExecutionTime><test><name>org.apache.commons.csv.LexerTest.testCR(org.apache.commons.csv.LexerTest)</name><time>7ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test><test><name>org.apache.commons.csv.LexerTest.testLF(org.apache.commons.csv.LexerTest)</name><time>5ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(org.apache.commons.csv.LexerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>11</index><block>31</block><killingTests>org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced access to EORECORD with an access to EOF</description><testsExecutionTime><test><name>org.apache.commons.csv.LexerTest.testCR(org.apache.commons.csv.LexerTest)</name><time>7ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test><test><name>org.apache.commons.csv.LexerTest.testLF(org.apache.commons.csv.LexerTest)</name><time>7ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(org.apache.commons.csv.LexerTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>11</index><block>31</block><killingTests>org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(org.apache.commons.csv.LexerTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>replaced access to EORECORD with an access to COMMENT</description><testsExecutionTime><test><name>org.apache.commons.csv.LexerTest.testCR(org.apache.commons.csv.LexerTest)</name><time>15ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test><test><name>org.apache.commons.csv.LexerTest.testLF(org.apache.commons.csv.LexerTest)</name><time>7ms</time></test><test><name>org.apache.commons.csv.LexerTest.testBackslashWithoutEscaping(org.apache.commons.csv.LexerTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to readEndOfLine with a call to isWhitespace</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>70ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEndOfFile with a call to readEndOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isDelimiter with a call to readEndOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>56</index><block>36</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEscape with a call to readEndOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to readEndOfLine with a call to isStartOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEndOfFile with a call to isWhitespace</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isDelimiter with a call to isWhitespace</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>56</index><block>36</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEscape with a call to isWhitespace</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to readEndOfLine with a call to isEndOfFile</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEndOfFile with a call to isStartOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isDelimiter with a call to isStartOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>56</index><block>36</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEscape with a call to isStartOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to readEndOfLine with a call to isDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEndOfFile with a call to isDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isDelimiter with a call to isEndOfFile</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>56</index><block>36</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEscape with a call to isEndOfFile</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to readEndOfLine with a call to isEscape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEndOfFile with a call to isEscape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isDelimiter with a call to isEscape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>56</index><block>36</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEscape with a call to isDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to readEndOfLine with a call to isQuoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEndOfFile with a call to isQuoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>167ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isDelimiter with a call to isQuoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>56</index><block>36</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEscape with a call to isQuoteChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to readEndOfLine with a call to isCommentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEndOfFile with a call to isCommentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isDelimiter with a call to isCommentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>56</index><block>36</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEscape with a call to isCommentStart</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to readEndOfLine with a call to isMetaChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEndOfFile with a call to isMetaChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isDelimiter with a call to isMetaChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>56</index><block>36</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to isEscape with a call to isMetaChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to org.apache.commons.csv.Lexer::readEndOfLine(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to org.apache.commons.csv.Lexer::isEndOfFile(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to org.apache.commons.csv.Lexer::isDelimiter(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>56</index><block>36</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to org.apache.commons.csv.Lexer::isEscape(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to java.lang.StringBuilder::append(C)Ljava/lang/StringBuilder; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>114</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to org.apache.commons.csv.ExtendedBufferedReader::read()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>105</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the access to content is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>113</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the access to reader is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>121</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>the access to ignoreSurroundingSpaces is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>105</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the access to content is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>113</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the access to reader is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>219</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>121</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>the access to ignoreSurroundingSpaces is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to readEndOfLine(I)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to isEndOfFile(I)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to isDelimiter(I)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>56</index><block>36</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to isEscape(I)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to append(C)Ljava/lang/StringBuilder; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>114</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to read()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to readEndOfLine(I)Z is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to isEndOfFile(I)Z is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to isDelimiter(I)Z is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>56</index><block>36</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to isEscape(I)Z is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to append(C)Ljava/lang/StringBuilder; is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>114</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>the call to read()I is guarded returning local token</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>118ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>34</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>36</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>122</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed call to org/apache/commons/csv/Lexer::readEndOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed call to org/apache/commons/csv/Lexer::isEndOfFile</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>34</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed call to org/apache/commons/csv/Lexer::isDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>56</index><block>36</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed call to org/apache/commons/csv/Lexer::isEscape</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed call to java/lang/StringBuilder::append</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>114</index><block>40</block><killingTests/><suspValue>0.10259783520851541</suspValue><description>removed call to org/apache/commons/csv/ExtendedBufferedReader::read</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>133</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>replaced return value with null for org/apache/commons/csv/Lexer::parseSimpleToken</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>22</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>42</index><block>34</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>57</index><block>36</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>122</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>30</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>22</index><block>32</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>42</index><block>34</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>57</index><block>36</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>122</index><block>41</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>133</index><block>42</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10314212462587934</suspValue><description>mutated return of Object value for org/apache/commons/csv/Lexer::parseSimpleToken to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>12</index><block>31</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1203858530857692</suspValue><description>Removed assignment to member variable type</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>parseSimpleToken</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/Token;I)Lorg/apache/commons/csv/Token;</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>108</index><block>40</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10259783520851541</suspValue><description>replaced call to java/lang/StringBuilder::append with receiver</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>7</index><block>48</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to reader is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>389</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>31</index><block>50</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to firstEol is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>7</index><block>48</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to reader is guarded using field reader</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>389</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>31</index><block>50</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to firstEol is guarded using field CR_STRING</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>389</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>31</index><block>50</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to field org.apache.commons.csv.Lexer.firstEol is replaced by the call to org.apache.commons.csv.Lexer::getFirstEol()Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>391</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>41</index><block>52</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced access to LF_STRING with an access to CR_STRING</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>8</index><block>48</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced call to lookAhead with a call to read</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>8</index><block>48</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to org.apache.commons.csv.ExtendedBufferedReader::lookAhead()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>7</index><block>48</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to reader is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>389</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>31</index><block>50</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to firstEol is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>7</index><block>48</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to reader is guarded returning field ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>389</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>31</index><block>50</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the access to firstEol is guarded returning field ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>8</index><block>48</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to lookAhead()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>8</index><block>48</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to lookAhead()I is guarded returning field ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>8</index><block>48</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>the call to lookAhead()I is guarded returning field ignoreEmptyLines</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>73</index><block>57</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced boolean return with false for org/apache/commons/csv/Lexer::readEndOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>73</index><block>57</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced boolean return with true for org/apache/commons/csv/Lexer::readEndOfLine</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>47</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>Substituted 13 with 14</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>48</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>36</index><block>51</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>48</index><block>53</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>Substituted 13 with 14</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>59</index><block>54</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>62</index><block>55</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>Substituted 13 with 14</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>66</index><block>56</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>57</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>47</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>48</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>50</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>51</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>53</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>54</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>55</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>48</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed call to org/apache/commons/csv/ExtendedBufferedReader::lookAhead</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>47</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>48</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>32</index><block>50</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>37</index><block>51</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>49</index><block>53</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>60</index><block>54</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>63</index><block>55</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>47</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>48</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>32</index><block>50</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>37</index><block>51</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>49</index><block>53</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10153461651336192</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>60</index><block>54</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>63</index><block>55</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>73</index><block>57</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10101525445522107</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lexer.java</sourceFile><mutatedClass>org.apache.commons.csv.Lexer</mutatedClass><mutatedMethod>readEndOfLine</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>42</index><block>52</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>Removed assignment to member variable firstEol</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/csv/CSVParser;)V</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>Removed assignment to member variable this$0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>getNextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>528</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>8</index><block>2</block><killingTests/><suspValue>0.18257418583505536</suspValue><description>catch type java/io/IOException is replaced with java/lang/Exception</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>getNextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>528</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to this$0 is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>getNextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>528</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to this$0 is guarded using field this$0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>getNextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>528</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to org.apache.commons.csv.CSVParser::nextRecord()Lorg/apache/commons/csv/CSVRecord; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>getNextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>528</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to this$0 is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>getNextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>528</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to this$0 is guarded returning field current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>getNextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>528</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to nextRecord()Lorg/apache/commons/csv/CSVRecord; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>getNextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>528</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to nextRecord()Lorg/apache/commons/csv/CSVRecord; is guarded returning field current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>getNextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to org/apache/commons/csv/CSVParser::nextRecord</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>getNextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced return value with null for org/apache/commons/csv/CSVParser$1::getNextRecord</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>getNextRecord</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>mutated return of Object value for org/apache/commons/csv/CSVParser$1::getNextRecord to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to this$0 is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to current is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>27</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to current is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to this$0 is guarded using field this$0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to current is guarded using field current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>27</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to current is guarded using field current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.csv.CSVParser$1.current is replaced by the call to org.apache.commons.csv.CSVParser$1::getNextRecord()Lorg/apache/commons/csv/CSVRecord;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>27</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.csv.CSVParser$1.current is replaced by the call to org.apache.commons.csv.CSVParser$1::getNextRecord()Lorg/apache/commons/csv/CSVRecord;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.csv.CSVParser$1.current is replaced by the call to org.apache.commons.csv.CSVParser$1::next()Lorg/apache/commons/csv/CSVRecord;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>27</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.csv.CSVParser$1.current is replaced by the call to org.apache.commons.csv.CSVParser$1::next()Lorg/apache/commons/csv/CSVRecord;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>541</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to getNextRecord with a call to next</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to org.apache.commons.csv.CSVParser::isClosed()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>541</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to org.apache.commons.csv.CSVParser$1::getNextRecord()Lorg/apache/commons/csv/CSVRecord; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to this$0 is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>540</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to current is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>27</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to current is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>537</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to isClosed()Z is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>541</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to getNextRecord()Lorg/apache/commons/csv/CSVRecord; is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>36</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced boolean return with false for org/apache/commons/csv/CSVParser$1::hasNext</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>36</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced boolean return with true for org/apache/commons/csv/CSVParser$1::hasNext</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>33</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed call to org/apache/commons/csv/CSVParser::isClosed</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed call to org/apache/commons/csv/CSVParser$1::getNextRecord</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>hasNext</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>22</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>Removed assignment to member variable current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIterator(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to this$0 is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>552</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>18</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>the access to current is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to this$0 is guarded using field this$0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>552</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>18</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>the access to current is guarded using field current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>552</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>18</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>the access to field org.apache.commons.csv.CSVParser$1.current is replaced by the call to org.apache.commons.csv.CSVParser$1::getNextRecord()Lorg/apache/commons/csv/CSVRecord;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>552</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>18</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>the access to field org.apache.commons.csv.CSVParser$1.current is replaced by the call to org.apache.commons.csv.CSVParser$1::next()Lorg/apache/commons/csv/CSVRecord;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>553</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>access to field current is replaced by access to local next</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>555</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>27</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>access to local next is replaced by access to field current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>48</index><block>14</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>access to local next is replaced by access to field current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to org.apache.commons.csv.CSVParser::isClosed()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to this$0 is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>552</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>18</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>the access to current is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to this$0 is guarded returning field current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>552</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>18</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>the access to current is guarded returning field current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to isClosed()Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>549</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to isClosed()Z is guarded returning field current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to org/apache/commons/csv/CSVParser::isClosed</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>49</index><block>14</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced return value with null for org/apache/commons/csv/CSVParser$1::next</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>549</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>14</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>mutated return of Object value for org/apache/commons/csv/CSVParser$1::next to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVParser.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVParser$1</mutatedClass><mutatedMethod>next</mutatedMethod><methodDescription>()Lorg/apache/commons/csv/CSVRecord;</methodDescription><lineNumber>553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>Removed assignment to member variable current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>the access to commentMarker is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>the access to commentMarker is guarded using field commentMarker</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.commentMarker is replaced by the call to org.apache.commons.csv.CSVFormat::getCommentMarker()Ljava/lang/Character;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.commentMarker is replaced by the call to org.apache.commons.csv.CSVFormat::getEscapeCharacter()Ljava/lang/Character;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.commentMarker is replaced by the call to org.apache.commons.csv.CSVFormat::getQuoteCharacter()Ljava/lang/Character;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>replaced access to commentMarker with an access to escapeCharacter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>replaced access to commentMarker with an access to quoteCharacter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>access to local this is replaced by access to field DEFAULT</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>access to local this is replaced by access to field EXCEL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD_CSV</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>access to local this is replaced by access to field MYSQL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>the access to the local this is replaced a call this.withAllowMissingColumnNames()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>the access to commentMarker is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>the access to commentMarker is guarded returning field commentMarker</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>replaced Character return value with 0 for org/apache/commons/csv/CSVFormat::getCommentMarker</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getCommentMarker</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>809</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09407208683835973</suspValue><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::getCommentMarker to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getDelimiter</mutatedMethod><methodDescription>()C</methodDescription><lineNumber>818</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07474350927519359</suspValue><description>the access to delimiter is guarded using value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getDelimiter</mutatedMethod><methodDescription>()C</methodDescription><lineNumber>818</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07474350927519359</suspValue><description>the access to delimiter is guarded using field delimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getDelimiter</mutatedMethod><methodDescription>()C</methodDescription><lineNumber>818</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07474350927519359</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.delimiter is replaced by the call to org.apache.commons.csv.CSVFormat::getDelimiter()C</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getDelimiter</mutatedMethod><methodDescription>()C</methodDescription><lineNumber>818</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07474350927519359</suspValue><description>access to local this is replaced by access to field DEFAULT</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getDelimiter</mutatedMethod><methodDescription>()C</methodDescription><lineNumber>818</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07474350927519359</suspValue><description>access to local this is replaced by access to field EXCEL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getDelimiter</mutatedMethod><methodDescription>()C</methodDescription><lineNumber>818</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07474350927519359</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getDelimiter</mutatedMethod><methodDescription>()C</methodDescription><lineNumber>818</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07474350927519359</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD_CSV</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getDelimiter</mutatedMethod><methodDescription>()C</methodDescription><lineNumber>818</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07474350927519359</suspValue><description>access to local this is replaced by access to field MYSQL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getDelimiter</mutatedMethod><methodDescription>()C</methodDescription><lineNumber>818</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07474350927519359</suspValue><description>the access to the local this is replaced a call this.withAllowMissingColumnNames()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>80ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getDelimiter</mutatedMethod><methodDescription>()C</methodDescription><lineNumber>818</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07474350927519359</suspValue><description>the access to delimiter is guarded returning default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getDelimiter</mutatedMethod><methodDescription>()C</methodDescription><lineNumber>818</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07474350927519359</suspValue><description>the access to delimiter is guarded returning field delimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getDelimiter</mutatedMethod><methodDescription>()C</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07474350927519359</suspValue><description>replaced char return with 0 for org/apache/commons/csv/CSVFormat::getDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getDelimiter</mutatedMethod><methodDescription>()C</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07474350927519359</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.0944911182523068</suspValue><description>the access to escapeCharacter is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.0944911182523068</suspValue><description>the access to escapeCharacter is guarded using field commentMarker</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.0944911182523068</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.escapeCharacter is replaced by the call to org.apache.commons.csv.CSVFormat::getCommentMarker()Ljava/lang/Character;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.0944911182523068</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.escapeCharacter is replaced by the call to org.apache.commons.csv.CSVFormat::getEscapeCharacter()Ljava/lang/Character;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.0944911182523068</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.escapeCharacter is replaced by the call to org.apache.commons.csv.CSVFormat::getQuoteCharacter()Ljava/lang/Character;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.0944911182523068</suspValue><description>replaced access to escapeCharacter with an access to commentMarker</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.0944911182523068</suspValue><description>replaced access to escapeCharacter with an access to quoteCharacter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.0944911182523068</suspValue><description>access to local this is replaced by access to field DEFAULT</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.0944911182523068</suspValue><description>access to local this is replaced by access to field EXCEL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.0944911182523068</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.0944911182523068</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD_CSV</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.0944911182523068</suspValue><description>access to local this is replaced by access to field MYSQL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.0944911182523068</suspValue><description>the access to the local this is replaced a call this.withAllowMissingColumnNames()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.0944911182523068</suspValue><description>the access to escapeCharacter is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.0944911182523068</suspValue><description>the access to escapeCharacter is guarded returning field commentMarker</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.0944911182523068</suspValue><description>replaced Character return value with 0 for org/apache/commons/csv/CSVFormat::getEscapeCharacter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getEscapeCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.0944911182523068</suspValue><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::getEscapeCharacter to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>MethodNameMutator_0</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the call to factory method [Ljava.lang.String;.clone()Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>MethodNameMutator_1</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the call to factory method [Ljava.lang.String;.clone()Ljava/lang/Object; is replaced by an instantiation of type org.apache.commons.csv.AssertionsTest using ()V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>MethodNameMutator_2</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the call to factory method [Ljava.lang.String;.clone()Ljava/lang/Object; is replaced by an instantiation of type org.apache.commons.csv.TokenMatchersTest using ()V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>MethodNameMutator_3</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the call to factory method [Ljava.lang.String;.clone()Ljava/lang/Object; is replaced by an instantiation of type org.apache.commons.csv.CSVFormatTest using ()V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the access to header is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>7</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the access to header is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the access to header is guarded using field header</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>7</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the access to header is guarded using field header</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.header is replaced by the call to org.apache.commons.csv.CSVFormat::getHeader()[Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>122ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>7</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.header is replaced by the call to org.apache.commons.csv.CSVFormat::getHeader()[Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.header is replaced by the call to org.apache.commons.csv.CSVFormat::getHeaderComments()[Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>7</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.header is replaced by the call to org.apache.commons.csv.CSVFormat::getHeaderComments()[Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>replaced access to header with an access to headerComments</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>7</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>replaced access to header with an access to headerComments</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>access to local this is replaced by access to field DEFAULT</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>access to local this is replaced by access to field DEFAULT</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>access to local this is replaced by access to field EXCEL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>access to local this is replaced by access to field EXCEL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD_CSV</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD_CSV</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>access to local this is replaced by access to field MYSQL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>access to local this is replaced by access to field MYSQL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the access to the local this is replaced a call this.withAllowMissingColumnNames()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the access to the local this is replaced a call this.withAllowMissingColumnNames()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the call to [Ljava.lang.String;::clone()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the access to header is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>7</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the access to header is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the access to header is guarded returning field header</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>7</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the access to header is guarded returning field header</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning field header</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning field headerComments</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>removed call to [Ljava/lang/String;::clone</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>replaced return value with null for org/apache/commons/csv/CSVFormat::getHeader</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getHeader</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>836</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::getHeader to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>the access to ignoreEmptyLines is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>the access to ignoreEmptyLines is guarded using field allowMissingColumnNames</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.ignoreEmptyLines is replaced by the call to org.apache.commons.csv.CSVFormat::getAllowMissingColumnNames()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.ignoreEmptyLines is replaced by the call to org.apache.commons.csv.CSVFormat::getAutoFlush()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.ignoreEmptyLines is replaced by the call to org.apache.commons.csv.CSVFormat::getIgnoreEmptyLines()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.ignoreEmptyLines is replaced by the call to org.apache.commons.csv.CSVFormat::getIgnoreHeaderCase()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.ignoreEmptyLines is replaced by the call to org.apache.commons.csv.CSVFormat::getIgnoreSurroundingSpaces()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>replaced access to ignoreEmptyLines with an access to allowMissingColumnNames</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>replaced access to ignoreEmptyLines with an access to ignoreHeaderCase</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>replaced access to ignoreEmptyLines with an access to ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>replaced access to ignoreEmptyLines with an access to skipHeaderRecord</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>replaced access to ignoreEmptyLines with an access to trailingDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>replaced access to ignoreEmptyLines with an access to trim</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>access to local this is replaced by access to field DEFAULT</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>access to local this is replaced by access to field EXCEL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD_CSV</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>access to local this is replaced by access to field MYSQL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>the access to the local this is replaced a call this.withAllowMissingColumnNames()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>the access to ignoreEmptyLines is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>the access to ignoreEmptyLines is guarded returning field allowMissingColumnNames</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>replaced boolean return with false for org/apache/commons/csv/CSVFormat::getIgnoreEmptyLines</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>replaced boolean return with true for org/apache/commons/csv/CSVFormat::getIgnoreEmptyLines</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreEmptyLines</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>855</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09622504486493763</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>the access to ignoreSurroundingSpaces is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>the access to ignoreSurroundingSpaces is guarded using field allowMissingColumnNames</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces is replaced by the call to org.apache.commons.csv.CSVFormat::getAllowMissingColumnNames()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces is replaced by the call to org.apache.commons.csv.CSVFormat::getAutoFlush()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces is replaced by the call to org.apache.commons.csv.CSVFormat::getIgnoreEmptyLines()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces is replaced by the call to org.apache.commons.csv.CSVFormat::getIgnoreHeaderCase()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.ignoreSurroundingSpaces is replaced by the call to org.apache.commons.csv.CSVFormat::getIgnoreSurroundingSpaces()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>replaced access to ignoreSurroundingSpaces with an access to allowMissingColumnNames</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>replaced access to ignoreSurroundingSpaces with an access to ignoreEmptyLines</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>replaced access to ignoreSurroundingSpaces with an access to ignoreHeaderCase</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>replaced access to ignoreSurroundingSpaces with an access to skipHeaderRecord</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>replaced access to ignoreSurroundingSpaces with an access to trailingDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>replaced access to ignoreSurroundingSpaces with an access to trim</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>access to local this is replaced by access to field DEFAULT</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>access to local this is replaced by access to field EXCEL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD_CSV</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>access to local this is replaced by access to field MYSQL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>the access to the local this is replaced a call this.withAllowMissingColumnNames()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>the access to ignoreSurroundingSpaces is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>the access to ignoreSurroundingSpaces is guarded returning field allowMissingColumnNames</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>5</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>replaced boolean return with false for org/apache/commons/csv/CSVFormat::getIgnoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>5</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>replaced boolean return with true for org/apache/commons/csv/CSVFormat::getIgnoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getIgnoreSurroundingSpaces</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>874</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09667364890456635</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getNullString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>the access to nullString is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getNullString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>the access to nullString is guarded using field nullString</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getNullString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.nullString is replaced by the call to org.apache.commons.csv.CSVFormat::getNullString()Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getNullString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.nullString is replaced by the call to org.apache.commons.csv.CSVFormat::getRecordSeparator()Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getNullString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.nullString is replaced by the call to org.apache.commons.csv.CSVFormat::toString()Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getNullString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced access to nullString with an access to recordSeparator</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getNullString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local this is replaced by access to field DEFAULT</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getNullString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local this is replaced by access to field EXCEL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getNullString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getNullString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD_CSV</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getNullString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>access to local this is replaced by access to field MYSQL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getNullString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>the access to the local this is replaced a call this.withAllowMissingColumnNames()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getNullString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>the access to nullString is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getNullString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>the access to nullString is guarded returning field nullString</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getNullString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced return value with &#34;&#34; for org/apache/commons/csv/CSVFormat::getNullString</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getNullString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::getNullString to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07761505257063328</suspValue><description>the access to quoteCharacter is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07761505257063328</suspValue><description>the access to quoteCharacter is guarded using field commentMarker</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07761505257063328</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.quoteCharacter is replaced by the call to org.apache.commons.csv.CSVFormat::getCommentMarker()Ljava/lang/Character;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07761505257063328</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.quoteCharacter is replaced by the call to org.apache.commons.csv.CSVFormat::getEscapeCharacter()Ljava/lang/Character;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07761505257063328</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.quoteCharacter is replaced by the call to org.apache.commons.csv.CSVFormat::getQuoteCharacter()Ljava/lang/Character;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07761505257063328</suspValue><description>replaced access to quoteCharacter with an access to commentMarker</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07761505257063328</suspValue><description>replaced access to quoteCharacter with an access to escapeCharacter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07761505257063328</suspValue><description>access to local this is replaced by access to field DEFAULT</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07761505257063328</suspValue><description>access to local this is replaced by access to field EXCEL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07761505257063328</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07761505257063328</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD_CSV</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07761505257063328</suspValue><description>access to local this is replaced by access to field MYSQL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07761505257063328</suspValue><description>the access to the local this is replaced a call this.withAllowMissingColumnNames()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07761505257063328</suspValue><description>the access to quoteCharacter is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07761505257063328</suspValue><description>the access to quoteCharacter is guarded returning field commentMarker</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07761505257063328</suspValue><description>replaced Character return value with 0 for org/apache/commons/csv/CSVFormat::getQuoteCharacter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getQuoteCharacter</mutatedMethod><methodDescription>()Ljava/lang/Character;</methodDescription><lineNumber>897</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07761505257063328</suspValue><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::getQuoteCharacter to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>the access to trim is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>the access to trim is guarded using field allowMissingColumnNames</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.trim is replaced by the call to org.apache.commons.csv.CSVFormat::getAllowMissingColumnNames()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.trim is replaced by the call to org.apache.commons.csv.CSVFormat::getAutoFlush()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.trim is replaced by the call to org.apache.commons.csv.CSVFormat::getIgnoreEmptyLines()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.trim is replaced by the call to org.apache.commons.csv.CSVFormat::getIgnoreHeaderCase()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>the access to field org.apache.commons.csv.CSVFormat.trim is replaced by the call to org.apache.commons.csv.CSVFormat::getIgnoreSurroundingSpaces()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>replaced access to trim with an access to allowMissingColumnNames</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>replaced access to trim with an access to ignoreEmptyLines</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>replaced access to trim with an access to ignoreHeaderCase</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>replaced access to trim with an access to ignoreSurroundingSpaces</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>replaced access to trim with an access to skipHeaderRecord</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>replaced access to trim with an access to trailingDelimiter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to local this is replaced by access to field DEFAULT</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to local this is replaced by access to field EXCEL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD_CSV</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to local this is replaced by access to field MYSQL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>the access to the local this is replaced a call this.withAllowMissingColumnNames()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>the access to trim is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>the access to trim is guarded returning field allowMissingColumnNames</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>replaced boolean return with false for org/apache/commons/csv/CSVFormat::getTrim</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>replaced boolean return with true for org/apache/commons/csv/CSVFormat::getTrim</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>getTrim</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>943</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.21320071635561041</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V with a call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.21320071635561041</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V with a call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.21320071635561041</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V with a call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.21320071635561041</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V with a call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.21320071635561041</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V with a call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.21320071635561041</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;)V with a call to &#60;init&#62;(Ljava/io/Reader;Lorg/apache/commons/csv/CSVFormat;JJ)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.21320071635561041</suspValue><description>access to local this is replaced by access to field DEFAULT</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.21320071635561041</suspValue><description>access to local this is replaced by access to field EXCEL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.21320071635561041</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>6</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.21320071635561041</suspValue><description>access to local this is replaced by access to field INFORMIX_UNLOAD_CSV</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>6</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.21320071635561041</suspValue><description>access to local this is replaced by access to field MYSQL</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>1018</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>6</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.21320071635561041</suspValue><description>the access to the local this is replaced a call this.withAllowMissingColumnNames()</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.21320071635561041</suspValue><description>removed call to org/apache/commons/csv/CSVParser::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.21320071635561041</suspValue><description>replaced return value with null for org/apache/commons/csv/CSVFormat::parse</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVFormat.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVFormat</mutatedClass><mutatedMethod>parse</mutatedMethod><methodDescription>(Ljava/io/Reader;)Lorg/apache/commons/csv/CSVParser;</methodDescription><lineNumber>1018</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>11</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.21320071635561041</suspValue><description>mutated return of Object value for org/apache/commons/csv/CSVFormat::parse to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Assertions.java</sourceFile><mutatedClass>org.apache.commons.csv.Assertions</mutatedClass><mutatedMethod>notNull</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/String;)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07692307692307693</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Assertions.java</sourceFile><mutatedClass>org.apache.commons.csv.Assertions</mutatedClass><mutatedMethod>notNull</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/String;)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07692307692307693</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Assertions.java</sourceFile><mutatedClass>org.apache.commons.csv.Assertions</mutatedClass><mutatedMethod>notNull</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/String;)V</methodDescription><lineNumber>34</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.07692307692307693</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;)V with a call to &#60;init&#62;(Ljava/io/Reader;I)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;)V with a call to &#60;init&#62;(Ljava/io/Reader;I)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;)V with a call to &#60;init&#62;(Ljava/io/Reader;I)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;)V with a call to &#60;init&#62;(Ljava/io/Reader;I)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;)V with a call to &#60;init&#62;(Ljava/io/Reader;I)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09805806756909202</suspValue><description>replaced call to &#60;init&#62;(Ljava/io/Reader;)V with a call to &#60;init&#62;(Ljava/io/Reader;I)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09805806756909202</suspValue><description>Substituted -2 with -1</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/io/Reader;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09805806756909202</suspValue><description>Removed assignment to member variable lastChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getLastChar</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09950371902099892</suspValue><description>the access to lastChar is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getLastChar</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09950371902099892</suspValue><description>the access to lastChar is guarded using field lastChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getLastChar</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09950371902099892</suspValue><description>the access to field org.apache.commons.csv.ExtendedBufferedReader.lastChar is replaced by the call to org.apache.commons.csv.ExtendedBufferedReader::read()I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getLastChar</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09950371902099892</suspValue><description>the access to field org.apache.commons.csv.ExtendedBufferedReader.lastChar is replaced by the call to org.apache.commons.csv.ExtendedBufferedReader::getLastChar()I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getLastChar</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09950371902099892</suspValue><description>the access to field org.apache.commons.csv.ExtendedBufferedReader.lastChar is replaced by the call to org.apache.commons.csv.ExtendedBufferedReader::lookAhead()I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getLastChar</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09950371902099892</suspValue><description>the access to lastChar is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getLastChar</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09950371902099892</suspValue><description>the access to lastChar is guarded returning field lastChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getLastChar</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced int return with 0 for org/apache/commons/csv/ExtendedBufferedReader::getLastChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getLastChar</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09950371902099892</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to position is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to position is guarded using field eolCounter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to field org.apache.commons.csv.ExtendedBufferedReader.position is replaced by the call to org.apache.commons.csv.ExtendedBufferedReader::getCurrentLineNumber()J</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to field org.apache.commons.csv.ExtendedBufferedReader.position is replaced by the call to org.apache.commons.csv.ExtendedBufferedReader::getPosition()J</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>replaced access to position with an access to eolCounter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to position is guarded returning default value 0L</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to position is guarded returning field eolCounter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>replaced long return with 0 for org/apache/commons/csv/ExtendedBufferedReader::getPosition</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>getPosition</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/csv/ExtendedBufferedReader::getPosition</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to closed is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to closed is guarded using field closed</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.csv.ExtendedBufferedReader.closed is replaced by the call to org.apache.commons.csv.ExtendedBufferedReader::isClosed()Z</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to closed is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to closed is guarded returning field closed</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>5</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced boolean return with false for org/apache/commons/csv/ExtendedBufferedReader::isClosed</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>5</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced boolean return with true for org/apache/commons/csv/ExtendedBufferedReader::isClosed</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>isClosed</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTests>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testMultipleIterators(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced call to read()I with a call to read([CII)I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to lastChar is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>the access to eolCounter is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>37</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to position is guarded using value 0L</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>44</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to lastChar is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to lastChar is guarded using local current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>44</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to lastChar is guarded using local current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to lastChar is guarded using field lastChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>the access to eolCounter is guarded using field eolCounter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>37</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to position is guarded using field eolCounter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>44</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to lastChar is guarded using field lastChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(org.apache.commons.csv.ExtendedBufferedReaderTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to field org.apache.commons.csv.ExtendedBufferedReader.lastChar is replaced by the call to org.apache.commons.csv.ExtendedBufferedReader::read()I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test><test><name>org.apache.commons.csv.ExtendedBufferedReaderTest.testEmptyInput(org.apache.commons.csv.ExtendedBufferedReaderTest)</name><time>2ms</time></test><test><name>org.apache.commons.csv.ExtendedBufferedReaderTest.testReadLookahead1(org.apache.commons.csv.ExtendedBufferedReaderTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>the access to field org.apache.commons.csv.ExtendedBufferedReader.eolCounter is replaced by the call to org.apache.commons.csv.ExtendedBufferedReader::getCurrentLineNumber()J</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>37</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to field org.apache.commons.csv.ExtendedBufferedReader.position is replaced by the call to org.apache.commons.csv.ExtendedBufferedReader::getCurrentLineNumber()J</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>44</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to field org.apache.commons.csv.ExtendedBufferedReader.lastChar is replaced by the call to org.apache.commons.csv.ExtendedBufferedReader::read()I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to field org.apache.commons.csv.ExtendedBufferedReader.lastChar is replaced by the call to org.apache.commons.csv.ExtendedBufferedReader::getLastChar()I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>the access to field org.apache.commons.csv.ExtendedBufferedReader.eolCounter is replaced by the call to org.apache.commons.csv.ExtendedBufferedReader::getPosition()J</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>37</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to field org.apache.commons.csv.ExtendedBufferedReader.position is replaced by the call to org.apache.commons.csv.ExtendedBufferedReader::getPosition()J</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>44</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to field org.apache.commons.csv.ExtendedBufferedReader.lastChar is replaced by the call to org.apache.commons.csv.ExtendedBufferedReader::getLastChar()I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to field org.apache.commons.csv.ExtendedBufferedReader.lastChar is replaced by the call to org.apache.commons.csv.ExtendedBufferedReader::lookAhead()I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>44</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to field org.apache.commons.csv.ExtendedBufferedReader.lastChar is replaced by the call to org.apache.commons.csv.ExtendedBufferedReader::lookAhead()I</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>replaced access to eolCounter with an access to position</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>replaced access to eolCounter with an access to position</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>37</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced access to position with an access to eolCounter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>replaced access to position with an access to eolCounter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to field lastChar is replaced by access to local current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>32</index><block>4</block><killingTests/><suspValue>0.09901475429766744</suspValue><description>access to field lastChar is replaced by access to local current</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>44</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to field lastChar is replaced by access to local current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to local current is replaced by access to field lastChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>access to local current is replaced by access to field lastChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>31</index><block>4</block><killingTests/><suspValue>0.09901475429766744</suspValue><description>access to local current is replaced by access to field lastChar</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the call to java.io.BufferedReader::read()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to lastChar is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>the access to eolCounter is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>37</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to position is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>44</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to lastChar is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to lastChar is guarded returning local current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>the access to eolCounter is guarded returning local current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>37</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to position is guarded returning local current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>44</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to lastChar is guarded returning local current</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to lastChar is guarded returning field lastChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>23</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>the access to eolCounter is guarded returning field lastChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>37</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to position is guarded returning field lastChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>44</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the access to lastChar is guarded returning field lastChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the call to read()I is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>the call to read()I is guarded returning field lastChar</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>Substituted 13 with 14</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>Substituted 13 with 14</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>38</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.09901475429766744</suspValue><description>removed call to java/io/BufferedReader::read</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>45</index><block>4</block><killingTests/><suspValue>0.09901475429766744</suspValue><description>replaced int return with 0 for org/apache/commons/csv/ExtendedBufferedReader::read</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>4</block><killingTests/><suspValue>0.09901475429766744</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11180339887498948</suspValue><description>Removed assignment to member variable eolCounter</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>32</index><block>4</block><killingTests/><suspValue>0.09901475429766744</suspValue><description>Removed assignment to member variable lastChar</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ExtendedBufferedReader.java</sourceFile><mutatedClass>org.apache.commons.csv.ExtendedBufferedReader</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09901475429766744</suspValue><description>Removed assignment to member variable position</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>95ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>62ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced access to INVALID with an access to TOKEN</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced access to INVALID with an access to EOF</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced access to INVALID with an access to EORECORD</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>replaced access to INVALID with an access to COMMENT</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>Substituted 50 with 51</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>Removed assignment to member variable type</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.09759000729485333</suspValue><description>Removed assignment to member variable content</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to content is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to content is guarded using field content</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>replaced access to INVALID with an access to TOKEN</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>replaced access to INVALID with an access to EOF</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testCSV57(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testEmptyFile(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>replaced access to INVALID with an access to EORECORD</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>60</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>replaced access to INVALID with an access to COMMENT</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testCSV57(org.apache.commons.csv.CSVParserTest)</name><time>9ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testEmptyFile(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test><test><name>org.apache.commons.csv.CSVParserTest.testLineFeedEndings(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>replaced call to setLength with a call to ensureCapacity</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to content is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to content is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the access to content is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to setLength(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to setLength(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to setLength(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to setLength(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to setLength(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>the call to java.lang.StringBuilder::setLength(I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>removed call to java/lang/StringBuilder::setLength</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>Removed assignment to member variable type</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Token.java</sourceFile><mutatedClass>org.apache.commons.csv.Token</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.11785113019775793</suspValue><description>Removed assignment to member variable isReady</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to field recordNumber is replaced by access to local recordNumber</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to field EMPTY_STRING_ARRAY is replaced by access to local values</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to field values is replaced by access to local values</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>55</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to field mapping is replaced by access to local mapping</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to field comment is replaced by access to local comment</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to field characterPosition is replaced by access to local recordNumber</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to field recordNumber is replaced by access to local characterPosition</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>access to field characterPosition is replaced by access to local characterPosition</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local recordNumber is replaced by local characterPosition to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>local characterPosition is replaced by local recordNumber to be used</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>Removed assignment to member variable recordNumber</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>Removed assignment to member variable values</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>Removed assignment to member variable mapping</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>Removed assignment to member variable comment</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;Ljava/util/Map;Ljava/lang/String;JJ)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>Removed assignment to member variable characterPosition</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to values is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to values is guarded using field EMPTY_STRING_ARRAY</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to field org.apache.commons.csv.CSVRecord.values is replaced by the call to org.apache.commons.csv.CSVRecord::values()[Ljava/lang/String;</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to values is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to values is guarded returning field comment</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>7</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced return value with &#34;&#34; for org/apache/commons/csv/CSVRecord::get</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CSVRecord.java</sourceFile><mutatedClass>org.apache.commons.csv.CSVRecord</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>3</block><killingTests>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>mutated return of Object value for org/apache/commons/csv/CSVRecord::get to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.csv.CSVParserTest.testIteratorSequenceBreaking(org.apache.commons.csv.CSVParserTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
</mutations>
