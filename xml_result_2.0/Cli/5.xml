<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>org.apache.commons.cli.Util</mutatedClass><mutatedMethod>stripLeadingHyphens</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>org.apache.commons.cli.Util</mutatedClass><mutatedMethod>stripLeadingHyphens</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>org.apache.commons.cli.Util</mutatedClass><mutatedMethod>stripLeadingHyphens</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>org.apache.commons.cli.Util</mutatedClass><mutatedMethod>stripLeadingHyphens</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>org.apache.commons.cli.Util</mutatedClass><mutatedMethod>stripLeadingHyphens</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>org.apache.commons.cli.Util</mutatedClass><mutatedMethod>stripLeadingHyphens</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>org.apache.commons.cli.Util</mutatedClass><mutatedMethod>stripLeadingHyphens</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to startsWith with a call to equalsIgnoreCase</description><testsExecutionTime><test><name>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>org.apache.commons.cli.Util</mutatedClass><mutatedMethod>stripLeadingHyphens</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to startsWith with a call to endsWith</description><testsExecutionTime><test><name>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>org.apache.commons.cli.Util</mutatedClass><mutatedMethod>stripLeadingHyphens</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>replaced call to startsWith with a call to matches</description><testsExecutionTime><test><name>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>org.apache.commons.cli.Util</mutatedClass><mutatedMethod>stripLeadingHyphens</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>the call to java.lang.String::startsWith(Ljava/lang/String;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='83'><sourceFile>Util.java</sourceFile><mutatedClass>org.apache.commons.cli.Util</mutatedClass><mutatedMethod>stripLeadingHyphens</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>0</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>the call to startsWith(Ljava/lang/String;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.cli.ValueTest.testPropertyOptionMultipleValues(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.BuildTest.testDuplicateLong(org.apache.commons.cli.BuildTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.BugsTest.test11680(org.apache.commons.cli.BugsTest)</name><time>3ms</time></test><test><name>org.apache.commons.cli.ArgumentIsOptionTest.testOptionAndOptionWithArgument(org.apache.commons.cli.ArgumentIsOptionTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ApplicationTest.testLs(org.apache.commons.cli.ApplicationTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testStop(org.apache.commons.cli.GnuParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testPropertyOptionSingularValue(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValuesTest.testCharSeparator(org.apache.commons.cli.ValuesTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.BugsTest.test12210(org.apache.commons.cli.BugsTest)</name><time>3ms</time></test><test><name>org.apache.commons.cli.bug.BugCLI71Test.testGetsDefaultIfOptional(org.apache.commons.cli.bug.BugCLI71Test)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ValuesTest.testShortArgsWithValue(org.apache.commons.cli.ValuesTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ValuesTest.testMultipleArgValues(org.apache.commons.cli.ValuesTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testSingleLongOption(org.apache.commons.cli.OptionGroupTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ParseTest.testComplexShort(org.apache.commons.cli.ParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ParseTest.testMultipleWithLong(org.apache.commons.cli.ParseTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testSimpleShort(org.apache.commons.cli.GnuParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ArgumentIsOptionTest.testOption(org.apache.commons.cli.ArgumentIsOptionTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testPropertyOverrideValues(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testSingleOption(org.apache.commons.cli.OptionGroupTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ParseRequiredTest.testMissingRequiredOption(org.apache.commons.cli.ParseRequiredTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testShortNoArg(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testShortOptionalArgValue(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testNoOptionsExtraArgs(org.apache.commons.cli.OptionGroupTest)</name><time>4ms</time></test><test><name>org.apache.commons.cli.bug.BugCLI133Test.testOrder(org.apache.commons.cli.bug.BugCLI133Test)</name><time>5ms</time></test><test><name>org.apache.commons.cli.BugsTest.test11458(org.apache.commons.cli.BugsTest)</name><time>3ms</time></test><test><name>org.apache.commons.cli.bug.BugCLI51Test.test(org.apache.commons.cli.bug.BugCLI51Test)</name><time>1ms</time></test><test><name>org.apache.commons.cli.BugsTest.test11457(org.apache.commons.cli.BugsTest)</name><time>3ms</time></test><test><name>org.apache.commons.cli.ParseTest.testMissingArg(org.apache.commons.cli.ParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ParseTest.testSimpleShort(org.apache.commons.cli.ParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testLongOptionalArgValue(org.apache.commons.cli.ValueTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testSimpleLong(org.apache.commons.cli.GnuParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.BugsTest.test14786(org.apache.commons.cli.BugsTest)</name><time>3ms</time></test><test><name>org.apache.commons.cli.ArgumentIsOptionTest.testOptionWithArgument(org.apache.commons.cli.ArgumentIsOptionTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testTwoValidOptions(org.apache.commons.cli.OptionGroupTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ParseTest.testMultiple(org.apache.commons.cli.ParseTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ValueTest.testLongNoArg(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ParseTest.testSingleDash(org.apache.commons.cli.ParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.BugsTest.test15046(org.apache.commons.cli.BugsTest)</name><time>3ms</time></test><test><name>org.apache.commons.cli.ParseTest.testStop(org.apache.commons.cli.ParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ParseRequiredTest.testWithRequiredOption(org.apache.commons.cli.ParseRequiredTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ValueTest.testLongOptionalNoValue(org.apache.commons.cli.ValueTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testSingleDash(org.apache.commons.cli.GnuParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValuesTest.testComplexValues(org.apache.commons.cli.ValuesTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.PatternOptionBuilderTest.testSimplePattern(org.apache.commons.cli.PatternOptionBuilderTest)</name><time>5ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testValidLongOnlyOptions(org.apache.commons.cli.OptionGroupTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testShortWithArg(org.apache.commons.cli.ValueTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.LongOptionWithShort.testLongOptionWithShort(org.apache.commons.cli.LongOptionWithShort)</name><time>1ms</time></test><test><name>org.apache.commons.cli.bug.BugCLI71Test.testBasic(org.apache.commons.cli.bug.BugCLI71Test)</name><time>2ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testTwoValidLongOptions(org.apache.commons.cli.OptionGroupTest)</name><time>3ms</time></test><test><name>org.apache.commons.cli.BugsTest.test13935(org.apache.commons.cli.BugsTest)</name><time>43ms</time></test><test><name>org.apache.commons.cli.ValuesTest.testShortArgs(org.apache.commons.cli.ValuesTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testSingleOptionFromGroup(org.apache.commons.cli.OptionGroupTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testTwoOptionsFromGroup(org.apache.commons.cli.OptionGroupTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testLongOptionalNArgValues(org.apache.commons.cli.ValueTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.BugsTest.test13425(org.apache.commons.cli.BugsTest)</name><time>3ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testExtraOption(org.apache.commons.cli.GnuParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testMultiple(org.apache.commons.cli.GnuParseTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ParseRequiredTest.testOptionAndRequiredOption(org.apache.commons.cli.ParseRequiredTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testLongWithArg(org.apache.commons.cli.ValueTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testTwoOptionsFromDifferentGroup(org.apache.commons.cli.OptionGroupTest)</name><time>3ms</time></test><test><name>org.apache.commons.cli.ParseTest.testExtraOption(org.apache.commons.cli.ParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testMultipleWithLong(org.apache.commons.cli.GnuParseTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ParseTest.testSimpleLong(org.apache.commons.cli.ParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ApplicationTest.testAnt(org.apache.commons.cli.ApplicationTest)</name><time>0ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testTwoLongOptionsFromGroup(org.apache.commons.cli.OptionGroupTest)</name><time>3ms</time></test><test><name>org.apache.commons.cli.BuildTest.testDuplicateSimple(org.apache.commons.cli.BuildTest)</name><time>3ms</time></test><test><name>org.apache.commons.cli.ValueTest.testShortOptionalArgValues(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ParseTest.testDoubleDash(org.apache.commons.cli.ParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValuesTest.testTwoArgValues(org.apache.commons.cli.ValuesTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testDoubleDash(org.apache.commons.cli.GnuParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testLongOptionalArgValues(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testMissingArg(org.apache.commons.cli.GnuParseTest)</name><time>4ms</time></test><test><name>org.apache.commons.cli.ValueTest.testShortOptionalArgNoValue(org.apache.commons.cli.ValueTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.BugsTest.test15648(org.apache.commons.cli.BugsTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.BugsTest.test11456(org.apache.commons.cli.BugsTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValuesTest.testExtraArgs(org.apache.commons.cli.ValuesTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.bug.BugCLI13Test.testCLI13(org.apache.commons.cli.bug.BugCLI13Test)</name><time>2ms</time></test><test><name>org.apache.commons.cli.bug.BugCLI71Test.testLackOfError(org.apache.commons.cli.bug.BugCLI71Test)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testShortOptionalNArgValues(org.apache.commons.cli.ValueTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ValueTest.testPropertyOptionFlags(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.BugsTest.test31148(org.apache.commons.cli.BugsTest)</name><time>4ms</time></test><test><name>org.apache.commons.cli.bug.BugCLI71Test.testMistakenArgument(org.apache.commons.cli.bug.BugCLI71Test)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>226ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='83'><sourceFile>Util.java</sourceFile><mutatedClass>org.apache.commons.cli.Util</mutatedClass><mutatedMethod>stripLeadingHyphens</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>5</index><block>0</block><killingTests/><suspValue>0.15523010514126656</suspValue><description>the call to startsWith(Ljava/lang/String;)Z is guarded returning local str</description><testsExecutionTime><test><name>org.apache.commons.cli.ValueTest.testPropertyOptionMultipleValues(org.apache.commons.cli.ValueTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.BuildTest.testDuplicateLong(org.apache.commons.cli.BuildTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.BugsTest.test11680(org.apache.commons.cli.BugsTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ArgumentIsOptionTest.testOptionAndOptionWithArgument(org.apache.commons.cli.ArgumentIsOptionTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ApplicationTest.testLs(org.apache.commons.cli.ApplicationTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testStop(org.apache.commons.cli.GnuParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testPropertyOptionSingularValue(org.apache.commons.cli.ValueTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ValuesTest.testCharSeparator(org.apache.commons.cli.ValuesTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.BugsTest.test12210(org.apache.commons.cli.BugsTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.bug.BugCLI71Test.testGetsDefaultIfOptional(org.apache.commons.cli.bug.BugCLI71Test)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValuesTest.testShortArgsWithValue(org.apache.commons.cli.ValuesTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ValuesTest.testMultipleArgValues(org.apache.commons.cli.ValuesTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testSingleLongOption(org.apache.commons.cli.OptionGroupTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ParseTest.testComplexShort(org.apache.commons.cli.ParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ParseTest.testMultipleWithLong(org.apache.commons.cli.ParseTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testSimpleShort(org.apache.commons.cli.GnuParseTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ArgumentIsOptionTest.testOption(org.apache.commons.cli.ArgumentIsOptionTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testPropertyOverrideValues(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testSingleOption(org.apache.commons.cli.OptionGroupTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ParseRequiredTest.testMissingRequiredOption(org.apache.commons.cli.ParseRequiredTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testShortNoArg(org.apache.commons.cli.ValueTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ValueTest.testShortOptionalArgValue(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testNoOptionsExtraArgs(org.apache.commons.cli.OptionGroupTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.bug.BugCLI133Test.testOrder(org.apache.commons.cli.bug.BugCLI133Test)</name><time>2ms</time></test><test><name>org.apache.commons.cli.BugsTest.test11458(org.apache.commons.cli.BugsTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.bug.BugCLI51Test.test(org.apache.commons.cli.bug.BugCLI51Test)</name><time>1ms</time></test><test><name>org.apache.commons.cli.BugsTest.test11457(org.apache.commons.cli.BugsTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ParseTest.testMissingArg(org.apache.commons.cli.ParseTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ParseTest.testSimpleShort(org.apache.commons.cli.ParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testLongOptionalArgValue(org.apache.commons.cli.ValueTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testSimpleLong(org.apache.commons.cli.GnuParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.BugsTest.test14786(org.apache.commons.cli.BugsTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ArgumentIsOptionTest.testOptionWithArgument(org.apache.commons.cli.ArgumentIsOptionTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testTwoValidOptions(org.apache.commons.cli.OptionGroupTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ParseTest.testMultiple(org.apache.commons.cli.ParseTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ValueTest.testLongNoArg(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ParseTest.testSingleDash(org.apache.commons.cli.ParseTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.BugsTest.test15046(org.apache.commons.cli.BugsTest)</name><time>23ms</time></test><test><name>org.apache.commons.cli.ParseTest.testStop(org.apache.commons.cli.ParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ParseRequiredTest.testWithRequiredOption(org.apache.commons.cli.ParseRequiredTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ValueTest.testLongOptionalNoValue(org.apache.commons.cli.ValueTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testSingleDash(org.apache.commons.cli.GnuParseTest)</name><time>0ms</time></test><test><name>org.apache.commons.cli.ValuesTest.testComplexValues(org.apache.commons.cli.ValuesTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.PatternOptionBuilderTest.testSimplePattern(org.apache.commons.cli.PatternOptionBuilderTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testValidLongOnlyOptions(org.apache.commons.cli.OptionGroupTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ValueTest.testShortWithArg(org.apache.commons.cli.ValueTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.LongOptionWithShort.testLongOptionWithShort(org.apache.commons.cli.LongOptionWithShort)</name><time>2ms</time></test><test><name>org.apache.commons.cli.bug.BugCLI71Test.testBasic(org.apache.commons.cli.bug.BugCLI71Test)</name><time>1ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testTwoValidLongOptions(org.apache.commons.cli.OptionGroupTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.BugsTest.test13935(org.apache.commons.cli.BugsTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValuesTest.testShortArgs(org.apache.commons.cli.ValuesTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testSingleOptionFromGroup(org.apache.commons.cli.OptionGroupTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testTwoOptionsFromGroup(org.apache.commons.cli.OptionGroupTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ValueTest.testLongOptionalNArgValues(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.BugsTest.test13425(org.apache.commons.cli.BugsTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testExtraOption(org.apache.commons.cli.GnuParseTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testMultiple(org.apache.commons.cli.GnuParseTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ParseRequiredTest.testOptionAndRequiredOption(org.apache.commons.cli.ParseRequiredTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ValueTest.testLongWithArg(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testTwoOptionsFromDifferentGroup(org.apache.commons.cli.OptionGroupTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ParseTest.testExtraOption(org.apache.commons.cli.ParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testMultipleWithLong(org.apache.commons.cli.GnuParseTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ParseTest.testSimpleLong(org.apache.commons.cli.ParseTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ApplicationTest.testAnt(org.apache.commons.cli.ApplicationTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.OptionGroupTest.testTwoLongOptionsFromGroup(org.apache.commons.cli.OptionGroupTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.BuildTest.testDuplicateSimple(org.apache.commons.cli.BuildTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.ValueTest.testShortOptionalArgValues(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ParseTest.testDoubleDash(org.apache.commons.cli.ParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValuesTest.testTwoArgValues(org.apache.commons.cli.ValuesTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testDoubleDash(org.apache.commons.cli.GnuParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testLongOptionalArgValues(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.GnuParseTest.testMissingArg(org.apache.commons.cli.GnuParseTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testShortOptionalArgNoValue(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.BugsTest.test15648(org.apache.commons.cli.BugsTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.BugsTest.test11456(org.apache.commons.cli.BugsTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValuesTest.testExtraArgs(org.apache.commons.cli.ValuesTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.bug.BugCLI13Test.testCLI13(org.apache.commons.cli.bug.BugCLI13Test)</name><time>2ms</time></test><test><name>org.apache.commons.cli.bug.BugCLI71Test.testLackOfError(org.apache.commons.cli.bug.BugCLI71Test)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testShortOptionalNArgValues(org.apache.commons.cli.ValueTest)</name><time>2ms</time></test><test><name>org.apache.commons.cli.ValueTest.testPropertyOptionFlags(org.apache.commons.cli.ValueTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.BugsTest.test31148(org.apache.commons.cli.BugsTest)</name><time>1ms</time></test><test><name>org.apache.commons.cli.bug.BugCLI71Test.testMistakenArgument(org.apache.commons.cli.bug.BugCLI71Test)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>167ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>org.apache.commons.cli.Util</mutatedClass><mutatedMethod>stripLeadingHyphens</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>org.apache.commons.cli.Util</mutatedClass><mutatedMethod>stripLeadingHyphens</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed call to java/lang/String::startsWith</description><testsExecutionTime><test><name>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>org.apache.commons.cli.Util</mutatedClass><mutatedMethod>stripLeadingHyphens</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Util.java</sourceFile><mutatedClass>org.apache.commons.cli.Util</mutatedClass><mutatedMethod>stripLeadingHyphens</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</killingTests><suspValue>0.15523010514126656</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.cli.UtilTest.testStripLeadingHyphens(org.apache.commons.cli.UtilTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
</mutations>
