<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;(II)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;(II)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;(II)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;(II)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;(II)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;(II)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to numDecisionVariables with an access to numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to LEQ with an access to EQ</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>46</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to GEQ with an access to EQ</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to numSlackVariables with an access to numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>54</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to EQ with an access to LEQ</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to GEQ with an access to EQ</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>68</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to MAXIMIZE with an access to MINIMIZE</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>43</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to LEQ with an access to GEQ</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>46</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to GEQ with an access to LEQ</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>54</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to EQ with an access to GEQ</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to GEQ with an access to LEQ</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field f is replaced by access to local f</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field constraints is replaced by access to local constraints</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field restrictToNonNegative is replaced by access to local restrictToNonNegative</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field epsilon is replaced by access to local epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>68</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field MAXIMIZE is replaced by access to local goalType</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumVariables with a call to getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>81</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to initialize with a call to discardArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumVariables with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumVariables with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumVariables with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumVariables with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumVariables with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumVariables with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumVariables with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumVariables with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumVariables with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumVariables()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>55</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>75</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::createTableau(Z)[[D is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumVariables()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>55</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>75</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to createTableau(Z)[[D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>81</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to initialize()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumVariables()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>55</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>75</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to createTableau(Z)[[D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>81</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to initialize()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumVariables()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>55</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>75</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to createTableau(Z)[[D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>81</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to initialize()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumVariables()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>55</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>75</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to createTableau(Z)[[D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>81</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to initialize()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumVariables()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>55</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstraintTypeCounts(Lorg/apache/commons/math/optimization/linear/Relationship;)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>75</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to createTableau(Z)[[D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>81</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to initialize()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>81</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::initialize()V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>76</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/linear/RealMatrixImpl::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>73</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getConstraintTypeCounts</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>47</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getConstraintTypeCounts</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>55</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getConstraintTypeCounts</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getConstraintTypeCounts</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>75</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::createTableau</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>31</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>31</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>81</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::initialize</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable f</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable constraints</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable restrictToNonNegative</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>60</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;ZD)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>77</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable tableau</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local src is replaced by local dest to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local dest is replaced by local src to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local src is replaced by local dest to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>7</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>7</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>7</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>7</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>7</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>7</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>7</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>7</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>7</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>7</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>7</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>7</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>7</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>copyArray</mutatedMethod><methodDescription>([D[DI)V</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>55</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to java/lang/System::arraycopy</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>153</lineNumber><mutator>MethodNameMutator_0</mutator><index>163</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method java.util.List.get(I)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>MethodNameMutator_1</mutator><index>82</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearObjectiveFunction.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImplTest$RealVectorTestImpl using ([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>MethodNameMutator_1</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.linear.RealVector.mapMultiply(D)Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImplTest$RealVectorTestImpl using ([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>MethodNameMutator_1</mutator><index>89</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearObjectiveFunction.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImplTest$RealVectorTestImpl using ([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>153</lineNumber><mutator>MethodNameMutator_1</mutator><index>163</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method java.util.List.get(I)Ljava/lang/Object; is replaced by an instantiation of type org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle using (DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>MethodNameMutator_1</mutator><index>177</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearConstraint.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImplTest$RealVectorTestImpl using ([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>126</lineNumber><mutator>MethodNameMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.SimplexTableau.getNormalizedConstraints()Ljava/util/List; is replaced by an instantiation of type org.apache.velocity.anakia.NodeList using (Lorg/jdom/Document;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>MethodNameMutator_2</mutator><index>82</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearObjectiveFunction.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.SparseRealVectorTest$SparseRealVectorTestImpl using ([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>MethodNameMutator_2</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.linear.RealVector.mapMultiply(D)Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.SparseRealVectorTest$SparseRealVectorTestImpl using ([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>MethodNameMutator_2</mutator><index>89</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearObjectiveFunction.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.SparseRealVectorTest$SparseRealVectorTestImpl using ([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>MethodNameMutator_2</mutator><index>177</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearConstraint.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.SparseRealVectorTest$SparseRealVectorTestImpl using ([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>126</lineNumber><mutator>MethodNameMutator_3</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.SimplexTableau.getNormalizedConstraints()Ljava/util/List; is replaced by an instantiation of type org.mudebug.prapr.reloc.commons.collections.CursorableLinkedList using ()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>MethodNameMutator_3</mutator><index>82</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearObjectiveFunction.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImpl using ([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>MethodNameMutator_3</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.linear.RealVector.mapMultiply(D)Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImpl using ([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>MethodNameMutator_3</mutator><index>89</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearObjectiveFunction.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImpl using ([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>153</lineNumber><mutator>MethodNameMutator_3</mutator><index>163</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method java.util.List.get(I)Ljava/lang/Object; is replaced by an instantiation of type org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle using (DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>MethodNameMutator_3</mutator><index>177</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearConstraint.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImpl using ([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>126</lineNumber><mutator>MethodNameMutator_6</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.SimplexTableau.getNormalizedConstraints()Ljava/util/List; is replaced by an instantiation of type org.apache.velocity.anakia.NodeList using (Lorg/jdom/Element;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>MethodNameMutator_7</mutator><index>82</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearObjectiveFunction.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImpl using (Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>MethodNameMutator_7</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.linear.RealVector.mapMultiply(D)Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImpl using (Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>MethodNameMutator_7</mutator><index>89</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearObjectiveFunction.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImpl using (Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>MethodNameMutator_7</mutator><index>177</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearConstraint.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImpl using (Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numDecisionVariables is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numSlackVariables is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>14</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numArtificialVariables is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>81</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>88</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>114</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>120</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>128</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to restrictToNonNegative is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>187</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to restrictToNonNegative is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>128</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to restrictToNonNegative is guarded using local maximize</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>187</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to restrictToNonNegative is guarded using local maximize</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numDecisionVariables is guarded using field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numSlackVariables is guarded using field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>14</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numArtificialVariables is guarded using field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>81</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded using field f</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>88</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded using field f</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>114</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded using field f</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>120</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded using field f</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>128</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to restrictToNonNegative is guarded using field restrictToNonNegative</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>187</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to restrictToNonNegative is guarded using field restrictToNonNegative</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumVariables()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numSlackVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumVariables()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumVariables()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numSlackVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>14</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numSlackVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>14</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getHeight()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numSlackVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getHeight()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>14</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getHeight()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getSlackVariableOffset()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numSlackVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getSlackVariableOffset()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>14</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getSlackVariableOffset()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to numDecisionVariables with an access to numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to numSlackVariables with an access to numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>14</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to numArtificialVariables with an access to numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>217</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to LEQ with an access to EQ</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>236</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced access to GEQ with an access to EQ</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>254</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to EQ with an access to LEQ</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>258</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to GEQ with an access to EQ</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to numDecisionVariables with an access to numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to numSlackVariables with an access to numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>14</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to numArtificialVariables with an access to numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>217</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to LEQ with an access to GEQ</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>236</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced access to GEQ with an access to LEQ</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>254</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to EQ with an access to GEQ</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>258</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to GEQ with an access to LEQ</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>128</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field restrictToNonNegative is replaced by access to local maximize</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>187</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field restrictToNonNegative is replaced by access to local maximize</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>32</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local height is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>33</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local width is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>65</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local zIndex is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>67</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local zIndex is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>98</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local zIndex is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>106</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local zIndex is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>108</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local width is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>155</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local i is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>162</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local i is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>170</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local i is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>180</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local row is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>205</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local row is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>207</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local width is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>241</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local row is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>245</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local slackVar is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>267</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local artificialVar is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>274</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local row is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>278</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local artificialVar is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>65</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local zIndex is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>67</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local zIndex is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>98</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local zIndex is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>106</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local zIndex is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>108</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local width is replaced by local zIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>155</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local i is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>162</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local i is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>170</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local i is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>180</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local row is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>205</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local row is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>207</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local width is replaced by local zIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>241</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local row is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>245</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local slackVar is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>267</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local artificialVar is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>274</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local row is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>278</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local artificialVar is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>155</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local i is replaced by local zIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>162</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local i is replaced by local zIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>170</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local i is replaced by local zIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>180</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local row is replaced by local zIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>205</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local row is replaced by local zIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>207</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local width is replaced by local slackVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>241</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local row is replaced by local zIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>245</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local slackVar is replaced by local zIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>267</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local artificialVar is replaced by local zIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>274</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local row is replaced by local zIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>278</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local artificialVar is replaced by local zIndex to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>155</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local i is replaced by local slackVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>162</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local i is replaced by local slackVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>170</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local i is replaced by local slackVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>180</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local row is replaced by local slackVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>205</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local row is replaced by local slackVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>207</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local width is replaced by local artificialVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>241</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local row is replaced by local slackVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>245</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local slackVar is replaced by local artificialVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>267</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local artificialVar is replaced by local slackVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>274</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local row is replaced by local slackVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>278</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local artificialVar is replaced by local slackVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>155</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local i is replaced by local artificialVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>162</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local i is replaced by local artificialVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>170</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local i is replaced by local artificialVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>180</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local row is replaced by local artificialVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>205</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local row is replaced by local artificialVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>207</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local width is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>241</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local row is replaced by local artificialVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>245</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local slackVar is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>267</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local artificialVar is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>274</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local row is replaced by local artificialVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>278</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local artificialVar is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>180</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local row is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>205</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local row is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>207</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local width is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>241</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local row is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>245</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local slackVar is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>267</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local artificialVar is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>274</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local row is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>278</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local artificialVar is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>32</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local height is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>33</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local width is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>65</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local zIndex is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>67</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local zIndex is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>68</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local maximize is replaced by access to field restrictToNonNegative</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>78</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local maximize is replaced by access to field restrictToNonNegative</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>98</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local zIndex is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>106</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local zIndex is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>108</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local width is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>111</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local maximize is replaced by access to field restrictToNonNegative</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>155</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local i is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>162</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local i is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>170</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local i is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>180</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local row is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>205</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local row is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>207</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local width is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>241</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local row is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>245</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local slackVar is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>267</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local artificialVar is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>274</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local row is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>278</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local artificialVar is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>32</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local height is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>33</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local width is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>65</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local zIndex is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>67</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local zIndex is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>98</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local zIndex is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>106</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local zIndex is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>108</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local width is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>155</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local i is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>162</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local i is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>170</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local i is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>180</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local row is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>205</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local row is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>207</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local width is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>241</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local row is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>245</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local slackVar is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>267</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local artificialVar is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>274</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local row is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>278</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local artificialVar is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>32</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local height is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>33</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local width is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>65</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local zIndex is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>67</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local zIndex is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>98</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local zIndex is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>106</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local zIndex is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>108</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local width is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>155</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local i is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>162</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local i is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>170</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local i is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>180</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local row is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>205</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local row is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>207</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local width is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>241</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local row is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>245</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to local slackVar is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>267</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local artificialVar is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>274</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local row is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>278</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local artificialVar is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>95</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to the local objectiveCoefficients is replaced a call objectiveCoefficients.copy()</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to size with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>39</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>53</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to mapMultiply with a call to mapAdd</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>96</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getData with a call to toArray</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>101</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>157</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to size with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>163</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>169</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>178</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getData with a call to toArray</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>244</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to getSlackVariableOffset with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>266</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>277</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>39</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>53</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to mapMultiply with a call to mapAddToSelf</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>101</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>169</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>244</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to getSlackVariableOffset with a call to getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>266</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>277</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>39</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>53</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to mapMultiply with a call to mapSubtract</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>101</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>169</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>244</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to getSlackVariableOffset with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>266</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>277</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>39</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>53</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to mapMultiply with a call to mapSubtractToSelf</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>101</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>169</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>244</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to getSlackVariableOffset with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>266</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>277</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>39</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>53</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to mapMultiply with a call to mapMultiplyToSelf</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>101</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>169</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>244</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to getSlackVariableOffset with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>266</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>277</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>39</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>53</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to mapMultiply with a call to mapDivide</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>101</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>169</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>244</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to getSlackVariableOffset with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>266</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>277</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>39</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>53</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to mapMultiply with a call to mapDivideToSelf</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>101</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>169</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>244</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to getSlackVariableOffset with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>266</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>277</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>39</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>53</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to mapMultiply with a call to mapPow</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>101</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>169</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>244</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to getSlackVariableOffset with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>266</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>277</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>39</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>53</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to mapMultiply with a call to mapPowToSelf</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>101</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>169</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>244</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to getSlackVariableOffset with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>266</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>277</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>39</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>53</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to mapMultiply with a call to append</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>101</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>169</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>244</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to getSlackVariableOffset with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>266</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>277</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNormalizedConstraints()Ljava/util/List; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to java.util.List::size()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>39</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>53</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>82</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.LinearObjectiveFunction::getCoefficients()Lorg/apache/commons/math/linear/RealVector; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.linear.RealVector::mapMultiply(D)Lorg/apache/commons/math/linear/RealVector; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>89</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.LinearObjectiveFunction::getCoefficients()Lorg/apache/commons/math/linear/RealVector; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>96</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.linear.RealVector::getData()[D is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>101</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>115</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.LinearObjectiveFunction::getConstantTerm()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>121</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.LinearObjectiveFunction::getConstantTerm()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>157</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to java.util.List::size()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>163</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to java.util.List::get(I)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>169</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>177</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.LinearConstraint::getCoefficients()Lorg/apache/commons/math/linear/RealVector; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>178</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.linear.RealVector::getData()[D is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>211</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.LinearConstraint::getValue()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>216</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.LinearConstraint::getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>235</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to org.apache.commons.math.optimization.linear.LinearConstraint::getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>244</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getSlackVariableOffset()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>253</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.LinearConstraint::getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>257</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.LinearConstraint::getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>266</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getArtificialVariableOffset()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>277</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getArtificialVariableOffset()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numDecisionVariables is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numSlackVariables is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>14</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numArtificialVariables is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>81</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>88</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>114</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>120</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>128</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to restrictToNonNegative is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>187</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to restrictToNonNegative is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>81</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>88</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>114</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>120</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>128</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to restrictToNonNegative is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>187</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to restrictToNonNegative is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNormalizedConstraints()Ljava/util/List; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to size()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>39</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>53</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>82</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getCoefficients()Lorg/apache/commons/math/linear/RealVector; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to mapMultiply(D)Lorg/apache/commons/math/linear/RealVector; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>89</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getCoefficients()Lorg/apache/commons/math/linear/RealVector; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>96</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getData()[D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>101</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>102</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to copyArray([D[DI)V is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>115</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstantTerm()D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>121</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstantTerm()D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>157</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to size()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>163</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to get(I)Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>169</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>177</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getCoefficients()Lorg/apache/commons/math/linear/RealVector; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>178</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getData()[D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>183</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to copyArray([D[DI)V is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>211</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getValue()D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>216</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>235</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>244</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to getSlackVariableOffset()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>253</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>257</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>266</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getArtificialVariableOffset()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>277</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getArtificialVariableOffset()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>39</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>53</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>82</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getCoefficients()Lorg/apache/commons/math/linear/RealVector; is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to mapMultiply(D)Lorg/apache/commons/math/linear/RealVector; is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>89</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getCoefficients()Lorg/apache/commons/math/linear/RealVector; is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>96</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getData()[D is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>101</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>102</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to copyArray([D[DI)V is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>115</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstantTerm()D is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>121</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getConstantTerm()D is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>157</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to size()I is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>163</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to get(I)Ljava/lang/Object; is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>169</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>177</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getCoefficients()Lorg/apache/commons/math/linear/RealVector; is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>178</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getData()[D is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>183</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to copyArray([D[DI)V is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>211</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getValue()D is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>216</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>235</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>244</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>the call to getSlackVariableOffset()I is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>253</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>257</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>266</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getArtificialVariableOffset()I is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>277</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getArtificialVariableOffset()I is guarded returning local matrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>102</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::copyArray([D[DI)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>183</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::copyArray([D[DI)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>51ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>158</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>246</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>279</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>285</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>48</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Substituted -1.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>54</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>56</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>59</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>73</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted -1.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>83</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted -1.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>109</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>118</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted -1.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>144</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>148</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>152</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>182</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>208</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>248</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Substituted -1.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>263</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>269</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>281</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>209</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>247</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>268</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>280</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>129</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>158</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>188</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>218</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>237</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>255</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>259</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNormalizedConstraints</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to java/util/List::size</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>39</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>53</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>82</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearObjectiveFunction::getCoefficients</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/linear/RealVector::mapMultiply</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>89</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearObjectiveFunction::getCoefficients</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>96</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/linear/RealVector::getData</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>101</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>115</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearObjectiveFunction::getConstantTerm</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>121</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearObjectiveFunction::getConstantTerm</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>157</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to java/util/List::size</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>163</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to java/util/List::get</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>113ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>169</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>177</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearConstraint::getCoefficients</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>178</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/linear/RealVector::getData</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>211</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearConstraint::getValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>216</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearConstraint::getRelationship</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>235</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearConstraint::getRelationship</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>244</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>253</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearConstraint::getRelationship</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>257</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearConstraint::getRelationship</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>266</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>277</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>290</index><block>23</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced return value with null for org/apache/commons/math/optimization/linear/SimplexTableau::createTableau</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>41</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>55</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>69</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>79</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>112</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>129</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>188</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>218</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>237</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>255</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>259</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>41</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>55</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>69</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>79</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>54ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>112</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>129</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>188</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>218</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>237</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>255</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>259</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>158</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>158</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>290</index><block>23</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>mutated return of Object value for org/apache/commons/math/optimization/linear/SimplexTableau::createTableau to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>102</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::copyArray</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>183</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::copyArray</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>84</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to org/apache/commons/math/linear/RealVector::mapMultiply with receiver</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>246</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>createTableau</mutatedMethod><methodDescription>(Z)[[D</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>279</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;(II)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;(II)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;(II)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;(II)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;(II)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;(II)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;([[D)V with a call to &#60;init&#62;([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>48</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to numArtificialVariables is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>14</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to numArtificialVariables is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>48</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to numArtificialVariables is guarded using field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>14</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to numArtificialVariables is guarded using field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>48</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumVariables()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumVariables()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>48</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>14</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>48</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>14</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>48</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getHeight()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>14</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getHeight()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>48</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getSlackVariableOffset()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>14</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getSlackVariableOffset()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>48</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced access to numArtificialVariables with an access to numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>14</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced access to numArtificialVariables with an access to numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>48</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced access to numArtificialVariables with an access to numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>14</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced access to numArtificialVariables with an access to numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>101</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to field numArtificialVariables is replaced by access to local width</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>101</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to field numArtificialVariables is replaced by access to local height</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>28</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local height is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local width is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local i is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local height is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local j is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>46</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local width is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>53</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local i is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>55</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local j is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>57</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local i is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>60</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local j is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>72</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local i is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>74</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local width is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>78</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local i is replaced by local width to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>37</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local i is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>38</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local height is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>45</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local j is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>46</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local width is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>53</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local i is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>55</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local j is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>57</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local i is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>60</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local j is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>72</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local i is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>74</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local width is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>78</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local i is replaced by local height to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>45</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>46</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local width is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>53</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>55</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>57</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>60</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>28</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local height is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>29</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local width is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>37</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local i is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local height is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>45</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local j is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>46</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local width is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>53</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local i is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>55</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local j is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>57</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local i is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>60</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local j is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>72</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local i is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>74</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local width is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>78</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local i is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>28</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local height is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>29</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local width is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>37</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local i is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local height is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>45</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local j is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>46</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local width is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>53</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local i is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>55</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local j is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>57</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local i is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>60</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local j is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>72</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local i is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>74</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local width is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>78</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local i is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>28</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local height is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>29</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local width is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>37</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local i is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>38</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local height is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>45</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local j is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>46</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local width is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>53</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local i is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>55</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local j is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>57</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local i is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>60</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local j is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>72</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local i is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>74</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local width is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>78</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>access to local i is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>12</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getWidth with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>22</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getHeight with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>82</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getRhsOffset with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>12</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getWidth with a call to getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>22</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getHeight with a call to getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>82</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getRhsOffset with a call to getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>12</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getWidth with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>22</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getHeight with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>82</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getRhsOffset with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>12</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getWidth with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>22</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getHeight with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>173ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>82</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getRhsOffset with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>12</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getWidth with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>22</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getHeight with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>82</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getRhsOffset with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>12</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getWidth with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>22</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getHeight with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>82</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getRhsOffset with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>12</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getWidth with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>22</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getHeight with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>82</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getRhsOffset with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>12</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getWidth with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>22</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getHeight with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>82</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getRhsOffset with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>12</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getWidth with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>22</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getHeight with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>82</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getRhsOffset with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>12</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getWidth with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>22</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getHeight with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>82</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getRhsOffset with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>12</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>22</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getHeight()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>63</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>82</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getRhsOffset()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>83</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>48</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to numArtificialVariables is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>14</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to numArtificialVariables is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>48</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to numArtificialVariables is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>14</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to numArtificialVariables is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>48</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to numArtificialVariables is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>14</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to numArtificialVariables is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getWidth()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>22</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getHeight()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>63</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>82</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getRhsOffset()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>83</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>12</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getWidth()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>22</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getHeight()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>63</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>82</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getRhsOffset()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>83</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>12</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getWidth()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>22</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getHeight()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>63</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>82</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getRhsOffset()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>83</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>12</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getWidth()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>22</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getHeight()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>63</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>82</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getRhsOffset()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>83</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>12</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getWidth()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>22</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getHeight()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>63</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>82</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getRhsOffset()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>83</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>95</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/linear/RealMatrixImpl::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>67</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>87</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>42</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>58</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>61</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>75</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>79</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>100</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>48</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>63</index><block>52</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>82</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>83</index><block>53</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>48</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>48</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>39</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>49</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>39</index><block>50</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>49</index><block>51</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>96</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Removed assignment to member variable tableau</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>101</index><block>54</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Removed assignment to member variable numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>discardArtificialVariables</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>87</index><block>53</block><killingTests/><suspValue>0.31622776601683794</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>13</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to tableau is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>17</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to tableau is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>13</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to tableau is guarded using field tableau</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>17</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to tableau is guarded using field tableau</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local j is replaced by local dividendRow to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local dividendRow is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>15</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local j is replaced by local dividendRow to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local dividendRow is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local j is replaced by local dividendRow to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local j is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local dividendRow is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local j is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local dividendRow is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>19</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local j is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>21</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local divisor is replaced by access to field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local j is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>14</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local dividendRow is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>15</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local j is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local dividendRow is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>19</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local j is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local j is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>14</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local dividendRow is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>15</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local j is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>18</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local dividendRow is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>19</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local j is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>8</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getWidth with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>23</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to setEntry with a call to addToEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>8</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getWidth with a call to getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>23</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to setEntry with a call to multiplyEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>8</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getWidth with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>8</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getWidth with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>8</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getWidth with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>8</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getWidth with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>8</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getWidth with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>8</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getWidth with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>8</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getWidth with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>8</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getWidth with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>8</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>20</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.linear.RealMatrix::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>13</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to tableau is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>17</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to tableau is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>13</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to tableau is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>17</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to tableau is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>13</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to tableau is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>17</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to tableau is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>8</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getWidth()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>20</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>23</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to setEntry(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>8</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getWidth()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>20</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>23</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to setEntry(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>8</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getWidth()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>20</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>23</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to setEntry(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>8</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getWidth()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>20</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>23</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to setEntry(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>8</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getWidth()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>20</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>23</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to setEntry(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>23</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.linear.RealMatrix::setEntry(IID)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/linear/RealMatrix::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>9</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>9</index><block>69</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>divideRow</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>70</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/linear/RealMatrix::setEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to numDecisionVariables is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to numSlackVariables is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to numDecisionVariables is guarded using field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to numSlackVariables is guarded using field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>6</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumVariables()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numSlackVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumVariables()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>6</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numSlackVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>6</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>9</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numSlackVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>6</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getHeight()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>9</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numSlackVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getHeight()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>6</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getSlackVariableOffset()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>9</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numSlackVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getSlackVariableOffset()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>6</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced access to numDecisionVariables with an access to numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced access to numSlackVariables with an access to numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>6</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced access to numDecisionVariables with an access to numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>9</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced access to numSlackVariables with an access to numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to numDecisionVariables is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to numSlackVariables is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>6</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to numDecisionVariables is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to numSlackVariables is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>11</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getArtificialVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>79</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>MethodNameMutator_0</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to factory method java.lang.Integer.valueOf(I)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>MethodNameMutator_4</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to factory method java.lang.Integer.valueOf(I)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>101ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>23</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to epsilon is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>23</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to epsilon is guarded using field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>11</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local i is replaced by local col to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local i is replaced by local col to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local col is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>32</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local i is replaced by local col to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local i is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local i is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>19</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local col is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>32</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local i is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local i is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local i is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>19</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local col is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>32</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local i is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local i is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>18</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local i is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>19</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local col is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>32</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local i is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>8</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getHeight with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>8</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getHeight with a call to getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>8</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getHeight with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>8</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getHeight with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>8</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getHeight with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>8</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getHeight with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>8</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getHeight with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>8</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getHeight with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>8</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getHeight with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>8</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getHeight with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>8</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getHeight()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>20</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>23</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to epsilon is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>143ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>23</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to epsilon is guarded returning local row</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>8</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getHeight()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>20</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getEntry(II)D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>8</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning local row</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getHeight()I is guarded returning local row</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>20</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getEntry(II)D is guarded returning local row</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>39</index><block>45</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced Integer return value with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getBasicRow</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>47</index><block>47</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced Integer return value with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getBasicRow</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>43</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::equals</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>44</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to java/lang/Integer::valueOf</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>25</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>29</index><block>43</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>25</index><block>42</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>29</index><block>43</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>14</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>14</index><block>41</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>45</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>mutated return of Object value for org/apache/commons/math/optimization/linear/SimplexTableau::getBasicRow to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getBasicRow</mutatedMethod><methodDescription>(I)Ljava/lang/Integer;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>47</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>mutated return of Object value for org/apache/commons/math/optimization/linear/SimplexTableau::getBasicRow to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>34</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to constraints is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>34</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to constraints is guarded using field constraints</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>240</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>33</index><block>37</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local count is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>240</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>33</index><block>37</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local count is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>240</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>33</index><block>37</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local count is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>23</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to the local relationship is replaced a call relationship.oppositeRelationship()</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>22</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.LinearConstraint::getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>34</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to constraints is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>8</index><block>34</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to constraints is guarded returning local count</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>8</index><block>34</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to constraints is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>22</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>22</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded returning local count</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>22</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>22</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded returning field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>27</index><block>36</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>34</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearConstraint::getRelationship</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>34</index><block>37</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getConstraintTypeCounts</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>24</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>24</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>37</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getConstraintTypeCounts</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/Relationship;)I</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>27</index><block>36</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded using field tableau</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local row is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local column is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local row is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local column is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>5</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local row is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local column is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>5</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local row is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local column is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to org.apache.commons.math.linear.RealMatrix::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded returning field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getEntry(II)D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>7</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getEntry(II)D is guarded returning field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math/linear/RealMatrix::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>77</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>76</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>76</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded using field tableau</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>76</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to org.apache.commons.math.linear.RealMatrix::getRowDimension()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>76</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>76</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>76</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getRowDimension()I is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>76</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getRowDimension()I is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>393</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>76</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getRowDimension()I is guarded returning field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>76</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math/linear/RealMatrix::getRowDimension</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>6</index><block>76</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getHeight</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>76</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>200</lineNumber><mutator>MethodNameMutator_0</mutator><index>26</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.SimplexTableau.normalize(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint; is replaced by an instantiation of type org.apache.commons.math.optimization.linear.LinearConstraint using ([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>200</lineNumber><mutator>MethodNameMutator_4</mutator><index>26</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.SimplexTableau.normalize(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint; is replaced by an instantiation of type org.apache.commons.math.optimization.linear.LinearConstraint using (Lorg/apache/commons/math/linear/RealVector;DLorg/apache/commons/math/optimization/linear/Relationship;Lorg/apache/commons/math/linear/RealVector;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>5</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>5</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>5</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>5</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>5</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>5</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to constraints is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to constraints is guarded using field constraints</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>27</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to add with a call to contains</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>27</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to add with a call to remove</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>27</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to add with a call to equals</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>26</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::normalize(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>27</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to java.util.List::add(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to constraints is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to constraints is guarded returning local normalized</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>26</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to normalize(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>27</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>26</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to normalize(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint; is guarded returning local normalized</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>200</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>27</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning local normalized</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>26</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to org/apache/commons/math/optimization/linear/SimplexTableau::normalize with argument</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to java/util/ArrayList::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>35</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced return value with Collections.emptyList for org/apache/commons/math/optimization/linear/SimplexTableau::getNormalizedConstraints</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::normalize</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to java/util/List::add</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNormalizedConstraints</mutatedMethod><methodDescription>()Ljava/util/List;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>mutated return of Object value for org/apache/commons/math/optimization/linear/SimplexTableau::getNormalizedConstraints to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumArtificialVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>84</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to numArtificialVariables is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumArtificialVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>84</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to numArtificialVariables is guarded using field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumArtificialVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>84</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumVariables()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumArtificialVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>84</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumArtificialVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>84</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumArtificialVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>84</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getHeight()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumArtificialVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>84</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getSlackVariableOffset()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumArtificialVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>84</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced access to numArtificialVariables with an access to numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumArtificialVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>84</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced access to numArtificialVariables with an access to numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumArtificialVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>84</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to numArtificialVariables is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumArtificialVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>475</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>84</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to numArtificialVariables is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumArtificialVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>84</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumArtificialVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>84</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numArtificialVariables is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numArtificialVariables is guarded using field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumVariables()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getHeight()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getSlackVariableOffset()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to numArtificialVariables with an access to numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to numArtificialVariables with an access to numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numArtificialVariables is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numArtificialVariables is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>32</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>33</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>11</index><block>33</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumObjectiveFunctions</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>33</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>MethodNameMutator_1</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearObjectiveFunction.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImplTest$RealVectorTestImpl using ([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>MethodNameMutator_2</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearObjectiveFunction.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.SparseRealVectorTest$SparseRealVectorTestImpl using ([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>MethodNameMutator_3</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearObjectiveFunction.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImpl using ([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>MethodNameMutator_7</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearObjectiveFunction.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImpl using (Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded using field f</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.LinearObjectiveFunction::getCoefficients()Lorg/apache/commons/math/linear/RealVector; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.linear.RealVector::getDimension()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to f is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getCoefficients()Lorg/apache/commons/math/linear/RealVector; is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getDimension()I is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getCoefficients()Lorg/apache/commons/math/linear/RealVector; is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getDimension()I is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getCoefficients()Lorg/apache/commons/math/linear/RealVector; is guarded returning field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>6</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getDimension()I is guarded returning field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearObjectiveFunction::getCoefficients</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/linear/RealVector::getDimension</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getNumVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>81</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to restrictToNonNegative is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>7</index><block>82</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to numDecisionVariables is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>83</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to numDecisionVariables is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>81</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to restrictToNonNegative is guarded using field restrictToNonNegative</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>7</index><block>82</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to numDecisionVariables is guarded using field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>83</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to numDecisionVariables is guarded using field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>7</index><block>82</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumVariables()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>83</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumVariables()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>7</index><block>82</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>11</index><block>83</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>7</index><block>82</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>11</index><block>83</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>7</index><block>82</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getHeight()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>11</index><block>83</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getHeight()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>7</index><block>82</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getSlackVariableOffset()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>11</index><block>83</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getSlackVariableOffset()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>7</index><block>82</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced access to numDecisionVariables with an access to numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>83</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced access to numDecisionVariables with an access to numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>7</index><block>82</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced access to numDecisionVariables with an access to numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>11</index><block>83</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced access to numDecisionVariables with an access to numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>81</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to restrictToNonNegative is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>7</index><block>82</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to numDecisionVariables is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>83</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to numDecisionVariables is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>81</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to restrictToNonNegative is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>7</index><block>82</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to numDecisionVariables is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>83</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to numDecisionVariables is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>83</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>83</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>81</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>15</index><block>83</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>81</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>81</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getOriginalNumDecisionVariables</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>83</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to getWidth with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to getWidth with a call to getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to getWidth with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to getWidth with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>4</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to getWidth with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>4</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to getWidth with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>4</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to getWidth with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>4</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to getWidth with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>4</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to getWidth with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>4</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to getWidth with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>the call to getWidth()I is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>4</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>the call to getWidth()I is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>4</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>the call to getWidth()I is guarded returning field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getRhsOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>80</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to numDecisionVariables is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to numDecisionVariables is guarded using field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>6</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumVariables()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>6</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>6</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>6</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getHeight()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>6</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numDecisionVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getSlackVariableOffset()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>6</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced access to numDecisionVariables with an access to numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>6</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced access to numDecisionVariables with an access to numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to numDecisionVariables is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>6</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to numDecisionVariables is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>8</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSlackVariableOffset</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>78</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>MethodNameMutator_0</mutator><index>15</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.SimplexTableau.getBasicRow(I)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>MethodNameMutator_0</mutator><index>48</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.SimplexTableau.getBasicRow(I)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>MethodNameMutator_4</mutator><index>15</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.SimplexTableau.getBasicRow(I)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>MethodNameMutator_4</mutator><index>48</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.SimplexTableau.getBasicRow(I)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>125</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getValue([D)D with a call to getValue(Lorg/apache/commons/math/linear/RealVector;)D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>126</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>125</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getValue([D)D with a call to getValue(Lorg/apache/commons/math/linear/RealVector;)D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>126</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>125</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getValue([D)D with a call to getValue(Lorg/apache/commons/math/linear/RealVector;)D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>126</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>125</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getValue([D)D with a call to getValue(Lorg/apache/commons/math/linear/RealVector;)D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>126</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>125</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getValue([D)D with a call to getValue(Lorg/apache/commons/math/linear/RealVector;)D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>126</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>125</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getValue([D)D with a call to getValue(Lorg/apache/commons/math/linear/RealVector;)D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>126</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to &#60;init&#62;([DD)V with a call to &#60;init&#62;([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>67</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to restrictToNonNegative is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>95</index><block>65</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to tableau is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>123</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to f is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>67</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to restrictToNonNegative is guarded using field restrictToNonNegative</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>95</index><block>65</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to tableau is guarded using field tableau</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>123</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to f is guarded using field f</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>86</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>89</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>98</index><block>65</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>53ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>80ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>339</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>106</index><block>66</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>329</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>37</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>46</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>53</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>72</index><block>63</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local mostNegative is replaced by access to field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>86</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local j is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>18ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>51ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>88ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>89</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>98</index><block>65</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local j is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>339</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>106</index><block>66</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local i is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>329</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>37</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>46</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>53</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>86</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local j is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>89</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>98</index><block>65</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local j is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>339</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>106</index><block>66</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local i is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>329</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>37</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>46</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>53</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>86</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local j is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>89</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local i is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>51ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>98</index><block>65</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local j is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>58ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>339</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>106</index><block>66</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>access to local i is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>74ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>11</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>26</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to intValue with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>28</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>45</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>61</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to intValue with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>63</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>83</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>18ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>48ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>88</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>97</index><block>65</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to intValue with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>11</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>13</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>28</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>45</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>63</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>83</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>69ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>88</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>11</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>13</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>28</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>45</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>63</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>83</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>45ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>88</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>11</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>13</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>28</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>45</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>63</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>83</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>51ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>88</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>4</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>11</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>13</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>28</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>45</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>63</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>83</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>48ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>88</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>4</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>11</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>13</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>28</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>45</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>63</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>83</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>66ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>88</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>4</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>11</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>13</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>28</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>45</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>63</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>83</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>46ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>81ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>88</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>4</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>11</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>13</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>28</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>45</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>63</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>83</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>56ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>93ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>88</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>4</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>11</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>13</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>28</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>45</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>63</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>83</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>58ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>96ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>88</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>4</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>11</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>13</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getOriginalNumDecisionVariables with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>28</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>45</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>63</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getRhsOffset with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>83</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>88</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getOriginalNumDecisionVariables()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>11</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getOriginalNumDecisionVariables()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>15</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getBasicRow(I)Ljava/lang/Integer; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>26</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to java.lang.Integer::intValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>28</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getRhsOffset()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>29</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>45</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>48</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getBasicRow(I)Ljava/lang/Integer; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>61</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to java.lang.Integer::intValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>63</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getRhsOffset()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>64</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>83</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>88</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>97</index><block>65</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to java.lang.Integer::intValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>99</index><block>65</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math.linear.RealMatrix::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>125</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math.optimization.linear.LinearObjectiveFunction::getValue([D)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>67</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to restrictToNonNegative is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>95</index><block>65</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to tableau is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>123</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to f is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to getOriginalNumDecisionVariables()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to getOriginalNumDecisionVariables()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>15</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to getBasicRow(I)Ljava/lang/Integer; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>26</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to intValue()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>28</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to getRhsOffset()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>29</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to getEntry(II)D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>45</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>48</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to getBasicRow(I)Ljava/lang/Integer; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>61</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to intValue()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>63</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to getRhsOffset()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>64</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to getEntry(II)D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>83</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>88</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>97</index><block>65</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to intValue()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>99</index><block>65</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to getEntry(II)D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>125</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to getValue([D)D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>91</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>126</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math/optimization/RealPointValuePair::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>111</index><block>66</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>115</index><block>67</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>57</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>56</index><block>60</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>69</index><block>62</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>100</index><block>65</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>74ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>107</index><block>66</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>63</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>98ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>131ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>63</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>43ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>65</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getBasicRow</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to java/lang/Integer::intValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>45</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>48</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getBasicRow</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>61</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to java/lang/Integer::intValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>63</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>64</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>83</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>88</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>97</index><block>65</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to java/lang/Integer::intValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>99</index><block>65</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math/linear/RealMatrix::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>42ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>70ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>125</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearObjectiveFunction::getValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>127</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced return value with null for org/apache/commons/math/optimization/linear/SimplexTableau::getSolution</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>55</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>68</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>79</index><block>63</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>0ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>56ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>77ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>102</index><block>65</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>55ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>56</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>55</index><block>59</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>68</index><block>61</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>79</index><block>63</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>102</index><block>65</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>40</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>91</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>60ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>40</index><block>58</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>91</index><block>64</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>127</index><block>68</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>mutated return of Object value for org/apache/commons/math/optimization/linear/SimplexTableau::getSolution to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getSolution</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>111</index><block>66</block><killingTests/><suspValue>0.3333333333333333</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>75</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>75</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded using field tableau</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>75</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to org.apache.commons.math.linear.RealMatrix::getColumnDimension()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>75</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>75</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>75</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getColumnDimension()I is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>75</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getColumnDimension()I is guarded returning field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>75</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getColumnDimension()I is guarded returning field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>75</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math/linear/RealMatrix::getColumnDimension</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>6</index><block>75</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced int return with 0 for org/apache/commons/math/optimization/linear/SimplexTableau::getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>getWidth</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>75</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>MethodNameMutator_0</mutator><index>17</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.SimplexTableau.getBasicRow(I)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>MethodNameMutator_4</mutator><index>17</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.SimplexTableau.getBasicRow(I)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numArtificialVariables is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>8</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numArtificialVariables is guarded using local artificialVar</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numArtificialVariables is guarded using field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>8</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumVariables()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>8</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>8</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>8</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getHeight()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>8</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.SimplexTableau.numArtificialVariables is replaced by the call to org.apache.commons.math.optimization.linear.SimplexTableau::getSlackVariableOffset()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>8</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to numArtificialVariables with an access to numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>8</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced access to numArtificialVariables with an access to numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>8</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field numArtificialVariables is replaced by access to local artificialVar</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local row is replaced by local artificialVar to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local artificialVar is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local artificialVar is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>24</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local row is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local artificialVar is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>15</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local artificialVar is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>24</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local row is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local artificialVar is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>15</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local artificialVar is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>24</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local row is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>14</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>18</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to intValue with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>26</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to subtractRow with a call to setEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>14</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>14</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>14</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>14</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>14</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>14</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>14</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>14</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>14</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to getArtificialVariableOffset with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getArtificialVariableOffset()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>17</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getBasicRow(I)Ljava/lang/Integer; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>18</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to java.lang.Integer::intValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numArtificialVariables is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>8</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numArtificialVariables is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>8</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to numArtificialVariables is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getArtificialVariableOffset()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>17</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getBasicRow(I)Ljava/lang/Integer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>18</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>26</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to subtractRow(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>14</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getArtificialVariableOffset()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>17</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getBasicRow(I)Ljava/lang/Integer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>18</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>26</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to subtractRow(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>14</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getArtificialVariableOffset()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>17</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getBasicRow(I)Ljava/lang/Integer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>18</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>26</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to subtractRow(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>14</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getArtificialVariableOffset()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>17</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getBasicRow(I)Ljava/lang/Integer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>18</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>26</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to subtractRow(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>14</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getArtificialVariableOffset()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>17</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to getBasicRow(I)Ljava/lang/Integer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>18</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>26</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to subtractRow(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>250</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>26</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::subtractRow(IID)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>29</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getBasicRow</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed call to java/lang/Integer::intValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>9</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>9</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>initialize</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>39</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::subtractRow</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>MethodNameMutator_1</mutator><index>30</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearConstraint.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImplTest$RealVectorTestImpl using ([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>MethodNameMutator_2</mutator><index>30</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearConstraint.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.SparseRealVectorTest$SparseRealVectorTestImpl using ([D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>MethodNameMutator_3</mutator><index>30</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearConstraint.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImpl using ([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>MethodNameMutator_7</mutator><index>30</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.LinearConstraint.getCoefficients()Lorg/apache/commons/math/linear/RealVector; is replaced by an instantiation of type org.apache.commons.math.linear.RealVectorImpl using (Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;DLorg/apache/commons/math/optimization/linear/Relationship;Lorg/apache/commons/math/linear/RealVector;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;DLorg/apache/commons/math/optimization/linear/Relationship;Lorg/apache/commons/math/linear/RealVector;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;DLorg/apache/commons/math/optimization/linear/Relationship;Lorg/apache/commons/math/linear/RealVector;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DDLorg/apache/commons/math/optimization/linear/Relationship;[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DDLorg/apache/commons/math/optimization/linear/Relationship;[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DDLorg/apache/commons/math/optimization/linear/Relationship;[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DDLorg/apache/commons/math/optimization/linear/Relationship;[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DDLorg/apache/commons/math/optimization/linear/Relationship;[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DDLorg/apache/commons/math/optimization/linear/Relationship;[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;DLorg/apache/commons/math/optimization/linear/Relationship;Lorg/apache/commons/math/linear/RealVector;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;DLorg/apache/commons/math/optimization/linear/Relationship;Lorg/apache/commons/math/linear/RealVector;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;DLorg/apache/commons/math/optimization/linear/Relationship;Lorg/apache/commons/math/linear/RealVector;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.LinearConstraint::getValue()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>30</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.LinearConstraint::getCoefficients()Lorg/apache/commons/math/linear/RealVector; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>32</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.LinearConstraint::getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>34</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to org.apache.commons.math.optimization.linear.LinearConstraint::getValue()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getValue()D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>30</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getCoefficients()Lorg/apache/commons/math/linear/RealVector; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>32</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>34</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getValue()D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>4</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getValue()D is guarded returning local constraint</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>30</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getCoefficients()Lorg/apache/commons/math/linear/RealVector; is guarded returning local constraint</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>32</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship; is guarded returning local constraint</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>34</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the call to getValue()D is guarded returning local constraint</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>35</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearConstraint::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearConstraint::getValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearConstraint::getCoefficients</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearConstraint::getRelationship</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/optimization/linear/LinearConstraint::getValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>36</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced return value with null for org/apache/commons/math/optimization/linear/SimplexTableau::normalize</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>normalize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearConstraint;)Lorg/apache/commons/math/optimization/linear/LinearConstraint;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>mutated return of Object value for org/apache/commons/math/optimization/linear/SimplexTableau::normalize to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>13</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>17</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>23</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>13</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded using field tableau</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>17</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded using field tableau</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>23</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded using field tableau</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local j is replaced by local minuendRow to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local minuendRow is replaced by local subtrahendRow to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>15</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local j is replaced by local minuendRow to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local minuendRow is replaced by local subtrahendRow to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local j is replaced by local minuendRow to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local subtrahendRow is replaced by local minuendRow to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>25</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local j is replaced by local minuendRow to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>6</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local j is replaced by local subtrahendRow to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>14</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local minuendRow is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>15</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local j is replaced by local subtrahendRow to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>18</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local minuendRow is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>19</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local j is replaced by local subtrahendRow to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>24</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local subtrahendRow is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>25</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local j is replaced by local subtrahendRow to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local j is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local minuendRow is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local j is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local minuendRow is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>19</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local j is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>21</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local multiple is replaced by access to field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>24</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local subtrahendRow is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>25</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local j is replaced by access to field numDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local j is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>14</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local minuendRow is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>15</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local j is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local minuendRow is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>19</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local j is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>24</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local subtrahendRow is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>25</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local j is replaced by access to field numSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local j is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>14</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local minuendRow is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>15</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local j is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>18</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local minuendRow is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>19</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local j is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>24</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local subtrahendRow is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>25</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local j is replaced by access to field numArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>8</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getWidth with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>29</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to setEntry with a call to addToEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>8</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getWidth with a call to getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>29</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to setEntry with a call to multiplyEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>8</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getWidth with a call to getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>8</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getWidth with a call to getSlackVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>8</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getWidth with a call to getArtificialVariableOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>8</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getWidth with a call to getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>8</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getWidth with a call to getNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>8</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getWidth with a call to getOriginalNumDecisionVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>8</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getWidth with a call to getNumSlackVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>8</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getWidth with a call to getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>8</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>20</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to org.apache.commons.math.linear.RealMatrix::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>26</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to org.apache.commons.math.linear.RealMatrix::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>13</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>17</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>23</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>13</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>17</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>23</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>13</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>17</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>23</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the access to tableau is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>8</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getWidth()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>20</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>26</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>29</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to setEntry(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>8</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getWidth()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>20</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>26</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>29</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to setEntry(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>8</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getWidth()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>20</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>26</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>29</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to setEntry(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>8</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getWidth()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>20</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>26</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>29</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to setEntry(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>8</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getWidth()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>20</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>26</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>29</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to setEntry(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>29</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to org.apache.commons.math.linear.RealMatrix::setEntry(IID)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math/linear/RealMatrix::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math/linear/RealMatrix::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>9</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>9</index><block>72</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexTableau.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexTableau</mutatedClass><mutatedMethod>subtractRow</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>73</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math/linear/RealMatrix::setEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>42</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Substituted 1.0E-6 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to field epsilon is replaced by access to local epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Removed assignment to member variable epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>104</lineNumber><mutator>MethodNameMutator_0</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.SimplexSolver.getPivotColumn(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>105</lineNumber><mutator>MethodNameMutator_0</mutator><index>17</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.SimplexSolver.getPivotRow(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>104</lineNumber><mutator>MethodNameMutator_4</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.SimplexSolver.getPivotColumn(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>105</lineNumber><mutator>MethodNameMutator_4</mutator><index>17</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.SimplexSolver.getPivotRow(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>106</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>21</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local pivotRow is replaced by local pivotCol to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>32</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local pivotRow is replaced by local pivotCol to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>34</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local pivotCol is replaced by local pivotRow to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>41</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local pivotRow is replaced by local pivotCol to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>57</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local pivotRow is replaced by local pivotCol to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>64</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local pivotCol is replaced by local pivotRow to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>72</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local pivotRow is replaced by local pivotCol to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>74</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local multiplier is replaced by local pivotVal to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>43</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local pivotVal is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>74</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local multiplier is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>43</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local pivotVal is replaced by access to field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>74</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local multiplier is replaced by access to field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>15</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to intValue with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>33</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to intValue with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>35</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to intValue with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>42</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to intValue with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>52</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getHeight with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>58</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to intValue with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>65</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to intValue with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>73</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to intValue with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>52</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getHeight with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>140ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexSolver::getPivotColumn(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>15</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to java.lang.Integer::intValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>17</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexSolver::getPivotRow(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>33</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to java.lang.Integer::intValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>35</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to java.lang.Integer::intValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>36</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>42</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to java.lang.Integer::intValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>52</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getHeight()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>58</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to java.lang.Integer::intValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>65</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to java.lang.Integer::intValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>66</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>73</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to java.lang.Integer::intValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to incrementIterationsCounter()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getPivotColumn(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>15</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>17</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getPivotRow(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>33</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>35</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>36</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>42</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>44</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to divideRow(ID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>52</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getHeight()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>58</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>65</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>66</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>73</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>75</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to subtractRow(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to incrementIterationsCounter()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getPivotColumn(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>15</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>17</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getPivotRow(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>33</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>35</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>36</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>42</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>44</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to divideRow(ID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>52</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getHeight()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>58</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>65</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>66</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>73</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>75</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to subtractRow(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to incrementIterationsCounter()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getPivotColumn(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>15</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>17</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getPivotRow(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>33</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>35</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>36</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>42</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>44</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to divideRow(ID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>52</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getHeight()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>58</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>65</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>66</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>73</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>75</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to subtractRow(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to incrementIterationsCounter()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getPivotColumn(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>15</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>17</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getPivotRow(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>33</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>35</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>36</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>42</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>44</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to divideRow(ID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>52</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getHeight()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>58</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>115ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>65</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>66</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>73</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>75</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to subtractRow(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to incrementIterationsCounter()V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getPivotColumn(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>15</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>17</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getPivotRow(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>33</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>35</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>36</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>42</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>44</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to divideRow(ID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>52</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getHeight()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>58</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>65</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>66</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>73</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>75</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to subtractRow(IID)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexSolver::incrementIterationsCounter()V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>44</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::divideRow(ID)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>75</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::subtractRow(IID)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>53</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>47</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexSolver::getPivotColumn</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to java/lang/Integer::intValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexSolver::getPivotRow</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to java/lang/Integer::intValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>35</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to java/lang/Integer::intValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to java/lang/Integer::intValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>52</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to java/lang/Integer::intValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>65</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to java/lang/Integer::intValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>66</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>73</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to java/lang/Integer::intValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>22</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>59</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>22</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>59</index><block>14</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>53</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>53</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexSolver::incrementIterationsCounter</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::divideRow</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doIteration</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>75</index><block>15</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::subtractRow</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>192</lineNumber><mutator>MethodNameMutator_0</mutator><index>41</index><block>40</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.SimplexTableau.getSolution()Lorg/apache/commons/math/optimization/RealPointValuePair; is replaced by an instantiation of type org.apache.commons.math.optimization.RealPointValuePair using ([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>192</lineNumber><mutator>MethodNameMutator_4</mutator><index>41</index><block>40</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.SimplexTableau.getSolution()Lorg/apache/commons/math/optimization/RealPointValuePair; is replaced by an instantiation of type org.apache.commons.math.optimization.RealPointValuePair using ([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to f is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to constraints is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to goalType is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>12</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to restrictToNonNegative is guarded using value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>14</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to epsilon is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>14</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to epsilon is guarded using field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>21</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to solvePhase1 with a call to doIteration</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>173ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>30</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to isOptimal with a call to isPhase1Solved</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>30</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexSolver::isOptimal(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>41</index><block>40</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getSolution()Lorg/apache/commons/math/optimization/RealPointValuePair; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to f is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to constraints is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to goalType is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>12</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to restrictToNonNegative is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>14</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to epsilon is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>21</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to solvePhase1(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>25</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to discardArtificialVariables()V is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>30</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to isOptimal(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>192</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>41</index><block>40</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to getSolution()Lorg/apache/commons/math/optimization/RealPointValuePair; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>21</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexSolver::solvePhase1(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>188</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>25</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::discardArtificialVariables()V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>15</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexSolver::isOptimal</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>40</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getSolution</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>42</index><block>40</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced return value with null for org/apache/commons/math/optimization/linear/SimplexSolver::doOptimize</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>31</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>31</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>40</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>mutated return of Object value for org/apache/commons/math/optimization/linear/SimplexSolver::doOptimize to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexSolver::solvePhase1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>38</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::discardArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>64</lineNumber><mutator>MethodNameMutator_0</mutator><index>42</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method java.lang.Integer.valueOf(I)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>64</lineNumber><mutator>MethodNameMutator_4</mutator><index>42</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method java.lang.Integer.valueOf(I)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>42</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>42</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>42</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>42</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>42</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>42</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>42</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>42</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>42</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>42</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>42</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>42</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>29</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to epsilon is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>29</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to epsilon is guarded using local minValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>29</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to epsilon is guarded using field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>29</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to field epsilon is replaced by access to local minValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>27</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local minValue is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>27</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local minValue is replaced by access to field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getWidth with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getNumObjectiveFunctions with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getWidth with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>26</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>37</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>29</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to epsilon is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>29</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to epsilon is guarded returning local minPos</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getWidth()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>26</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>37</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning local minPos</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getWidth()I is guarded returning local minPos</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>26</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning local minPos</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>37</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning local minPos</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>51</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced Integer return value with 0 for org/apache/commons/math/optimization/linear/SimplexSolver::getPivotColumn</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>46</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::compareTo</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>42</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to java/lang/Integer::valueOf</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>mutated return of Object value for org/apache/commons/math/optimization/linear/SimplexSolver::getPivotColumn to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotColumn</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>46</index><block>4</block><killingTests/><suspValue>0.30151134457776363</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>85</lineNumber><mutator>MethodNameMutator_0</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method java.lang.Integer.valueOf(I)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>85</lineNumber><mutator>MethodNameMutator_4</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method java.lang.Integer.valueOf(I)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to epsilon is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to epsilon is guarded using local minRatio</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to epsilon is guarded using field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to field epsilon is replaced by access to local minRatio</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to field epsilon is replaced by access to local rhs</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>15</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local i is replaced by local col to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local i is replaced by local col to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>32</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local i is replaced by local col to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>33</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local col is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>42</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local rhs is replaced by local minRatio to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>44</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local i is replaced by local col to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local col is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>51</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local ratio is replaced by local minRatio to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>52</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local minRatio is replaced by local rhs to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>57</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local ratio is replaced by local minRatio to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>58</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local minRatio is replaced by local rhs to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>61</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local i is replaced by local col to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>51</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local ratio is replaced by local rhs to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>52</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local minRatio is replaced by local ratio to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>57</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local ratio is replaced by local rhs to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>58</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local minRatio is replaced by local ratio to be defined</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>42</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local rhs is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>51</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local ratio is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>52</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local minRatio is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>57</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local ratio is replaced by access to field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>42</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local rhs is replaced by access to field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>51</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local ratio is replaced by access to field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>52</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local minRatio is replaced by access to field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>57</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local ratio is replaced by access to field epsilon</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>17</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getHeight with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>24</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getWidth with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testInfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getNumObjectiveFunctions with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>17</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getHeight with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>24</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getWidth with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>17</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getHeight()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>24</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>27</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>34</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>46</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to epsilon is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>37</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to epsilon is guarded returning local minRatioPos</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>17</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getHeight()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>24</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getWidth()I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>27</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>34</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>46</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning local minRatioPos</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>17</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getHeight()I is guarded returning local minRatioPos</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>24</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getWidth()I is guarded returning local minRatioPos</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>27</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning local minRatioPos</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>34</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning local minRatioPos</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>82</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>46</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getEntry(II)D is guarded returning local minRatioPos</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>54</index><block>8</block><killingTests/><suspValue>0.30151134457776363</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSolutionWithNegativeDecisionVariable(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testUnboundedSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testEpsilon(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testLargeModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>46ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testInfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>71</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced Integer return value with 0 for org/apache/commons/math/optimization/linear/SimplexSolver::getPivotRow</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Substituted 1.7976931348623157E308 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getHeight</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::compareTo</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to java/lang/Integer::valueOf</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>18</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>39</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>54</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>18</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>39</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>54</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>getPivotRow</mutatedMethod><methodDescription>(ILorg/apache/commons/math/optimization/linear/SimplexTableau;)Ljava/lang/Integer;</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>71</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>mutated return of Object value for org/apache/commons/math/optimization/linear/SimplexSolver::getPivotRow to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>30</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to epsilon is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>30</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to epsilon is guarded using field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getNumArtificialVariables with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>18</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getWidth with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getNumArtificialVariables with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>138ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>13</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getNumObjectiveFunctions with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>18</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getWidth with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumArtificialVariables()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>18</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>27</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>30</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to epsilon is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getNumArtificialVariables()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>18</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getWidth()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>27</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getEntry(II)D is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>44</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced boolean return with false for org/apache/commons/math/optimization/linear/SimplexSolver::isOptimal</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><block>29</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>43</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::compareTo</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>21</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>32</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>88ms</time></test></testsExecutionTime><patchExecutionTime>95ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>21</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>32</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>30</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isOptimal</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>39</index><block>29</block><killingTests/><suspValue>0.31622776601683794</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>30</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to epsilon is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>30</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to epsilon is guarded using field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>117ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getNumArtificialVariables with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getNumObjectiveFunctions with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>18</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getWidth with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getNumArtificialVariables with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>13</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getNumObjectiveFunctions with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>18</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getWidth with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>130ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumArtificialVariables()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumObjectiveFunctions()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>18</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getWidth()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>27</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>30</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to epsilon is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getNumArtificialVariables()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getNumObjectiveFunctions()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>18</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getWidth()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>27</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getEntry(II)D is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>44</index><block>23</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced boolean return with false for org/apache/commons/math/optimization/linear/SimplexSolver::isPhase1Solved</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>36</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced boolean return with true for org/apache/commons/math/optimization/linear/SimplexSolver::isPhase1Solved</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>43</index><block>23</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumObjectiveFunctions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>18</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getWidth</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::compareTo</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>21</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>32</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>21</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>32</index><block>20</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>23</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>isPhase1Solved</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>39</index><block>22</block><killingTests/><suspValue>0.31622776601683794</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>117ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>94ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>30</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to epsilon is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>30</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to epsilon is guarded using field DEFAULT_EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getNumArtificialVariables with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>33</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to isPhase1Solved with a call to isOptimal</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to doIteration with a call to solvePhase1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>26</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getRhsOffset with a call to getNumVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to getNumArtificialVariables with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>26</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to getRhsOffset with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getNumArtificialVariables()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>33</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexSolver::isPhase1Solved(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>26</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getRhsOffset()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>27</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexTableau::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>30</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to epsilon is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>30</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to epsilon is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>30</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the access to epsilon is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getNumArtificialVariables()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>33</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to isPhase1Solved(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to doIteration(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>26</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getRhsOffset()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>27</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getNumArtificialVariables()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>13</index><block>33</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to isPhase1Solved(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to doIteration(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>26</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getRhsOffset()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>27</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getNumArtificialVariables()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>13</index><block>33</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to isPhase1Solved(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to doIteration(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>26</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getRhsOffset()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>27</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getNumArtificialVariables()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>13</index><block>33</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to isPhase1Solved(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to doIteration(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>26</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getRhsOffset()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>27</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to getNumArtificialVariables()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>171</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>13</index><block>33</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to isPhase1Solved(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to doIteration(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>26</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getRhsOffset()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>27</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>19</index><block>34</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to org.apache.commons.math.optimization.linear.SimplexSolver::doIteration(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>33</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getNumArtificialVariables</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>33</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexSolver::isPhase1Solved</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getRhsOffset</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>27</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexTableau::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::equals</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>33</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>32</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>31</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>33</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>32</index><block>35</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>SimplexSolver.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.SimplexSolver</mutatedClass><mutatedMethod>solvePhase1</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/SimplexTableau;)V</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>19</index><block>34</block><killingTests/><suspValue>0.31622776601683794</suspValue><description>removed call to org/apache/commons/math/optimization/linear/SimplexSolver::doIteration</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the call to copyIn([[D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the call to copyIn([[D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the call to copyIn([[D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the call to copyIn([[D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the call to copyIn([[D)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>95</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the call to org.apache.commons.math.linear.RealMatrixImpl::copyIn([[D)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed call to org/apache/commons/math/linear/RealMatrixImpl::copyIn</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>copyIn</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>access to local in is replaced by access to field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>copyIn</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the call to setSubMatrix([[DII)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>copyIn</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the call to setSubMatrix([[DII)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>copyIn</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the call to setSubMatrix([[DII)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>copyIn</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the call to setSubMatrix([[DII)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>copyIn</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the call to setSubMatrix([[DII)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>copyIn</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>622</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the call to org.apache.commons.math.linear.RealMatrixImpl::setSubMatrix([[DII)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>copyIn</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>copyIn</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>copyIn</mutatedMethod><methodDescription>([[D)V</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>28</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed call to org/apache/commons/math/linear/RealMatrixImpl::setSubMatrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>7</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>16</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>7</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>16</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getData()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>7</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getData()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>16</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getData()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getDataRef()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>7</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getDataRef()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>16</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getDataRef()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::copyOut()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>7</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::copyOut()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>16</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::copyOut()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to data is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>7</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to data is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>16</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to data is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>26</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>21</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced int return with 0 for org/apache/commons/math/linear/RealMatrixImpl::getColumnDimension</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>24</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>25</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>27</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>11</index><block>17</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>catch type java/lang/ArrayIndexOutOfBoundsException is replaced with java/lang/IndexOutOfBoundsException</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getData()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getDataRef()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::copyOut()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>local row is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>local column is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>the access to data is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>10</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/linear/RealMatrixImpl::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>16</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/linear/RealMatrixImpl::getEntry</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>23</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>23</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getData()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>23</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getData()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getDataRef()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>10</index><block>23</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getDataRef()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::copyOut()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>10</index><block>23</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::copyOut()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to data is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>23</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to data is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>22</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>13</index><block>23</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced int return with 0 for org/apache/commons/math/linear/RealMatrixImpl::getRowDimension</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>21</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>23</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>372</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>13</index><block>19</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>catch type java/lang/ArrayIndexOutOfBoundsException is replaced with java/lang/IndexOutOfBoundsException</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>18</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>18</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>18</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getData()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>18</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getDataRef()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>18</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::copyOut()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>18</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>local row is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>18</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>local column is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>18</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>the access to data is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>18</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>the access to data is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setEntry</mutatedMethod><methodDescription>(IID)V</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>18</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.14285714285714285</suspValue><description>the access to data is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>87</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>125</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded using local subMatrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>87</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded using local subMatrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>125</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded using local subMatrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>87</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>125</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getData()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>79</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::copyIn([[D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>87</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getData()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>125</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getData()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getDataRef()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>87</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getDataRef()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>125</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::getDataRef()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::copyOut()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>87</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::copyOut()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>125</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to field org.apache.commons.math.linear.RealMatrixImpl.data is replaced by the call to org.apache.commons.math.linear.RealMatrixImpl::copyOut()[[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>access to field data is replaced by access to local subMatrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>79</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>access to field data is replaced by access to local subMatrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>87</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>access to field data is replaced by access to local subMatrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>125</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>access to field data is replaced by access to local subMatrix</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>315</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local row is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>320</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local column is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local nRows is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>63</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local nCols is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>77</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local nCols is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>85</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local i is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>336</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>93</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local i is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>336</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>96</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local nCols is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>121</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local i is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>126</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local i is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>127</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local row is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>130</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local column is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>131</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local nCols is replaced by local row to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>45</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local nRows is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>63</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local nCols is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>77</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local nCols is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>85</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local i is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>336</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>93</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local i is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>336</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>96</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local nCols is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>121</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local i is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>126</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local i is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>127</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local row is replaced by local nRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>130</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local column is replaced by local nRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>131</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local nCols is replaced by local column to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>331</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>63</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local nCols is replaced by local nRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>77</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local nCols is replaced by local nRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>85</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local i is replaced by local nRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>336</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>93</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local i is replaced by local nRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>336</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>96</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local nCols is replaced by local nRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>121</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local i is replaced by local nRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>126</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local i is replaced by local nRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>127</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local row is replaced by local nCols to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>130</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local column is replaced by local nCols to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>131</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local nCols is replaced by local nRows to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>85</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local i is replaced by local nCols to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>336</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>93</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local i is replaced by local nCols to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>336</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>96</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local nCols is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>121</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local i is replaced by local nCols to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>126</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local i is replaced by local nCols to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>127</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local row is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>130</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local column is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>131</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>local nCols is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>40</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>access to local subMatrix is replaced by access to field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>56</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>access to local subMatrix is replaced by access to field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>75</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>access to local subMatrix is replaced by access to field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>336</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>92</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>access to local subMatrix is replaced by access to field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>120</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>access to local subMatrix is replaced by access to field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>87</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>125</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>87</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>125</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>314</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>87</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>125</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>the access to data is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>89</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>57</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>82</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>123</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>106ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>46</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>64</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>97</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>46</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>64</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>97</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>89</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>89</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>132</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>removed call to java/lang/System::arraycopy</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealMatrixImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealMatrixImpl</mutatedClass><mutatedMethod>setSubMatrix</mutatedMethod><methodDescription>([[DII)V</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>79</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.11470786693528087</suspValue><description>Removed assignment to member variable data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to equals(DDD)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>local eps is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>15</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>local x is replaced by local eps to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>local y is replaced by local eps to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>local eps is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>local x is replaced by local eps to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>15</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>local y is replaced by local eps to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local x is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local y is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local eps is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local x is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local y is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local x is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local y is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local eps is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local x is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>15</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local y is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local x is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local y is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local eps is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local x is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>369</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>15</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>access to local y is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::equals</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::compareTo</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::compareTo</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>51ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>17</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>compareTo</mutatedMethod><methodDescription>(DDD)I</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>10</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>access to local x is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>access to local y is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>10</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>access to local x is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>access to local y is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>access to local x is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>access to local y is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>10</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>access to local x is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>access to local y is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>access to local x is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>access to local y is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>10</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>access to local x is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>access to local y is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>20</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced boolean return with false for org/apache/commons/math/util/MathUtils::equals</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>20</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced boolean return with true for org/apache/commons/math/util/MathUtils::equals</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>8</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>9</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.10206207261596577</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals([D[D)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>11</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>local eps is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>3</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local eps to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>local y is replaced by local eps to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>7</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>local y is replaced by local eps to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>119ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>8</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local eps to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>11</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>local eps is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>access to local y is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>access to local y is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>access to local eps is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>access to local y is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>access to local y is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>8</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>access to local eps is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>access to local y is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>7</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>access to local y is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>8</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>access to local eps is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>10</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to sin</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>10</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to cos</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>10</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to tan</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>10</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to asin</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>10</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to acos</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>10</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to atan</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>10</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to toRadians</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>10</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to toDegrees</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>10</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>10</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>10</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to java/lang/Math::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>20</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced boolean return with false for org/apache/commons/math/util/MathUtils::equals</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>20</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced boolean return with true for org/apache/commons/math/util/MathUtils::equals</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>12</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::equals</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>removed call to java/lang/Math::abs</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>10</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>13</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>13</index><block>11</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDD)Z</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>13</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.25</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>access to field data is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>the call to [D::clone()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>removed call to [D::clone</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.09053574604251853</suspValue><description>Removed assignment to member variable data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>1287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>1287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>1287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>the access to field org.apache.commons.math.linear.RealVectorImpl.data is replaced by the call to org.apache.commons.math.linear.RealVectorImpl::getData()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>1287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>the access to field org.apache.commons.math.linear.RealVectorImpl.data is replaced by the call to org.apache.commons.math.linear.RealVectorImpl::getDataRef()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>1287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>the access to field org.apache.commons.math.linear.RealVectorImpl.data is replaced by the call to org.apache.commons.math.linear.RealVectorImpl::toArray()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>1287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>the access to data is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>1287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>the access to data is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>1287</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>the access to data is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>1287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>1287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>checkVectorDimensions</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>1287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to checkVectorDimensions(I)V with a call to checkVectorDimensions(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to checkVectorDimensions(I)V with a call to checkVectorDimensions(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to checkVectorDimensions(I)V with a call to checkVectorDimensions(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to checkVectorDimensions(I)V with a call to checkVectorDimensions(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to checkVectorDimensions(I)V with a call to checkVectorDimensions(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to checkVectorDimensions(I)V with a call to checkVectorDimensions(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>25</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to data is guarded using local v</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>25</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to data is guarded using local v</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>132ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>25</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to field org.apache.commons.math.linear.RealVectorImpl.data is replaced by the call to org.apache.commons.math.linear.RealVectorImpl::getData()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>25</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to field org.apache.commons.math.linear.RealVectorImpl.data is replaced by the call to org.apache.commons.math.linear.RealVectorImpl::getData()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to field org.apache.commons.math.linear.RealVectorImpl.data is replaced by the call to org.apache.commons.math.linear.RealVectorImpl::getDataRef()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>25</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to field org.apache.commons.math.linear.RealVectorImpl.data is replaced by the call to org.apache.commons.math.linear.RealVectorImpl::getDataRef()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to field org.apache.commons.math.linear.RealVectorImpl.data is replaced by the call to org.apache.commons.math.linear.RealVectorImpl::toArray()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>25</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to field org.apache.commons.math.linear.RealVectorImpl.data is replaced by the call to org.apache.commons.math.linear.RealVectorImpl::toArray()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to field data is replaced by access to local v</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>25</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to field data is replaced by access to local v</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local v is replaced by access to field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local v is replaced by access to field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to checkVectorDimensions with a call to checkIndex</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to data is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>25</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to data is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>886</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to data is guarded returning local dot</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>887</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>25</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the access to data is guarded returning local dot</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to checkVectorDimensions(I)V is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to org.apache.commons.math.linear.RealVectorImpl::checkVectorDimensions(I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>886</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>885</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>886</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>886</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>889</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>41</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/linear/RealVectorImpl::dotProduct</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>886</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>886</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>889</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/linear/RealVectorImpl::dotProduct</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>dotProduct</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>884</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed call to org/apache/commons/math/linear/RealVectorImpl::checkVectorDimensions</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>854</lineNumber><mutator>MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the call to factory method [D.clone()Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>854</lineNumber><mutator>MethodNameMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the call to factory method [D.clone()Ljava/lang/Object; is replaced by an instantiation of type org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle using (DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>854</lineNumber><mutator>MethodNameMutator_3</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the call to factory method [D.clone()Ljava/lang/Object; is replaced by an instantiation of type org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle using (DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>854</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>854</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>854</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math.linear.RealVectorImpl.data is replaced by the call to org.apache.commons.math.linear.RealVectorImpl::getData()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>854</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math.linear.RealVectorImpl.data is replaced by the call to org.apache.commons.math.linear.RealVectorImpl::getDataRef()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>854</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to field org.apache.commons.math.linear.RealVectorImpl.data is replaced by the call to org.apache.commons.math.linear.RealVectorImpl::toArray()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>854</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the call to [D::clone()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>854</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to data is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>854</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the access to data is guarded returning field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>854</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>854</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>removed call to [D::clone</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>replaced return value with null for org/apache/commons/math/linear/RealVectorImpl::getData</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>854</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.17677669529663687</suspValue><description>mutated return of Object value for org/apache/commons/math/linear/RealVectorImpl::getData to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.linear.RealVectorImpl.data is replaced by the call to org.apache.commons.math.linear.RealVectorImpl::getData()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.linear.RealVectorImpl.data is replaced by the call to org.apache.commons.math.linear.RealVectorImpl::getDataRef()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to field org.apache.commons.math.linear.RealVectorImpl.data is replaced by the call to org.apache.commons.math.linear.RealVectorImpl::toArray()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1157</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>the access to data is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced int return with 0 for org/apache/commons/math/linear/RealVectorImpl::getDimension</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealVectorImpl.java</sourceFile><mutatedClass>org.apache.commons.math.linear.RealVectorImpl</mutatedClass><mutatedMethod>getDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>1157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>5</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1091089451179962</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to setMaxIterations(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>55ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to setMaxIterations(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to setMaxIterations(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to setMaxIterations(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to setMaxIterations(I)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.AbstractLinearOptimizer::setMaxIterations(I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Substituted 100 with 101</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/AbstractLinearOptimizer::setMaxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to iterations is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to maxIterations is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to iterations is guarded using field DEFAULT_MAX_ITERATIONS</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to maxIterations is guarded using field DEFAULT_MAX_ITERATIONS</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.iterations is replaced by the call to org.apache.commons.math.optimization.linear.AbstractLinearOptimizer::getMaxIterations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.iterations is replaced by the call to org.apache.commons.math.optimization.linear.AbstractLinearOptimizer::setMaxIterations(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.maxIterations is replaced by the call to org.apache.commons.math.optimization.linear.AbstractLinearOptimizer::getMaxIterations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.iterations is replaced by the call to org.apache.commons.math.optimization.linear.AbstractLinearOptimizer::getIterations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.maxIterations is replaced by the call to org.apache.commons.math.optimization.linear.AbstractLinearOptimizer::getIterations()I</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced access to iterations with an access to maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced access to iterations with an access to maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced access to maxIterations with an access to iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to iterations is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to maxIterations is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to iterations is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to maxIterations is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to iterations is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to maxIterations is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>incrementIterationsCounter</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Removed assignment to member variable iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>108</lineNumber><mutator>MethodNameMutator_0</mutator><index>29</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.doOptimize()Lorg/apache/commons/math/optimization/RealPointValuePair; is replaced by an instantiation of type org.apache.commons.math.optimization.RealPointValuePair using ([DDZ)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>108</lineNumber><mutator>MethodNameMutator_4</mutator><index>29</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.doOptimize()Lorg/apache/commons/math/optimization/RealPointValuePair; is replaced by an instantiation of type org.apache.commons.math.optimization.RealPointValuePair using ([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>25</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.iterations is replaced by the call to org.apache.commons.math.optimization.linear.AbstractLinearOptimizer::setMaxIterations(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>105</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>25</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced access to iterations with an access to maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to field f is replaced by access to local f</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>10</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to field constraints is replaced by access to local constraints</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>15</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to field goalType is replaced by access to local goalType</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>20</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to field restrictToNonNegative is replaced by access to local restrictToNonNegative</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testUnboundedSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testInfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local f is replaced by access to field f</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>9</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local constraints is replaced by access to field constraints</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local goalType is replaced by access to field goalType</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>19</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local restrictToNonNegative is replaced by access to field restrictToNonNegative</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testUnboundedSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testInfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>29</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math.optimization.linear.AbstractLinearOptimizer::doOptimize()Lorg/apache/commons/math/optimization/RealPointValuePair; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>29</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to doOptimize()Lorg/apache/commons/math/optimization/RealPointValuePair; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math/optimization/linear/AbstractLinearOptimizer::doOptimize</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>30</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced return value with null for org/apache/commons/math/optimization/linear/AbstractLinearOptimizer::optimize</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>mutated return of Object value for org/apache/commons/math/optimization/linear/AbstractLinearOptimizer::optimize to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Removed assignment to member variable f</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Removed assignment to member variable constraints</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Removed assignment to member variable goalType</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Removed assignment to member variable restrictToNonNegative</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testTrivialModel(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testSimplexSolver(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testRestrictVariablesToNonNegative(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testUnboundedSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMinimization(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testModelWithNoArtificialVars(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testInfeasibleSolution(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(Lorg/apache/commons/math/optimization/linear/LinearObjectiveFunction;Ljava/util/Collection;Lorg/apache/commons/math/optimization/GoalType;Z)Lorg/apache/commons/math/optimization/RealPointValuePair;</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>25</index><block>6</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Removed assignment to member variable iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.apache.commons.math.optimization.linear.AbstractLinearOptimizer.maxIterations is replaced by the call to org.apache.commons.math.optimization.linear.AbstractLinearOptimizer::setMaxIterations(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced access to maxIterations with an access to iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to field maxIterations is replaced by access to local maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local maxIterations is replaced by access to field DEFAULT_MAX_ITERATIONS</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local maxIterations is replaced by access to field maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>access to local maxIterations is replaced by access to field iterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLinearOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.AbstractLinearOptimizer</mutatedClass><mutatedMethod>setMaxIterations</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Removed assignment to member variable maxIterations</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;D)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field coefficients is replaced by access to local coefficients</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;D)V</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field constantTerm is replaced by access to local constantTerm</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;D)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable coefficients</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;D)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable constantTerm</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;D)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;[D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;[D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;[D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;[D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;D)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;[D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;[D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;D)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;D)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;D)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;D)V with a call to &#60;init&#62;([DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed call to org/apache/commons/math/linear/RealVectorImpl::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getCoefficients</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to coefficients is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>86ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getCoefficients</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to coefficients is guarded using field coefficients</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getCoefficients</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.LinearObjectiveFunction.coefficients is replaced by the call to org.apache.commons.math.optimization.linear.LinearObjectiveFunction::getCoefficients()Lorg/apache/commons/math/linear/RealVector;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getCoefficients</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to coefficients is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getCoefficients</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to coefficients is guarded returning field coefficients</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getCoefficients</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced return value with null for org/apache/commons/math/optimization/linear/LinearObjectiveFunction::getCoefficients</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getCoefficients</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>mutated return of Object value for org/apache/commons/math/optimization/linear/LinearObjectiveFunction::getCoefficients to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getConstantTerm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to constantTerm is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getConstantTerm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to constantTerm is guarded using field constantTerm</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getConstantTerm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.LinearObjectiveFunction.constantTerm is replaced by the call to org.apache.commons.math.optimization.linear.LinearObjectiveFunction::getConstantTerm()D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getConstantTerm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to constantTerm is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getConstantTerm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to constantTerm is guarded returning field constantTerm</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getConstantTerm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/optimization/linear/LinearObjectiveFunction::getConstantTerm</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getConstantTerm</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/optimization/linear/LinearObjectiveFunction::getConstantTerm</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to dotProduct([D)D with a call to dotProduct(Lorg/apache/commons/math/linear/RealVector;)D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to dotProduct([D)D with a call to dotProduct(Lorg/apache/commons/math/linear/RealVector;)D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to dotProduct([D)D with a call to dotProduct(Lorg/apache/commons/math/linear/RealVector;)D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to dotProduct([D)D with a call to dotProduct(Lorg/apache/commons/math/linear/RealVector;)D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to dotProduct([D)D with a call to dotProduct(Lorg/apache/commons/math/linear/RealVector;)D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to dotProduct([D)D with a call to dotProduct(Lorg/apache/commons/math/linear/RealVector;)D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to coefficients is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to constantTerm is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to coefficients is guarded using field coefficients</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to constantTerm is guarded using field constantTerm</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to field org.apache.commons.math.optimization.linear.LinearObjectiveFunction.coefficients is replaced by the call to org.apache.commons.math.optimization.linear.LinearObjectiveFunction::getCoefficients()Lorg/apache/commons/math/linear/RealVector;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to field org.apache.commons.math.optimization.linear.LinearObjectiveFunction.constantTerm is replaced by the call to org.apache.commons.math.optimization.linear.LinearObjectiveFunction::getConstantTerm()D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to dotProduct with a call to getDistance</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to dotProduct with a call to getL1Distance</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to dotProduct with a call to getLInfDistance</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to org.apache.commons.math.linear.RealVector::dotProduct([D)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to coefficients is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to constantTerm is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to coefficients is guarded returning field constantTerm</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>8</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the access to constantTerm is guarded returning field constantTerm</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to dotProduct([D)D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to dotProduct([D)D is guarded returning field constantTerm</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math/linear/RealVector::dotProduct</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/optimization/linear/LinearObjectiveFunction::getValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearObjectiveFunction.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearObjectiveFunction</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>([D)D</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/optimization/linear/LinearObjectiveFunction::getValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field coefficients is replaced by access to local coefficients</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>101</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field relationship is replaced by access to local relationship</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>113ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>102</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to field value is replaced by access to local value</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable coefficients</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable relationship</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>Removed assignment to member variable value</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;DLorg/apache/commons/math/optimization/linear/Relationship;Lorg/apache/commons/math/linear/RealVector;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;DLorg/apache/commons/math/optimization/linear/Relationship;Lorg/apache/commons/math/linear/RealVector;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;DLorg/apache/commons/math/optimization/linear/Relationship;Lorg/apache/commons/math/linear/RealVector;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;[D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DDLorg/apache/commons/math/optimization/linear/Relationship;[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;[D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DDLorg/apache/commons/math/optimization/linear/Relationship;[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;[D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DDLorg/apache/commons/math/optimization/linear/Relationship;[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;[D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DDLorg/apache/commons/math/optimization/linear/Relationship;[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;[D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DDLorg/apache/commons/math/optimization/linear/Relationship;[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;[D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DDLorg/apache/commons/math/optimization/linear/Relationship;[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;DLorg/apache/commons/math/optimization/linear/Relationship;Lorg/apache/commons/math/linear/RealVector;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;DLorg/apache/commons/math/optimization/linear/Relationship;Lorg/apache/commons/math/linear/RealVector;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DII)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVectorImpl;Lorg/apache/commons/math/linear/RealVectorImpl;)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;Lorg/apache/commons/math/optimization/linear/Relationship;D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/linear/RealVector;DLorg/apache/commons/math/optimization/linear/Relationship;Lorg/apache/commons/math/linear/RealVector;D)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DLorg/apache/commons/math/optimization/linear/Relationship;D)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math/linear/RealVectorImpl::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getCoefficients</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to coefficients is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getCoefficients</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to coefficients is guarded using field coefficients</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getCoefficients</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.LinearConstraint.coefficients is replaced by the call to org.apache.commons.math.optimization.linear.LinearConstraint::getCoefficients()Lorg/apache/commons/math/linear/RealVector;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getCoefficients</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to coefficients is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getCoefficients</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to coefficients is guarded returning field coefficients</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getCoefficients</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced return value with null for org/apache/commons/math/optimization/linear/LinearConstraint::getCoefficients</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getCoefficients</mutatedMethod><methodDescription>()Lorg/apache/commons/math/linear/RealVector;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>mutated return of Object value for org/apache/commons/math/optimization/linear/LinearConstraint::getCoefficients to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getRelationship</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/linear/Relationship;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to relationship is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getRelationship</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/linear/Relationship;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to relationship is guarded using field relationship</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getRelationship</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/linear/Relationship;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.LinearConstraint.relationship is replaced by the call to org.apache.commons.math.optimization.linear.LinearConstraint::getRelationship()Lorg/apache/commons/math/optimization/linear/Relationship;</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getRelationship</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/linear/Relationship;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to relationship is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getRelationship</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/linear/Relationship;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to relationship is guarded returning field relationship</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getRelationship</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/linear/Relationship;</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced return value with null for org/apache/commons/math/optimization/linear/LinearConstraint::getRelationship</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getRelationship</mutatedMethod><methodDescription>()Lorg/apache/commons/math/optimization/linear/Relationship;</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>mutated return of Object value for org/apache/commons/math/optimization/linear/LinearConstraint::getRelationship to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to value is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to value is guarded using field value</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to field org.apache.commons.math.optimization.linear.LinearConstraint.value is replaced by the call to org.apache.commons.math.optimization.linear.LinearConstraint::getValue()D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to value is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>the access to value is guarded returning field value</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/optimization/linear/LinearConstraint::getValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LinearConstraint.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.linear.LinearConstraint</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/optimization/linear/LinearConstraint::getValue</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>access to field point is replaced by access to local point</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>access to field value is replaced by access to local value</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>the call to [D::clone()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>removed call to [D::clone</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>Removed assignment to member variable point</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([DD)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>Removed assignment to member variable value</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>70</lineNumber><mutator>MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to factory method [D.clone()Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>70</lineNumber><mutator>MethodNameMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to factory method [D.clone()Ljava/lang/Object; is replaced by an instantiation of type org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle using (DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>70</lineNumber><mutator>MethodNameMutator_3</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to factory method [D.clone()Ljava/lang/Object; is replaced by an instantiation of type org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle using (DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to point is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to point is guarded using field point</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to field org.apache.commons.math.optimization.RealPointValuePair.point is replaced by the call to org.apache.commons.math.optimization.RealPointValuePair::getPoint()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to field org.apache.commons.math.optimization.RealPointValuePair.point is replaced by the call to org.apache.commons.math.optimization.RealPointValuePair::getPointRef()[D</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to [D::clone()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to point is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to point is guarded returning field point</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning field point</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed call to [D::clone</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced return value with null for org/apache/commons/math/optimization/RealPointValuePair::getPoint</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>95ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RealPointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math.optimization.RealPointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>mutated return of Object value for org/apache/commons/math/optimization/RealPointValuePair::getPoint to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</killingTests><suspValue>0.09950371902099892</suspValue><description>Removed assignment to member variable lu</description><testsExecutionTime><test><name>org.apache.commons.math.optimization.linear.SimplexSolverTest.testMath272(org.apache.commons.math.optimization.linear.SimplexSolverTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>116ms</patchExecutionTime></mutation>
</mutations>
